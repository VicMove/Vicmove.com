{
	"id": "5332109216ed1ff0fadaf75408d11cd4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (finance/VestingWallet.sol)\npragma solidity ^0.8.0;\n\n\nimport \"./Address.sol\";\nimport \"./BEPOwnable.sol\";\nimport \"./IBEP20.sol\";\n\ncontract Treasury is BEPOwnable {\n\n    address public Pool2;\n\n    /**\n     * @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\n     */\n    constructor() payable { \n        Pool2 = 0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B;\n    }\n    \n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    \n\n    function setPool2(address _Pool2) external onlyOwner {\n        Pool2 = _Pool2;\n    }  \n    /**\n     * @dev get balance.\n     */\n    function getBalanceToken(address token) public view virtual returns (uint256) {\n        return IBEP20(token).balanceOf(address(this));\n    }\n    function sentT2Pool2Token(address tokenaddress, uint256 amount) external onlyOwner {\n        uint256 newBalance = IBEP20(tokenaddress).balanceOf(address(this));\n        require(amount>0 && amount<=newBalance,\"Amount > 0 && < Balance\");\n        IBEP20(tokenaddress).transfer(Pool2, amount);\n    }\n\n    function getBalanceBNB() public view virtual returns (uint256) {\n        return address(this).balance;\n    }\n    function sentT2Pool2BNB(uint256 amount) external onlyOwner {\n        uint256 newBalance = address(this).balance;\n        require(amount>0 && amount<=newBalance,\"Amount > 0 && < Balance\");\n        payable(Pool2).transfer(amount);\n    }\n\n    receive() external payable {}\n}"
			},
			"IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"BEPOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./BEPContext.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract BEPOwnable is BEPContext {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Returns true if the caller is the current owner.\n   */\n  function isOwner() public view returns (bool) {\n    return _msgSender() == _owner;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"BEPContext.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract BEPContext {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor() {}\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this;\n    return msg.data;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:8240  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:8240  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPContext.sol": {
				"BEPContext": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPContext.sol\":\"BEPContext\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPOwnable.sol": {
				"BEPOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPOwnable.sol\":\"BEPOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "BEPOwnable.sol:BEPOwnable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Treasury.sol": {
				"Treasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Pool2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalanceBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalanceToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sentT2Pool2BNB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenaddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sentT2Pool2Token",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Pool2",
									"type": "address"
								}
							],
							"name": "setPool2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
							},
							"getBalanceToken(address)": {
								"details": "get balance."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setPool2(address)": {
								"details": "The contract should be able to receive Eth."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Treasury.sol\":194:1509  contract Treasury is BEPOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"BEPOwnable.sol\":716:733  address msgSender */\n  0x00\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  tag_6\n    /* \"BEPOwnable.sol\":736:746  _msgSender */\n  shl(0x20, tag_7)\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"BEPOwnable.sol\":716:748  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEPOwnable.sol\":763:772  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":754:760  _owner */\n  0x00\n  dup1\n    /* \"BEPOwnable.sol\":754:772  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEPOwnable.sol\":816:825  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEPOwnable.sol\":812:813  0 */\n  0x00\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEPOwnable.sol\":710:831  {... */\n  pop\n    /* \"Treasury.sol\":410:452  0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B */\n  0xfa0e47a2d6a58b9fd7ca1d4bfaadd11e8811824b\n    /* \"Treasury.sol\":402:407  Pool2 */\n  0x01\n  0x00\n    /* \"Treasury.sol\":402:452  Pool2 = 0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Treasury.sol\":194:1509  contract Treasury is BEPOwnable {... */\n  jump(tag_9)\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\ntag_7:\n    /* \"BEPContext.sol\":805:820  address payable */\n  0x00\n    /* \"BEPContext.sol\":843:853  msg.sender */\n  caller\n    /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"Treasury.sol\":194:1509  contract Treasury is BEPOwnable {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Treasury.sol\":194:1509  contract Treasury is BEPOwnable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xac4b3b0a\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xac4b3b0a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbc127127\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xcc24c800\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd1f19989\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x48eca45c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8cef6437\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Treasury.sol\":679:819  function getBalanceToken(address token) public view virtual returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Treasury.sol\":824:1119  function sentT2Pool2Token(address tokenaddress, uint256 amount) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":233:253  address public Pool2 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":1125:1233  function getBalanceBNB() public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":547:631  function setPool2(address _Pool2) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Treasury.sol\":1238:1472  function sentT2Pool2BNB(uint256 amount) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Treasury.sol\":679:819  function getBalanceToken(address token) public view virtual returns (uint256) {... */\n    tag_20:\n        /* \"Treasury.sol\":748:755  uint256 */\n      0x00\n        /* \"Treasury.sol\":781:786  token */\n      dup2\n        /* \"Treasury.sol\":774:797  IBEP20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Treasury.sol\":806:810  this */\n      address\n        /* \"Treasury.sol\":774:812  IBEP20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"Treasury.sol\":767:812  return IBEP20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Treasury.sol\":679:819  function getBalanceToken(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_25:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_70\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_38\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_70:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"BEPOwnable.sol\":1724:1725  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1708:1714  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":1750:1751  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1733:1739  _owner */\n      dup1\n      0x00\n        /* \"BEPOwnable.sol\":1733:1752  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"Treasury.sol\":824:1119  function sentT2Pool2Token(address tokenaddress, uint256 amount) external onlyOwner {... */\n    tag_30:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_76\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_38\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_76:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_73\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"Treasury.sol\":917:935  uint256 newBalance */\n      0x00\n        /* \"Treasury.sol\":945:957  tokenaddress */\n      dup3\n        /* \"Treasury.sol\":938:968  IBEP20(tokenaddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Treasury.sol\":977:981  this */\n      address\n        /* \"Treasury.sol\":938:983  IBEP20(tokenaddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_84:\n        /* \"Treasury.sol\":917:983  uint256 newBalance = IBEP20(tokenaddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Treasury.sol\":1008:1009  0 */\n      0x00\n        /* \"Treasury.sol\":1001:1007  amount */\n      dup3\n        /* \"Treasury.sol\":1001:1009  amount>0 */\n      gt\n        /* \"Treasury.sol\":1001:1031  amount>0 && amount<=newBalance */\n      dup1\n      iszero\n      tag_85\n      jumpi\n      pop\n        /* \"Treasury.sol\":1021:1031  newBalance */\n      dup1\n        /* \"Treasury.sol\":1013:1019  amount */\n      dup3\n        /* \"Treasury.sol\":1013:1031  amount<=newBalance */\n      gt\n      iszero\n        /* \"Treasury.sol\":1001:1031  amount>0 && amount<=newBalance */\n    tag_85:\n        /* \"Treasury.sol\":993:1058  require(amount>0 && amount<=newBalance,\"Amount > 0 && < Balance\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"Treasury.sol\":1075:1087  tokenaddress */\n      dup3\n        /* \"Treasury.sol\":1068:1097  IBEP20(tokenaddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Treasury.sol\":1098:1103  Pool2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Treasury.sol\":1105:1111  amount */\n      dup5\n        /* \"Treasury.sol\":1068:1112  IBEP20(tokenaddress).transfer(Pool2, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      pop\n        /* \"Treasury.sol\":907:1119  {... */\n      pop\n        /* \"Treasury.sol\":824:1119  function sentT2Pool2Token(address tokenaddress, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_33:\n        /* \"BEPOwnable.sol\":937:944  address */\n      0x00\n        /* \"BEPOwnable.sol\":959:965  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":952:965  return _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_38:\n        /* \"BEPOwnable.sol\":1258:1262  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1293:1299  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      tag_98\n        /* \"BEPOwnable.sol\":1277:1287  _msgSender */\n      tag_99\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEPOwnable.sol\":1270:1299  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Treasury.sol\":233:253  address public Pool2 */\n    tag_43:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Treasury.sol\":1125:1233  function getBalanceBNB() public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"Treasury.sol\":1179:1186  uint256 */\n      0x00\n        /* \"Treasury.sol\":1205:1226  address(this).balance */\n      selfbalance\n        /* \"Treasury.sol\":1198:1226  return address(this).balance */\n      swap1\n      pop\n        /* \"Treasury.sol\":1125:1233  function getBalanceBNB() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Treasury.sol\":547:631  function setPool2(address _Pool2) external onlyOwner {... */\n    tag_52:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_102\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_38\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_102:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_73\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"Treasury.sol\":618:624  _Pool2 */\n      dup1\n        /* \"Treasury.sol\":610:615  Pool2 */\n      0x01\n      0x00\n        /* \"Treasury.sol\":610:624  Pool2 = _Pool2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Treasury.sol\":547:631  function setPool2(address _Pool2) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Treasury.sol\":1238:1472  function sentT2Pool2BNB(uint256 amount) external onlyOwner {... */\n    tag_57:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_107\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_38\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_107:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_73\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"Treasury.sol\":1307:1325  uint256 newBalance */\n      0x00\n        /* \"Treasury.sol\":1328:1349  address(this).balance */\n      selfbalance\n        /* \"Treasury.sol\":1307:1349  uint256 newBalance = address(this).balance */\n      swap1\n      pop\n        /* \"Treasury.sol\":1374:1375  0 */\n      0x00\n        /* \"Treasury.sol\":1367:1373  amount */\n      dup3\n        /* \"Treasury.sol\":1367:1375  amount>0 */\n      gt\n        /* \"Treasury.sol\":1367:1397  amount>0 && amount<=newBalance */\n      dup1\n      iszero\n      tag_111\n      jumpi\n      pop\n        /* \"Treasury.sol\":1387:1397  newBalance */\n      dup1\n        /* \"Treasury.sol\":1379:1385  amount */\n      dup3\n        /* \"Treasury.sol\":1379:1397  amount<=newBalance */\n      gt\n      iszero\n        /* \"Treasury.sol\":1367:1397  amount>0 && amount<=newBalance */\n    tag_111:\n        /* \"Treasury.sol\":1359:1424  require(amount>0 && amount<=newBalance,\"Amount > 0 && < Balance\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_88\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"Treasury.sol\":1442:1447  Pool2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Treasury.sol\":1434:1457  payable(Pool2).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Treasury.sol\":1434:1465  payable(Pool2).transfer(amount) */\n      0x08fc\n        /* \"Treasury.sol\":1458:1464  amount */\n      dup4\n        /* \"Treasury.sol\":1434:1465  payable(Pool2).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n        /* \"Treasury.sol\":1297:1472  {... */\n      pop\n        /* \"Treasury.sol\":1238:1472  function sentT2Pool2BNB(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_61:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_117\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_38\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_117:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_73\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      tag_121\n        /* \"BEPOwnable.sol\":1983:1991  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":1964:1982  _transferOwnership */\n      tag_122\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_121:\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n    tag_99:\n        /* \"BEPContext.sol\":805:820  address payable */\n      0x00\n        /* \"BEPContext.sol\":843:853  msg.sender */\n      caller\n        /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n    tag_122:\n        /* \"BEPOwnable.sol\":2179:2180  0 */\n      0x00\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2159:2167  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEPOwnable.sol\":2151:2224  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"BEPOwnable.sol\":2264:2272  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2256:2262  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":2288:2296  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2279:2285  _owner */\n      0x00\n      dup1\n        /* \"BEPOwnable.sol\":2279:2296  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_129:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_131\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_133:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_135\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_137:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_139\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_141:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_143\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_140\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_19:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":665:784   */\n    tag_145:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_148\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_129\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1398   */\n    tag_29:\n        /* \"#utility.yul\":992:998   */\n      0x00\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":1049:1051   */\n      0x40\n        /* \"#utility.yul\":1037:1046   */\n      dup4\n        /* \"#utility.yul\":1028:1035   */\n      dup6\n        /* \"#utility.yul\":1024:1047   */\n      sub\n        /* \"#utility.yul\":1020:1052   */\n      slt\n        /* \"#utility.yul\":1017:1136   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":1055:1134   */\n      tag_151\n      tag_147\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1017:1136   */\n    tag_150:\n        /* \"#utility.yul\":1175:1176   */\n      0x00\n        /* \"#utility.yul\":1200:1253   */\n      tag_152\n        /* \"#utility.yul\":1245:1252   */\n      dup6\n        /* \"#utility.yul\":1236:1242   */\n      dup3\n        /* \"#utility.yul\":1225:1234   */\n      dup7\n        /* \"#utility.yul\":1221:1243   */\n      add\n        /* \"#utility.yul\":1200:1253   */\n      tag_129\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1190:1253   */\n      swap3\n      pop\n        /* \"#utility.yul\":1146:1263   */\n      pop\n        /* \"#utility.yul\":1302:1304   */\n      0x20\n        /* \"#utility.yul\":1328:1381   */\n      tag_153\n        /* \"#utility.yul\":1373:1380   */\n      dup6\n        /* \"#utility.yul\":1364:1370   */\n      dup3\n        /* \"#utility.yul\":1353:1362   */\n      dup7\n        /* \"#utility.yul\":1349:1371   */\n      add\n        /* \"#utility.yul\":1328:1381   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1318:1381   */\n      swap2\n      pop\n        /* \"#utility.yul\":1273:1391   */\n      pop\n        /* \"#utility.yul\":924:1398   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1749   */\n    tag_95:\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1520:1522   */\n      0x20\n        /* \"#utility.yul\":1508:1517   */\n      dup3\n        /* \"#utility.yul\":1499:1506   */\n      dup5\n        /* \"#utility.yul\":1495:1518   */\n      sub\n        /* \"#utility.yul\":1491:1523   */\n      slt\n        /* \"#utility.yul\":1488:1607   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1526:1605   */\n      tag_156\n      tag_147\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1488:1607   */\n    tag_155:\n        /* \"#utility.yul\":1646:1647   */\n      0x00\n        /* \"#utility.yul\":1671:1732   */\n      tag_157\n        /* \"#utility.yul\":1724:1731   */\n      dup5\n        /* \"#utility.yul\":1715:1721   */\n      dup3\n        /* \"#utility.yul\":1704:1713   */\n      dup6\n        /* \"#utility.yul\":1700:1722   */\n      add\n        /* \"#utility.yul\":1671:1732   */\n      tag_133\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1661:1732   */\n      swap2\n      pop\n        /* \"#utility.yul\":1617:1742   */\n      pop\n        /* \"#utility.yul\":1404:1749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1755:2084   */\n    tag_56:\n        /* \"#utility.yul\":1814:1820   */\n      0x00\n        /* \"#utility.yul\":1863:1865   */\n      0x20\n        /* \"#utility.yul\":1851:1860   */\n      dup3\n        /* \"#utility.yul\":1842:1849   */\n      dup5\n        /* \"#utility.yul\":1838:1861   */\n      sub\n        /* \"#utility.yul\":1834:1866   */\n      slt\n        /* \"#utility.yul\":1831:1950   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_160\n      tag_147\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1831:1950   */\n    tag_159:\n        /* \"#utility.yul\":1989:1990   */\n      0x00\n        /* \"#utility.yul\":2014:2067   */\n      tag_161\n        /* \"#utility.yul\":2059:2066   */\n      dup5\n        /* \"#utility.yul\":2050:2056   */\n      dup3\n        /* \"#utility.yul\":2039:2048   */\n      dup6\n        /* \"#utility.yul\":2035:2057   */\n      add\n        /* \"#utility.yul\":2014:2067   */\n      tag_137\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2004:2067   */\n      swap2\n      pop\n        /* \"#utility.yul\":1960:2077   */\n      pop\n        /* \"#utility.yul\":1755:2084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2090:2441   */\n    tag_68:\n        /* \"#utility.yul\":2160:2166   */\n      0x00\n        /* \"#utility.yul\":2209:2211   */\n      0x20\n        /* \"#utility.yul\":2197:2206   */\n      dup3\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2184:2207   */\n      sub\n        /* \"#utility.yul\":2180:2212   */\n      slt\n        /* \"#utility.yul\":2177:2296   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2215:2294   */\n      tag_164\n      tag_147\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2177:2296   */\n    tag_163:\n        /* \"#utility.yul\":2335:2336   */\n      0x00\n        /* \"#utility.yul\":2360:2424   */\n      tag_165\n        /* \"#utility.yul\":2416:2423   */\n      dup5\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup6\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2360:2424   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2350:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2306:2434   */\n      pop\n        /* \"#utility.yul\":2090:2441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_166:\n        /* \"#utility.yul\":2534:2558   */\n      tag_168\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2680   */\n    tag_170:\n        /* \"#utility.yul\":2652:2673   */\n      tag_172\n        /* \"#utility.yul\":2667:2672   */\n      dup2\n        /* \"#utility.yul\":2652:2673   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2647:2650   */\n      dup3\n        /* \"#utility.yul\":2640:2674   */\n      mstore\n        /* \"#utility.yul\":2571:2680   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3052   */\n    tag_174:\n        /* \"#utility.yul\":2828:2831   */\n      0x00\n        /* \"#utility.yul\":2849:2916   */\n      tag_176\n        /* \"#utility.yul\":2913:2915   */\n      0x26\n        /* \"#utility.yul\":2908:2911   */\n      dup4\n        /* \"#utility.yul\":2849:2916   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2842:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2925:3018   */\n      tag_178\n        /* \"#utility.yul\":3014:3017   */\n      dup3\n        /* \"#utility.yul\":2925:3018   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3043:3045   */\n      0x40\n        /* \"#utility.yul\":3038:3041   */\n      dup3\n        /* \"#utility.yul\":3034:3046   */\n      add\n        /* \"#utility.yul\":3027:3046   */\n      swap1\n      pop\n        /* \"#utility.yul\":2686:3052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3058:3424   */\n    tag_180:\n        /* \"#utility.yul\":3200:3203   */\n      0x00\n        /* \"#utility.yul\":3221:3288   */\n      tag_182\n        /* \"#utility.yul\":3285:3287   */\n      0x17\n        /* \"#utility.yul\":3280:3283   */\n      dup4\n        /* \"#utility.yul\":3221:3288   */\n      tag_177\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3214:3288   */\n      swap2\n      pop\n        /* \"#utility.yul\":3297:3390   */\n      tag_183\n        /* \"#utility.yul\":3386:3389   */\n      dup3\n        /* \"#utility.yul\":3297:3390   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3415:3417   */\n      0x20\n        /* \"#utility.yul\":3410:3413   */\n      dup3\n        /* \"#utility.yul\":3406:3418   */\n      add\n        /* \"#utility.yul\":3399:3418   */\n      swap1\n      pop\n        /* \"#utility.yul\":3058:3424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3430:3796   */\n    tag_185:\n        /* \"#utility.yul\":3572:3575   */\n      0x00\n        /* \"#utility.yul\":3593:3660   */\n      tag_187\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3652:3655   */\n      dup4\n        /* \"#utility.yul\":3593:3660   */\n      tag_177\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3586:3660   */\n      swap2\n      pop\n        /* \"#utility.yul\":3669:3762   */\n      tag_188\n        /* \"#utility.yul\":3758:3761   */\n      dup3\n        /* \"#utility.yul\":3669:3762   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3787:3789   */\n      0x20\n        /* \"#utility.yul\":3782:3785   */\n      dup3\n        /* \"#utility.yul\":3778:3790   */\n      add\n        /* \"#utility.yul\":3771:3790   */\n      swap1\n      pop\n        /* \"#utility.yul\":3430:3796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:3920   */\n    tag_190:\n        /* \"#utility.yul\":3889:3913   */\n      tag_192\n        /* \"#utility.yul\":3907:3912   */\n      dup2\n        /* \"#utility.yul\":3889:3913   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3884:3887   */\n      dup3\n        /* \"#utility.yul\":3877:3914   */\n      mstore\n        /* \"#utility.yul\":3802:3920   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3926:4148   */\n    tag_35:\n        /* \"#utility.yul\":4019:4023   */\n      0x00\n        /* \"#utility.yul\":4057:4059   */\n      0x20\n        /* \"#utility.yul\":4046:4055   */\n      dup3\n        /* \"#utility.yul\":4042:4060   */\n      add\n        /* \"#utility.yul\":4034:4060   */\n      swap1\n      pop\n        /* \"#utility.yul\":4070:4141   */\n      tag_195\n        /* \"#utility.yul\":4138:4139   */\n      0x00\n        /* \"#utility.yul\":4127:4136   */\n      dup4\n        /* \"#utility.yul\":4123:4140   */\n      add\n        /* \"#utility.yul\":4114:4120   */\n      dup5\n        /* \"#utility.yul\":4070:4141   */\n      tag_166\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3926:4148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4154:4486   */\n    tag_90:\n        /* \"#utility.yul\":4275:4279   */\n      0x00\n        /* \"#utility.yul\":4313:4315   */\n      0x40\n        /* \"#utility.yul\":4302:4311   */\n      dup3\n        /* \"#utility.yul\":4298:4316   */\n      add\n        /* \"#utility.yul\":4290:4316   */\n      swap1\n      pop\n        /* \"#utility.yul\":4326:4397   */\n      tag_197\n        /* \"#utility.yul\":4394:4395   */\n      0x00\n        /* \"#utility.yul\":4383:4392   */\n      dup4\n        /* \"#utility.yul\":4379:4396   */\n      add\n        /* \"#utility.yul\":4370:4376   */\n      dup6\n        /* \"#utility.yul\":4326:4397   */\n      tag_166\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4407:4479   */\n      tag_198\n        /* \"#utility.yul\":4475:4477   */\n      0x20\n        /* \"#utility.yul\":4464:4473   */\n      dup4\n        /* \"#utility.yul\":4460:4478   */\n      add\n        /* \"#utility.yul\":4451:4457   */\n      dup5\n        /* \"#utility.yul\":4407:4479   */\n      tag_190\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4154:4486   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4492:4702   */\n    tag_40:\n        /* \"#utility.yul\":4579:4583   */\n      0x00\n        /* \"#utility.yul\":4617:4619   */\n      0x20\n        /* \"#utility.yul\":4606:4615   */\n      dup3\n        /* \"#utility.yul\":4602:4620   */\n      add\n        /* \"#utility.yul\":4594:4620   */\n      swap1\n      pop\n        /* \"#utility.yul\":4630:4695   */\n      tag_200\n        /* \"#utility.yul\":4692:4693   */\n      0x00\n        /* \"#utility.yul\":4681:4690   */\n      dup4\n        /* \"#utility.yul\":4677:4694   */\n      add\n        /* \"#utility.yul\":4668:4674   */\n      dup5\n        /* \"#utility.yul\":4630:4695   */\n      tag_170\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4492:4702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4708:5127   */\n    tag_127:\n        /* \"#utility.yul\":4874:4878   */\n      0x00\n        /* \"#utility.yul\":4912:4914   */\n      0x20\n        /* \"#utility.yul\":4901:4910   */\n      dup3\n        /* \"#utility.yul\":4897:4915   */\n      add\n        /* \"#utility.yul\":4889:4915   */\n      swap1\n      pop\n        /* \"#utility.yul\":4961:4970   */\n      dup2\n        /* \"#utility.yul\":4955:4959   */\n      dup2\n        /* \"#utility.yul\":4951:4971   */\n      sub\n        /* \"#utility.yul\":4947:4948   */\n      0x00\n        /* \"#utility.yul\":4936:4945   */\n      dup4\n        /* \"#utility.yul\":4932:4949   */\n      add\n        /* \"#utility.yul\":4925:4972   */\n      mstore\n        /* \"#utility.yul\":4989:5120   */\n      tag_202\n        /* \"#utility.yul\":5115:5119   */\n      dup2\n        /* \"#utility.yul\":4989:5120   */\n      tag_174\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4981:5120   */\n      swap1\n      pop\n        /* \"#utility.yul\":4708:5127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5133:5552   */\n    tag_88:\n        /* \"#utility.yul\":5299:5303   */\n      0x00\n        /* \"#utility.yul\":5337:5339   */\n      0x20\n        /* \"#utility.yul\":5326:5335   */\n      dup3\n        /* \"#utility.yul\":5322:5340   */\n      add\n        /* \"#utility.yul\":5314:5340   */\n      swap1\n      pop\n        /* \"#utility.yul\":5386:5395   */\n      dup2\n        /* \"#utility.yul\":5380:5384   */\n      dup2\n        /* \"#utility.yul\":5376:5396   */\n      sub\n        /* \"#utility.yul\":5372:5373   */\n      0x00\n        /* \"#utility.yul\":5361:5370   */\n      dup4\n        /* \"#utility.yul\":5357:5374   */\n      add\n        /* \"#utility.yul\":5350:5397   */\n      mstore\n        /* \"#utility.yul\":5414:5545   */\n      tag_204\n        /* \"#utility.yul\":5540:5544   */\n      dup2\n        /* \"#utility.yul\":5414:5545   */\n      tag_180\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5406:5545   */\n      swap1\n      pop\n        /* \"#utility.yul\":5133:5552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5558:5977   */\n    tag_73:\n        /* \"#utility.yul\":5724:5728   */\n      0x00\n        /* \"#utility.yul\":5762:5764   */\n      0x20\n        /* \"#utility.yul\":5751:5760   */\n      dup3\n        /* \"#utility.yul\":5747:5765   */\n      add\n        /* \"#utility.yul\":5739:5765   */\n      swap1\n      pop\n        /* \"#utility.yul\":5811:5820   */\n      dup2\n        /* \"#utility.yul\":5805:5809   */\n      dup2\n        /* \"#utility.yul\":5801:5821   */\n      sub\n        /* \"#utility.yul\":5797:5798   */\n      0x00\n        /* \"#utility.yul\":5786:5795   */\n      dup4\n        /* \"#utility.yul\":5782:5799   */\n      add\n        /* \"#utility.yul\":5775:5822   */\n      mstore\n        /* \"#utility.yul\":5839:5970   */\n      tag_206\n        /* \"#utility.yul\":5965:5969   */\n      dup2\n        /* \"#utility.yul\":5839:5970   */\n      tag_185\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5831:5970   */\n      swap1\n      pop\n        /* \"#utility.yul\":5558:5977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5983:6205   */\n    tag_22:\n        /* \"#utility.yul\":6076:6080   */\n      0x00\n        /* \"#utility.yul\":6114:6116   */\n      0x20\n        /* \"#utility.yul\":6103:6112   */\n      dup3\n        /* \"#utility.yul\":6099:6117   */\n      add\n        /* \"#utility.yul\":6091:6117   */\n      swap1\n      pop\n        /* \"#utility.yul\":6127:6198   */\n      tag_208\n        /* \"#utility.yul\":6195:6196   */\n      0x00\n        /* \"#utility.yul\":6184:6193   */\n      dup4\n        /* \"#utility.yul\":6180:6197   */\n      add\n        /* \"#utility.yul\":6171:6177   */\n      dup5\n        /* \"#utility.yul\":6127:6198   */\n      tag_190\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5983:6205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6292:6461   */\n    tag_177:\n        /* \"#utility.yul\":6376:6387   */\n      0x00\n        /* \"#utility.yul\":6410:6416   */\n      dup3\n        /* \"#utility.yul\":6405:6408   */\n      dup3\n        /* \"#utility.yul\":6398:6417   */\n      mstore\n        /* \"#utility.yul\":6450:6454   */\n      0x20\n        /* \"#utility.yul\":6445:6448   */\n      dup3\n        /* \"#utility.yul\":6441:6455   */\n      add\n        /* \"#utility.yul\":6426:6455   */\n      swap1\n      pop\n        /* \"#utility.yul\":6292:6461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6467:6563   */\n    tag_169:\n        /* \"#utility.yul\":6504:6511   */\n      0x00\n        /* \"#utility.yul\":6533:6557   */\n      tag_213\n        /* \"#utility.yul\":6551:6556   */\n      dup3\n        /* \"#utility.yul\":6533:6557   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6522:6557   */\n      swap1\n      pop\n        /* \"#utility.yul\":6467:6563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6569:6659   */\n    tag_173:\n        /* \"#utility.yul\":6603:6610   */\n      0x00\n        /* \"#utility.yul\":6646:6651   */\n      dup2\n        /* \"#utility.yul\":6639:6652   */\n      iszero\n        /* \"#utility.yul\":6632:6653   */\n      iszero\n        /* \"#utility.yul\":6621:6653   */\n      swap1\n      pop\n        /* \"#utility.yul\":6569:6659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6665:6791   */\n    tag_214:\n        /* \"#utility.yul\":6702:6709   */\n      0x00\n        /* \"#utility.yul\":6742:6784   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6735:6740   */\n      dup3\n        /* \"#utility.yul\":6731:6785   */\n      and\n        /* \"#utility.yul\":6720:6785   */\n      swap1\n      pop\n        /* \"#utility.yul\":6665:6791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6797:6874   */\n    tag_193:\n        /* \"#utility.yul\":6834:6841   */\n      0x00\n        /* \"#utility.yul\":6863:6868   */\n      dup2\n        /* \"#utility.yul\":6852:6868   */\n      swap1\n      pop\n        /* \"#utility.yul\":6797:6874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7003:7120   */\n    tag_147:\n        /* \"#utility.yul\":7112:7113   */\n      0x00\n        /* \"#utility.yul\":7109:7110   */\n      dup1\n        /* \"#utility.yul\":7102:7114   */\n      revert\n        /* \"#utility.yul\":7126:7351   */\n    tag_179:\n        /* \"#utility.yul\":7266:7300   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7262:7263   */\n      0x00\n        /* \"#utility.yul\":7254:7260   */\n      dup3\n        /* \"#utility.yul\":7250:7264   */\n      add\n        /* \"#utility.yul\":7243:7301   */\n      mstore\n        /* \"#utility.yul\":7335:7343   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7322:7328   */\n      dup3\n        /* \"#utility.yul\":7318:7333   */\n      add\n        /* \"#utility.yul\":7311:7344   */\n      mstore\n        /* \"#utility.yul\":7126:7351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7357:7530   */\n    tag_184:\n        /* \"#utility.yul\":7497:7522   */\n      0x416d6f756e74203e2030202626203c2042616c616e6365000000000000000000\n        /* \"#utility.yul\":7493:7494   */\n      0x00\n        /* \"#utility.yul\":7485:7491   */\n      dup3\n        /* \"#utility.yul\":7481:7495   */\n      add\n        /* \"#utility.yul\":7474:7523   */\n      mstore\n        /* \"#utility.yul\":7357:7530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7536:7718   */\n    tag_189:\n        /* \"#utility.yul\":7676:7710   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7672:7673   */\n      0x00\n        /* \"#utility.yul\":7664:7670   */\n      dup3\n        /* \"#utility.yul\":7660:7674   */\n      add\n        /* \"#utility.yul\":7653:7711   */\n      mstore\n        /* \"#utility.yul\":7536:7718   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7724:7846   */\n    tag_132:\n        /* \"#utility.yul\":7797:7821   */\n      tag_225\n        /* \"#utility.yul\":7815:7820   */\n      dup2\n        /* \"#utility.yul\":7797:7821   */\n      tag_169\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7790:7795   */\n      dup2\n        /* \"#utility.yul\":7787:7822   */\n      eq\n        /* \"#utility.yul\":7777:7840   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":7836:7837   */\n      0x00\n        /* \"#utility.yul\":7833:7834   */\n      dup1\n        /* \"#utility.yul\":7826:7838   */\n      revert\n        /* \"#utility.yul\":7777:7840   */\n    tag_226:\n        /* \"#utility.yul\":7724:7846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7852:7968   */\n    tag_136:\n        /* \"#utility.yul\":7922:7943   */\n      tag_228\n        /* \"#utility.yul\":7937:7942   */\n      dup2\n        /* \"#utility.yul\":7922:7943   */\n      tag_173\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7915:7920   */\n      dup2\n        /* \"#utility.yul\":7912:7944   */\n      eq\n        /* \"#utility.yul\":7902:7962   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":7958:7959   */\n      0x00\n        /* \"#utility.yul\":7955:7956   */\n      dup1\n        /* \"#utility.yul\":7948:7960   */\n      revert\n        /* \"#utility.yul\":7902:7962   */\n    tag_229:\n        /* \"#utility.yul\":7852:7968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7974:8096   */\n    tag_140:\n        /* \"#utility.yul\":8047:8071   */\n      tag_231\n        /* \"#utility.yul\":8065:8070   */\n      dup2\n        /* \"#utility.yul\":8047:8071   */\n      tag_193\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":8040:8045   */\n      dup2\n        /* \"#utility.yul\":8037:8072   */\n      eq\n        /* \"#utility.yul\":8027:8090   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":8086:8087   */\n      0x00\n        /* \"#utility.yul\":8083:8084   */\n      dup1\n        /* \"#utility.yul\":8076:8088   */\n      revert\n        /* \"#utility.yul\":8027:8090   */\n    tag_232:\n        /* \"#utility.yul\":7974:8096   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d2db2228252b73397deb7b32ab62ccf44544288d81e66fcdfe29a5318be19fe164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_360": {
									"entryPoint": null,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_549": {
									"entryPoint": null,
									"id": 549,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 268,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600061001461010c60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35073fa0e47a2d6a58b9fd7ca1d4bfaadd11e8811824b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610114565b600033905090565b610db6806101236000396000f3fe6080604052600436106100955760003560e01c8063ac4b3b0a11610059578063ac4b3b0a14610174578063bc1271271461019f578063cc24c800146101ca578063d1f19989146101f3578063f2fde38b1461021c5761009c565b806348eca45c146100a1578063715018a6146100de5780638cef6437146100f55780638da5cb5b1461011e5780638f32d59b146101495761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906109d8565b610245565b6040516100d59190610c21565b60405180910390f35b3480156100ea57600080fd5b506100f36102d7565b005b34801561010157600080fd5b5061011c60048036038101906101179190610a05565b6103dc565b005b34801561012a57600080fd5b506101336105b4565b6040516101409190610b62565b60405180910390f35b34801561015557600080fd5b5061015e6105dd565b60405161016b9190610ba6565b60405180910390f35b34801561018057600080fd5b5061018961063b565b6040516101969190610b62565b60405180910390f35b3480156101ab57600080fd5b506101b4610661565b6040516101c19190610c21565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec91906109d8565b610669565b005b3480156101ff57600080fd5b5061021a60048036038101906102159190610a72565b6106f4565b005b34801561022857600080fd5b50610243600480360381019061023e91906109d8565b6107fc565b005b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102809190610b62565b60206040518083038186803b15801561029857600080fd5b505afa1580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190610a9f565b9050919050565b6102df6105dd565b61031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610c01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6103e46105dd565b610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a90610c01565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161045e9190610b62565b60206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190610a9f565b90506000821180156104c05750808211155b6104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610be1565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161055c929190610b7d565b602060405180830381600087803b15801561057657600080fd5b505af115801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190610a45565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661061f61084f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b6106716105dd565b6106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a790610c01565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106fc6105dd565b61073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290610c01565b60405180910390fd5b60004790506000821180156107505750808211155b61078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690610be1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156107f7573d6000803e3d6000fd5b505050565b6108046105dd565b610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90610c01565b60405180910390fd5b61084c81610857565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610bc1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061099381610d3b565b92915050565b6000815190506109a881610d52565b92915050565b6000813590506109bd81610d69565b92915050565b6000815190506109d281610d69565b92915050565b6000602082840312156109ee576109ed610c95565b5b60006109fc84828501610984565b91505092915050565b60008060408385031215610a1c57610a1b610c95565b5b6000610a2a85828601610984565b9250506020610a3b858286016109ae565b9150509250929050565b600060208284031215610a5b57610a5a610c95565b5b6000610a6984828501610999565b91505092915050565b600060208284031215610a8857610a87610c95565b5b6000610a96848285016109ae565b91505092915050565b600060208284031215610ab557610ab4610c95565b5b6000610ac3848285016109c3565b91505092915050565b610ad581610c4d565b82525050565b610ae481610c5f565b82525050565b6000610af7602683610c3c565b9150610b0282610c9a565b604082019050919050565b6000610b1a601783610c3c565b9150610b2582610ce9565b602082019050919050565b6000610b3d602083610c3c565b9150610b4882610d12565b602082019050919050565b610b5c81610c8b565b82525050565b6000602082019050610b776000830184610acc565b92915050565b6000604082019050610b926000830185610acc565b610b9f6020830184610b53565b9392505050565b6000602082019050610bbb6000830184610adb565b92915050565b60006020820190508181036000830152610bda81610aea565b9050919050565b60006020820190508181036000830152610bfa81610b0d565b9050919050565b60006020820190508181036000830152610c1a81610b30565b9050919050565b6000602082019050610c366000830184610b53565b92915050565b600082825260208201905092915050565b6000610c5882610c6b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e74203e2030202626203c2042616c616e6365000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610d4481610c4d565b8114610d4f57600080fd5b50565b610d5b81610c5f565b8114610d6657600080fd5b50565b610d7281610c8b565b8114610d7d57600080fd5b5056fea2646970667358221220d2db2228252b73397deb7b32ab62ccf44544288d81e66fcdfe29a5318be19fe164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH2 0x14 PUSH2 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH20 0xFA0E47A2D6A58B9FD7CA1D4BFAADD11E8811824B PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDB6 DUP1 PUSH2 0x123 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC4B3B0A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAC4B3B0A EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xBC127127 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xCC24C800 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD1F19989 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x48ECA45C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8CEF6437 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x149 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x2D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41A SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x4C0 JUMPI POP DUP1 DUP3 GT ISZERO JUMPDEST PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP3 SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x61F PUSH2 0x84F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x671 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6FC PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x750 JUMPI POP DUP1 DUP3 GT ISZERO JUMPDEST PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x804 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84C DUP2 PUSH2 0x857 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x993 DUP2 PUSH2 0xD3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9A8 DUP2 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BD DUP2 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9D2 DUP2 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9FC DUP5 DUP3 DUP6 ADD PUSH2 0x984 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP6 DUP3 DUP7 ADD PUSH2 0x984 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA3B DUP6 DUP3 DUP7 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5B JUMPI PUSH2 0xA5A PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA69 DUP5 DUP3 DUP6 ADD PUSH2 0x999 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA88 JUMPI PUSH2 0xA87 PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA96 DUP5 DUP3 DUP6 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC3 DUP5 DUP3 DUP6 ADD PUSH2 0x9C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD5 DUP2 PUSH2 0xC4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAE4 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF7 PUSH1 0x26 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xB02 DUP3 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1A PUSH1 0x17 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xB25 DUP3 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3D PUSH1 0x20 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xB48 DUP3 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5C DUP2 PUSH2 0xC8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xB9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xADB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBDA DUP2 PUSH2 0xAEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBFA DUP2 PUSH2 0xB0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1A DUP2 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC58 DUP3 PUSH2 0xC6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E74203E2030202626203C2042616C616E6365000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD44 DUP2 PUSH2 0xC4D JUMP JUMPDEST DUP2 EQ PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP2 EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xC8B JUMP JUMPDEST DUP2 EQ PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xDB 0x22 0x28 0x25 0x2B PUSH20 0x397DEB7B32AB62CCF44544288D81E66FCDFE29A5 BALANCE DUP12 0xE1 SWAP16 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:1315:4:-:0;;;716:17:2;736:12;:10;;;:12;;:::i;:::-;716:32;;763:9;754:6;;:18;;;;;;;;;;;;;;;;;;816:9;783:43;;812:1;783:43;;;;;;;;;;;;710:121;410:42:4;402:5;;:50;;;;;;;;;;;;;;;;;;194:1315;;760:99:1;805:15;843:10;828:26;;760:99;:::o;194:1315:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Pool2_540": {
									"entryPoint": 1595,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_673": {
									"entryPoint": null,
									"id": 673,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 2127,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_453": {
									"entryPoint": 2135,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBalanceBNB_634": {
									"entryPoint": 1633,
									"id": 634,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalanceToken_581": {
									"entryPoint": 581,
									"id": 581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOwner_392": {
									"entryPoint": 1501,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_369": {
									"entryPoint": 1460,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_414": {
									"entryPoint": 727,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sentT2Pool2BNB_669": {
									"entryPoint": 1780,
									"id": 669,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sentT2Pool2Token_622": {
									"entryPoint": 988,
									"id": 622,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPool2_562": {
									"entryPoint": 1641,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_427": {
									"entryPoint": 2044,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2941,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8099:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:5",
														"type": ""
													}
												],
												"src": "295:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:5",
														"type": ""
													}
												],
												"src": "440:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:5"
															},
															"nodeType": "YulIf",
															"src": "665:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:5",
														"type": ""
													}
												],
												"src": "589:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1007:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1055:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1037:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:32:5"
															},
															"nodeType": "YulIf",
															"src": "1017:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1146:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1161:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1175:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1165:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1190:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1225:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1236:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1221:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1221:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1245:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1200:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1190:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1273:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1288:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1302:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1292:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1318:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1353:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1364:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1349:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1328:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1318:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "969:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "980:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "992:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1000:6:5",
														"type": ""
													}
												],
												"src": "924:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1478:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1524:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1526:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1526:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1499:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1508:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1520:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:32:5"
															},
															"nodeType": "YulIf",
															"src": "1488:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1617:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1632:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1636:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1661:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1704:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1715:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1700:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1700:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1724:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1671:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1671:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1661:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1448:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1459:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1404:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1821:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1867:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1842:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1851:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1838:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1863:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1834:32:5"
															},
															"nodeType": "YulIf",
															"src": "1831:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1960:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1975:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1979:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2004:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2039:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2050:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2035:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2035:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2059:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2014:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2014:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2004:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1791:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1802:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1814:6:5",
														"type": ""
													}
												],
												"src": "1755:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2167:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2213:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2215:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2215:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2215:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2197:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2209:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:32:5"
															},
															"nodeType": "YulIf",
															"src": "2177:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2306:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2321:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2325:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2350:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2360:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2350:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2137:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2148:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2160:6:5",
														"type": ""
													}
												],
												"src": "2090:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:5",
														"type": ""
													}
												],
												"src": "2447:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2630:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2647:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2667:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2652:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2652:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2640:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2618:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2625:3:5",
														"type": ""
													}
												],
												"src": "2571:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2832:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2842:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2908:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2913:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2849:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3014:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2925:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3027:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3038:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3027:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2820:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2828:3:5",
														"type": ""
													}
												],
												"src": "2686:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3204:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3214:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3280:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3221:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3214:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3386:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8",
																	"nodeType": "YulIdentifier",
																	"src": "3297:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3297:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3410:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3415:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3406:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3406:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3200:3:5",
														"type": ""
													}
												],
												"src": "3058:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3586:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3652:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3657:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3593:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3586:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3758:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3669:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3669:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3771:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3782:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3787:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3778:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3771:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3564:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3572:3:5",
														"type": ""
													}
												],
												"src": "3430:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3867:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3884:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3907:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3889:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3889:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3877:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3855:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3862:3:5",
														"type": ""
													}
												],
												"src": "3802:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4024:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4034:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4046:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4034:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4114:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4127:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4138:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4070:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3996:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4008:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4019:4:5",
														"type": ""
													}
												],
												"src": "3926:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4280:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4290:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4302:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4313:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4290:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4370:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4383:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4394:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4326:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4326:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4451:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4464:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4475:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4460:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4407:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4407:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4244:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4256:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4264:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4275:4:5",
														"type": ""
													}
												],
												"src": "4154:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4584:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4594:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4606:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4617:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4602:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4594:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4668:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4630:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4630:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4568:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4579:4:5",
														"type": ""
													}
												],
												"src": "4492:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4879:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4889:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4901:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4897:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4889:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4936:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4947:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4932:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4955:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4961:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4951:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4951:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4981:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5115:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4989:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4981:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4859:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4874:4:5",
														"type": ""
													}
												],
												"src": "4708:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5304:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5314:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5326:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5337:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5314:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5361:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5372:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5357:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5380:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5376:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5350:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5350:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5350:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5406:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5540:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5414:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5406:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5284:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5299:4:5",
														"type": ""
													}
												],
												"src": "5133:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5729:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5739:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5751:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5762:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5747:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5739:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5786:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5797:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5782:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5782:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5805:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5811:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5801:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5801:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5775:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5775:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5831:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5965:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5839:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5831:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5709:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5724:4:5",
														"type": ""
													}
												],
												"src": "5558:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6081:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6091:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6103:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6114:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6099:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6091:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6171:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6184:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6195:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6180:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6180:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6127:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6127:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6127:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6053:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6065:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6076:4:5",
														"type": ""
													}
												],
												"src": "5983:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6251:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6261:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6277:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6271:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6271:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6261:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6244:6:5",
														"type": ""
													}
												],
												"src": "6211:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6388:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6405:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6410:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6398:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6426:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6450:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6441:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6441:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6426:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6360:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6365:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6376:11:5",
														"type": ""
													}
												],
												"src": "6292:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6512:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6522:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6551:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6533:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6533:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6522:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6494:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6504:7:5",
														"type": ""
													}
												],
												"src": "6467:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6611:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6621:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6646:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6639:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6639:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6632:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6621:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6593:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6603:7:5",
														"type": ""
													}
												],
												"src": "6569:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6710:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6720:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6735:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6742:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6720:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6692:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6702:7:5",
														"type": ""
													}
												],
												"src": "6665:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6842:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6852:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6863:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6852:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6824:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6834:7:5",
														"type": ""
													}
												],
												"src": "6797:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6969:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6989:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6979:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6979:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6979:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6880:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7092:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7109:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7112:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7102:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7003:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7232:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7254:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7262:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7250:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7266:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7243:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7243:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7243:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7322:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7330:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7318:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7318:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7335:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7311:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7311:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7224:6:5",
														"type": ""
													}
												],
												"src": "7126:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7463:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7485:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7493:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7481:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7481:14:5"
																	},
																	{
																		"hexValue": "416d6f756e74203e2030202626203c2042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7497:25:5",
																		"type": "",
																		"value": "Amount > 0 && < Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:49:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7455:6:5",
														"type": ""
													}
												],
												"src": "7357:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7642:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7664:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7672:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7660:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7660:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7676:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7653:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7653:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7653:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7634:6:5",
														"type": ""
													}
												],
												"src": "7536:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7767:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7824:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7833:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7836:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7826:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7826:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7826:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7790:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7815:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7797:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7797:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7787:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7787:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:43:5"
															},
															"nodeType": "YulIf",
															"src": "7777:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7760:5:5",
														"type": ""
													}
												],
												"src": "7724:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7892:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7946:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7955:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7958:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7948:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7948:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7948:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7915:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7937:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7922:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7922:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7912:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7912:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7905:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7905:40:5"
															},
															"nodeType": "YulIf",
															"src": "7902:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7885:5:5",
														"type": ""
													}
												],
												"src": "7852:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8017:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8074:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8083:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8086:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8076:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8076:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8076:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8040:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8065:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8047:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8047:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8037:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8037:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:43:5"
															},
															"nodeType": "YulIf",
															"src": "8027:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8010:5:5",
														"type": ""
													}
												],
												"src": "7974:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount > 0 && < Balance\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100955760003560e01c8063ac4b3b0a11610059578063ac4b3b0a14610174578063bc1271271461019f578063cc24c800146101ca578063d1f19989146101f3578063f2fde38b1461021c5761009c565b806348eca45c146100a1578063715018a6146100de5780638cef6437146100f55780638da5cb5b1461011e5780638f32d59b146101495761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906109d8565b610245565b6040516100d59190610c21565b60405180910390f35b3480156100ea57600080fd5b506100f36102d7565b005b34801561010157600080fd5b5061011c60048036038101906101179190610a05565b6103dc565b005b34801561012a57600080fd5b506101336105b4565b6040516101409190610b62565b60405180910390f35b34801561015557600080fd5b5061015e6105dd565b60405161016b9190610ba6565b60405180910390f35b34801561018057600080fd5b5061018961063b565b6040516101969190610b62565b60405180910390f35b3480156101ab57600080fd5b506101b4610661565b6040516101c19190610c21565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec91906109d8565b610669565b005b3480156101ff57600080fd5b5061021a60048036038101906102159190610a72565b6106f4565b005b34801561022857600080fd5b50610243600480360381019061023e91906109d8565b6107fc565b005b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102809190610b62565b60206040518083038186803b15801561029857600080fd5b505afa1580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190610a9f565b9050919050565b6102df6105dd565b61031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610c01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6103e46105dd565b610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a90610c01565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161045e9190610b62565b60206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190610a9f565b90506000821180156104c05750808211155b6104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610be1565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161055c929190610b7d565b602060405180830381600087803b15801561057657600080fd5b505af115801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190610a45565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661061f61084f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b6106716105dd565b6106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a790610c01565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106fc6105dd565b61073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290610c01565b60405180910390fd5b60004790506000821180156107505750808211155b61078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690610be1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156107f7573d6000803e3d6000fd5b505050565b6108046105dd565b610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90610c01565b60405180910390fd5b61084c81610857565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610bc1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061099381610d3b565b92915050565b6000815190506109a881610d52565b92915050565b6000813590506109bd81610d69565b92915050565b6000815190506109d281610d69565b92915050565b6000602082840312156109ee576109ed610c95565b5b60006109fc84828501610984565b91505092915050565b60008060408385031215610a1c57610a1b610c95565b5b6000610a2a85828601610984565b9250506020610a3b858286016109ae565b9150509250929050565b600060208284031215610a5b57610a5a610c95565b5b6000610a6984828501610999565b91505092915050565b600060208284031215610a8857610a87610c95565b5b6000610a96848285016109ae565b91505092915050565b600060208284031215610ab557610ab4610c95565b5b6000610ac3848285016109c3565b91505092915050565b610ad581610c4d565b82525050565b610ae481610c5f565b82525050565b6000610af7602683610c3c565b9150610b0282610c9a565b604082019050919050565b6000610b1a601783610c3c565b9150610b2582610ce9565b602082019050919050565b6000610b3d602083610c3c565b9150610b4882610d12565b602082019050919050565b610b5c81610c8b565b82525050565b6000602082019050610b776000830184610acc565b92915050565b6000604082019050610b926000830185610acc565b610b9f6020830184610b53565b9392505050565b6000602082019050610bbb6000830184610adb565b92915050565b60006020820190508181036000830152610bda81610aea565b9050919050565b60006020820190508181036000830152610bfa81610b0d565b9050919050565b60006020820190508181036000830152610c1a81610b30565b9050919050565b6000602082019050610c366000830184610b53565b92915050565b600082825260208201905092915050565b6000610c5882610c6b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e74203e2030202626203c2042616c616e6365000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610d4481610c4d565b8114610d4f57600080fd5b50565b610d5b81610c5f565b8114610d6657600080fd5b50565b610d7281610c8b565b8114610d7d57600080fd5b5056fea2646970667358221220d2db2228252b73397deb7b32ab62ccf44544288d81e66fcdfe29a5318be19fe164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC4B3B0A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAC4B3B0A EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xBC127127 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xCC24C800 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD1F19989 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x48ECA45C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8CEF6437 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x149 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x2D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41A SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x4C0 JUMPI POP DUP1 DUP3 GT ISZERO JUMPDEST PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP3 SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x61F PUSH2 0x84F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x671 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6FC PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x750 JUMPI POP DUP1 DUP3 GT ISZERO JUMPDEST PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x804 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84C DUP2 PUSH2 0x857 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x993 DUP2 PUSH2 0xD3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9A8 DUP2 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BD DUP2 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9D2 DUP2 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9FC DUP5 DUP3 DUP6 ADD PUSH2 0x984 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP6 DUP3 DUP7 ADD PUSH2 0x984 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA3B DUP6 DUP3 DUP7 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5B JUMPI PUSH2 0xA5A PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA69 DUP5 DUP3 DUP6 ADD PUSH2 0x999 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA88 JUMPI PUSH2 0xA87 PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA96 DUP5 DUP3 DUP6 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC3 DUP5 DUP3 DUP6 ADD PUSH2 0x9C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD5 DUP2 PUSH2 0xC4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAE4 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF7 PUSH1 0x26 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xB02 DUP3 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1A PUSH1 0x17 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xB25 DUP3 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3D PUSH1 0x20 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xB48 DUP3 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5C DUP2 PUSH2 0xC8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xB9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xADB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBDA DUP2 PUSH2 0xAEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBFA DUP2 PUSH2 0xB0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1A DUP2 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC58 DUP3 PUSH2 0xC6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E74203E2030202626203C2042616C616E6365000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD44 DUP2 PUSH2 0xC4D JUMP JUMPDEST DUP2 EQ PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP2 EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xC8B JUMP JUMPDEST DUP2 EQ PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xDB 0x22 0x28 0x25 0x2B PUSH20 0x397DEB7B32AB62CCF44544288D81E66FCDFE29A5 BALANCE DUP12 0xE1 SWAP16 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:1315:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1630:127:2;;;;;;;;;;;;;:::i;:::-;;824:295:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;899:71:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1218:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:20:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1125:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;547:84;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1238:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1896:101:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;679:140:4;748:7;781:5;774:23;;;806:4;774:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;767:45;;679:140;;;:::o;1630:127:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:1:::1;1687:40;;1708:6;::::0;::::1;;;;;;;;1687:40;;;;;;;;;;;;1750:1;1733:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1630:127::o:0;824:295:4:-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;917:18:4::1;945:12;938:30;;;977:4;938:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;917:66;;1008:1;1001:6;:8;:30;;;;;1021:10;1013:6;:18;;1001:30;993:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1075:12;1068:29;;;1098:5;;;;;;;;;;;1105:6;1068:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;907:212;824:295:::0;;:::o;899:71:2:-;937:7;959:6;;;;;;;;;;;952:13;;899:71;:::o;1218:86::-;1258:4;1293:6;;;;;;;;;;;1277:22;;:12;:10;:12::i;:::-;:22;;;1270:29;;1218:86;:::o;233:20:4:-;;;;;;;;;;;;;:::o;1125:108::-;1179:7;1205:21;1198:28;;1125:108;:::o;547:84::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;618:6:4::1;610:5;;:14;;;;;;;;;;;;;;;;;;547:84:::0;:::o;1238:234::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1307:18:4::1;1328:21;1307:42;;1374:1;1367:6;:8;:30;;;;;1387:10;1379:6;:18;;1367:30;1359:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1442:5;;;;;;;;;;;1434:23;;:31;1458:6;1434:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1297:175;1238:234:::0;:::o;1896:101:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1964:28:::1;1983:8;1964:18;:28::i;:::-;1896:101:::0;:::o;760:99:1:-;805:15;843:10;828:26;;760:99;:::o;2090:211:2:-;2179:1;2159:22;;:8;:22;;;;2151:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:8;2235:38;;2256:6;;;;;;;;;;2235:38;;;;;;;;;;;;2288:8;2279:6;;:17;;;;;;;;;;;;;;;;;;2090:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:474::-;992:6;1000;1049:2;1037:9;1028:7;1024:23;1020:32;1017:119;;;1055:79;;:::i;:::-;1017:119;1175:1;1200:53;1245:7;1236:6;1225:9;1221:22;1200:53;:::i;:::-;1190:63;;1146:117;1302:2;1328:53;1373:7;1364:6;1353:9;1349:22;1328:53;:::i;:::-;1318:63;;1273:118;924:474;;;;;:::o;1404:345::-;1471:6;1520:2;1508:9;1499:7;1495:23;1491:32;1488:119;;;1526:79;;:::i;:::-;1488:119;1646:1;1671:61;1724:7;1715:6;1704:9;1700:22;1671:61;:::i;:::-;1661:71;;1617:125;1404:345;;;;:::o;1755:329::-;1814:6;1863:2;1851:9;1842:7;1838:23;1834:32;1831:119;;;1869:79;;:::i;:::-;1831:119;1989:1;2014:53;2059:7;2050:6;2039:9;2035:22;2014:53;:::i;:::-;2004:63;;1960:117;1755:329;;;;:::o;2090:351::-;2160:6;2209:2;2197:9;2188:7;2184:23;2180:32;2177:119;;;2215:79;;:::i;:::-;2177:119;2335:1;2360:64;2416:7;2407:6;2396:9;2392:22;2360:64;:::i;:::-;2350:74;;2306:128;2090:351;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:109::-;2652:21;2667:5;2652:21;:::i;:::-;2647:3;2640:34;2571:109;;:::o;2686:366::-;2828:3;2849:67;2913:2;2908:3;2849:67;:::i;:::-;2842:74;;2925:93;3014:3;2925:93;:::i;:::-;3043:2;3038:3;3034:12;3027:19;;2686:366;;;:::o;3058:::-;3200:3;3221:67;3285:2;3280:3;3221:67;:::i;:::-;3214:74;;3297:93;3386:3;3297:93;:::i;:::-;3415:2;3410:3;3406:12;3399:19;;3058:366;;;:::o;3430:::-;3572:3;3593:67;3657:2;3652:3;3593:67;:::i;:::-;3586:74;;3669:93;3758:3;3669:93;:::i;:::-;3787:2;3782:3;3778:12;3771:19;;3430:366;;;:::o;3802:118::-;3889:24;3907:5;3889:24;:::i;:::-;3884:3;3877:37;3802:118;;:::o;3926:222::-;4019:4;4057:2;4046:9;4042:18;4034:26;;4070:71;4138:1;4127:9;4123:17;4114:6;4070:71;:::i;:::-;3926:222;;;;:::o;4154:332::-;4275:4;4313:2;4302:9;4298:18;4290:26;;4326:71;4394:1;4383:9;4379:17;4370:6;4326:71;:::i;:::-;4407:72;4475:2;4464:9;4460:18;4451:6;4407:72;:::i;:::-;4154:332;;;;;:::o;4492:210::-;4579:4;4617:2;4606:9;4602:18;4594:26;;4630:65;4692:1;4681:9;4677:17;4668:6;4630:65;:::i;:::-;4492:210;;;;:::o;4708:419::-;4874:4;4912:2;4901:9;4897:18;4889:26;;4961:9;4955:4;4951:20;4947:1;4936:9;4932:17;4925:47;4989:131;5115:4;4989:131;:::i;:::-;4981:139;;4708:419;;;:::o;5133:::-;5299:4;5337:2;5326:9;5322:18;5314:26;;5386:9;5380:4;5376:20;5372:1;5361:9;5357:17;5350:47;5414:131;5540:4;5414:131;:::i;:::-;5406:139;;5133:419;;;:::o;5558:::-;5724:4;5762:2;5751:9;5747:18;5739:26;;5811:9;5805:4;5801:20;5797:1;5786:9;5782:17;5775:47;5839:131;5965:4;5839:131;:::i;:::-;5831:139;;5558:419;;;:::o;5983:222::-;6076:4;6114:2;6103:9;6099:18;6091:26;;6127:71;6195:1;6184:9;6180:17;6171:6;6127:71;:::i;:::-;5983:222;;;;:::o;6292:169::-;6376:11;6410:6;6405:3;6398:19;6450:4;6445:3;6441:14;6426:29;;6292:169;;;;:::o;6467:96::-;6504:7;6533:24;6551:5;6533:24;:::i;:::-;6522:35;;6467:96;;;:::o;6569:90::-;6603:7;6646:5;6639:13;6632:21;6621:32;;6569:90;;;:::o;6665:126::-;6702:7;6742:42;6735:5;6731:54;6720:65;;6665:126;;;:::o;6797:77::-;6834:7;6863:5;6852:16;;6797:77;;;:::o;7003:117::-;7112:1;7109;7102:12;7126:225;7266:34;7262:1;7254:6;7250:14;7243:58;7335:8;7330:2;7322:6;7318:15;7311:33;7126:225;:::o;7357:173::-;7497:25;7493:1;7485:6;7481:14;7474:49;7357:173;:::o;7536:182::-;7676:34;7672:1;7664:6;7660:14;7653:58;7536:182;:::o;7724:122::-;7797:24;7815:5;7797:24;:::i;:::-;7790:5;7787:35;7777:63;;7836:1;7833;7826:12;7777:63;7724:122;:::o;7852:116::-;7922:21;7937:5;7922:21;:::i;:::-;7915:5;7912:32;7902:60;;7958:1;7955;7948:12;7902:60;7852:116;:::o;7974:122::-;8047:24;8065:5;8047:24;:::i;:::-;8040:5;8037:35;8027:63;;8086:1;8083;8076:12;8027:63;7974:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "702000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Pool2()": "2514",
								"getBalanceBNB()": "361",
								"getBalanceToken(address)": "infinite",
								"isOwner()": "2620",
								"owner()": "2589",
								"renounceOwnership()": "30352",
								"sentT2Pool2BNB(uint256)": "infinite",
								"sentT2Pool2Token(address,uint256)": "infinite",
								"setPool2(address)": "27006",
								"transferOwnership(address)": "30795"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 1509,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 716,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 772,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 816,
									"end": 825,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 812,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 710,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 410,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "FA0E47A2D6A58B9FD7CA1D4BFAADD11E8811824B"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 760,
									"end": 859,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 805,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 853,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 1509,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2db2228252b73397deb7b32ab62ccf44544288d81e66fcdfe29a5318be19fe164736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "AC4B3B0A"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "AC4B3B0A"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "BC127127"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "CC24C800"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "D1F19989"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "48ECA45C"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "8CEF6437"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "8F32D59B"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1509,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 774,
											"end": 797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 774,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 806,
											"end": 810,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 767,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 767,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 938,
											"end": 968,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 968,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 938,
											"end": 968,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 977,
											"end": 981,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 938,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 917,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1007,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1009,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1013,
											"end": 1019,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 907,
											"end": 1119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1119,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1233,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 610,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 610,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1349,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1397,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1457,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1457,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 1458,
											"end": 1464,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1472,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1983,
											"end": 1991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 853,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 992,
											"end": 998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1047,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1052,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1245,
											"end": 1252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1234,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1253,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1506,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1523,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1724,
											"end": 1731,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1713,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1755,
											"end": 2084,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1755,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1849,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1950,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1831,
											"end": 1950,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1831,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2059,
											"end": 2066,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2048,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2084,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2084,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2090,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2211,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2207,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2212,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2296,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2177,
											"end": 2296,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2215,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2215,
											"end": 2294,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2294,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2215,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2177,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2360,
											"end": 2424,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2360,
											"end": 2424,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2360,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2441,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2441,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2674,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2686,
											"end": 3052,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2686,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2913,
											"end": 2915,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2908,
											"end": 2911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2849,
											"end": 2916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2849,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2849,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2925,
											"end": 3018,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2925,
											"end": 3018,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2925,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 3052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 3052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 3052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 3052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3058,
											"end": 3424,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3058,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3280,
											"end": 3283,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3221,
											"end": 3288,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3221,
											"end": 3288,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3221,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3297,
											"end": 3390,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3297,
											"end": 3390,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3297,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3417,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3399,
											"end": 3418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3399,
											"end": 3418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3424,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3430,
											"end": 3796,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3430,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3593,
											"end": 3660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3593,
											"end": 3660,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3593,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3758,
											"end": 3761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3669,
											"end": 3762,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3669,
											"end": 3762,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3669,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3782,
											"end": 3785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3796,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3907,
											"end": 3912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3914,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3926,
											"end": 4148,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3926,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4059,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4042,
											"end": 4060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4034,
											"end": 4060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4034,
											"end": 4060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4136,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 4148,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 4148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 4148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 4148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 4148,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4392,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4326,
											"end": 4397,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4326,
											"end": 4397,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4326,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4457,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4407,
											"end": 4479,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4479,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4407,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4486,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4492,
											"end": 4702,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4619,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4692,
											"end": 4693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4630,
											"end": 4695,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4630,
											"end": 4695,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4630,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4702,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4702,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4708,
											"end": 5127,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4708,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4901,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4889,
											"end": 4915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4889,
											"end": 4915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 4970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4959,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4947,
											"end": 4948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5115,
											"end": 5119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4989,
											"end": 5120,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5120,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4989,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 5127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 5127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 5127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 5127,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5133,
											"end": 5552,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5133,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5326,
											"end": 5335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5396,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5370,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5397,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5414,
											"end": 5545,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5414,
											"end": 5545,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5414,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5552,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5552,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5558,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5558,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5724,
											"end": 5728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5751,
											"end": 5760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5821,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5839,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5839,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5839,
											"end": 5970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5839,
											"end": 5970,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5839,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5983,
											"end": 6205,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5983,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6076,
											"end": 6080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6116,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6117,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6127,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6195,
											"end": 6196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6171,
											"end": 6177,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6127,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6127,
											"end": 6198,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6127,
											"end": 6198,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6127,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6205,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6205,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6292,
											"end": 6461,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6292,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6405,
											"end": 6408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6417,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6461,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6461,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6467,
											"end": 6563,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6467,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6504,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6551,
											"end": 6556,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6533,
											"end": 6557,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6533,
											"end": 6557,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6533,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6563,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6563,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6569,
											"end": 6659,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6569,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6652,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6653,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6569,
											"end": 6659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6569,
											"end": 6659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6569,
											"end": 6659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6569,
											"end": 6659,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6784,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6735,
											"end": 6740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 6785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 6785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6874,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7003,
											"end": 7120,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7003,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7102,
											"end": 7114,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7126,
											"end": 7351,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 7126,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7266,
											"end": 7300,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7335,
											"end": 7343,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7311,
											"end": 7344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7126,
											"end": 7351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7126,
											"end": 7351,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7357,
											"end": 7530,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 7357,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7497,
											"end": 7522,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74203E2030202626203C2042616C616E6365000000000000000000"
										},
										{
											"begin": 7493,
											"end": 7494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7357,
											"end": 7530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7357,
											"end": 7530,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7536,
											"end": 7718,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 7536,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7676,
											"end": 7710,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7672,
											"end": 7673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7660,
											"end": 7674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7653,
											"end": 7711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7536,
											"end": 7718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7536,
											"end": 7718,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7724,
											"end": 7846,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7724,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 7815,
											"end": 7820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7797,
											"end": 7821,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7797,
											"end": 7821,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 7797,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7790,
											"end": 7795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 7822,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7777,
											"end": 7840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 7834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7826,
											"end": 7838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7840,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7777,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7846,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7852,
											"end": 7968,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7852,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7937,
											"end": 7942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7922,
											"end": 7943,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7922,
											"end": 7943,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7922,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7915,
											"end": 7920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7944,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7902,
											"end": 7962,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7948,
											"end": 7960,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 7962,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7902,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7852,
											"end": 7968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7852,
											"end": 7968,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7974,
											"end": 8096,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7974,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8065,
											"end": 8070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8072,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8027,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 8027,
											"end": 8090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8086,
											"end": 8087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8083,
											"end": 8084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8088,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8027,
											"end": 8090,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 8027,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7974,
											"end": 8096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7974,
											"end": 8096,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Pool2()": "ac4b3b0a",
							"getBalanceBNB()": "bc127127",
							"getBalanceToken(address)": "48eca45c",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sentT2Pool2BNB(uint256)": "d1f19989",
							"sentT2Pool2Token(address,uint256)": "8cef6437",
							"setPool2(address)": "cc24c800",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Pool2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalanceToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sentT2Pool2BNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenaddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sentT2Pool2Token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Pool2\",\"type\":\"address\"}],\"name\":\"setPool2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\"},\"getBalanceToken(address)\":{\"details\":\"get balance.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPool2(address)\":{\"details\":\"The contract should be able to receive Eth.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Treasury.sol\":\"Treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]},\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]},\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]},\"Treasury.sol\":{\"keccak256\":\"0xa90a2c9b5d19437ed93161b96ed7ad9ede5ca7f24c81250d493b7c0ccdae04ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f81e60e0e58737e0ecfcc32a2beff13474a890b605045c36d5a7a371415f5a9\",\"dweb:/ipfs/QmV7gcZGtYgBFddPa9AvNtruM4ULRfNowNbNTeiNZSLEg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "Treasury.sol:Treasury",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 540,
								"contract": "Treasury.sol:Treasury",
								"label": "Pool2",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1226:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1450:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1450:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1443:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1169:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1220:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:6:0"
									},
									"scope": 294,
									"src": "1160:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2468:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2494:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2486:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2486:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2486:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2511:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2478:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2568:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2563:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2581:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2581:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2581:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2624:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1486:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2406:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2432:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2416:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:0"
									},
									"scope": 294,
									"src": "2397:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3540:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3550:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2715:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3460:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3489:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:14:0"
									},
									"scope": 294,
									"src": "3451:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3993:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4049:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4010:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4003:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3630:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3855:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3885:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3877:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3901:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3942:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3928:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3979:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:14:0"
									},
									"scope": 294,
									"src": "3846:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4574:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4591:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4584:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4075:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4440:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4560:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:14:0"
									},
									"scope": 294,
									"src": "4431:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5112:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5138:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5130:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5130:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5130:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5155:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5130:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5122:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5232:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5221:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5213:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5290:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5285:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5312:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5299:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5326:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5326:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5345:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5326:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5400:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5412:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5374:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5367:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4691:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4981:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4997:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5047:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5098:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5097:14:0"
									},
									"scope": 294,
									"src": "4933:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5709:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5745:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5726:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5719:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5438:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5618:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5666:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5653:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5695:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:14:0"
									},
									"scope": 294,
									"src": "5609:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6148:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6186:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6158:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6242:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6237:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6264:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6251:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6251:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6278:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6236:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6318:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6318:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6311:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5812:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5999:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6027:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6064:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6051:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6051:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6092:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6078:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6017:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6134:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:14:0"
									},
									"scope": 294,
									"src": "5990:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6652:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6704:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6669:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6662:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6382:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6564:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6601:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6638:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6637:14:0"
									},
									"scope": 294,
									"src": "6555:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7094:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7112:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7132:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7104:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7190:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7185:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7212:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7199:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7226:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7268:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7261:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6759:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7002:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7002:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7029:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7080:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:14:0"
									},
									"scope": 294,
									"src": "6939:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7706:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7777:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7861:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7861:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7861:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8169:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8194:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8187:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8187:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8187:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7857:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7884:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8004:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8026:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8055:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8049:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8049:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8030:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8098:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8102:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8094:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8094:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8115:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8087:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8087:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8087:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8055:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8102:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "7995:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7716:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7729:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7750:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7743:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7332:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7555:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7616:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7603:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7650:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7636:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7691:14:0"
									},
									"scope": 294,
									"src": "7546:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "179:8061:0",
							"usedErrors": []
						}
					],
					"src": "86:8154:0"
				},
				"id": 0
			},
			"BEPContext.sol": {
				"ast": {
					"absolutePath": "BEPContext.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "BEPContext",
							"nameLocation": "575:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "754:2:1",
										"statements": []
									},
									"id": 300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:2:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 324,
									"src": "740:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "822:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "843:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 304,
												"id": 310,
												"nodeType": "Return",
												"src": "828:26:1"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "769:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:17:1"
									},
									"scope": 324,
									"src": "760:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "920:36:1",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_BEPContext_$324",
														"typeString": "contract BEPContext"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "926:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 319,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "943:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "943:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 316,
												"id": 321,
												"nodeType": "Return",
												"src": "936:15:1"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "872:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "906:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:14:1"
									},
									"scope": 324,
									"src": "863:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 325,
							"src": "557:401:1",
							"usedErrors": []
						}
					],
					"src": "32:926:1"
				},
				"id": 1
			},
			"BEPOwnable.sol": {
				"ast": {
					"absolutePath": "BEPOwnable.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "BEPContext.sol",
							"file": "./BEPContext.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 325,
							"src": "56:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 329,
										"name": "BEPContext",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "476:10:2"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "476:10:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "83:360:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								324
							],
							"name": "BEPOwnable",
							"nameLocation": "462:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "507:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "491:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 338,
									"name": "OwnershipTransferred",
									"nameLocation": "524:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "561:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "545:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "592:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "576:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:57:2"
									},
									"src": "518:84:2"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "710:121:2",
										"statements": [
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "724:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "716:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "716:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "736:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "716:32:2"
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 347,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "754:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 348,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "763:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "754:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "754:18:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "812:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "804:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "804:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "816:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 351,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "783:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "EmitStatement",
												"src": "778:48:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "606:87:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 360,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:2"
									},
									"scope": 454,
									"src": "696:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "946:24:2",
										"statements": [
											{
												"expression": {
													"id": 366,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "959:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "952:13:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "835:61:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "908:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "937:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:2"
									},
									"scope": 454,
									"src": "899:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1071:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 373,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1085:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1085:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1096:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1077:54:2"
											},
											{
												"id": 378,
												"nodeType": "PlaceholderStatement",
												"src": "1137:1:2"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "974:73:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 380,
									"name": "onlyOwner",
									"nameLocation": "1059:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:2:2"
									},
									"src": "1050:93:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1264:40:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 386,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1277:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1277:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1293:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1277:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 390,
												"nodeType": "Return",
												"src": "1270:29:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1147:68:2",
										"text": " @dev Returns true if the caller is the current owner."
									},
									"functionSelector": "8f32d59b",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "1227:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:2"
									},
									"scope": 454,
									"src": "1218:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1676:81:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1708:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1687:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1687:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "EmitStatement",
												"src": "1682:45:2"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1733:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1750:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1742:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 407,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1742:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1733:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1733:19:2"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1308:319:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1666:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1666:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1639:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:0:2"
									},
									"scope": 454,
									"src": "1630:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1958:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1983:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "1964:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1964:28:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1761:132:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 419,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1948:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1905:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1931:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1923:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:18:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:0:2"
									},
									"scope": 454,
									"src": "1896:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2145:156:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2159:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2179:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2171:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 435,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2171:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2171:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2159:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2151:73:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "2256:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "2264:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2235:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2230:43:2"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2279:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2288:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2279:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2279:17:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2001:86:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2099:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2126:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2118:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:18:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2145:0:2"
									},
									"scope": 454,
									"src": "2090:211:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "444:1859:2",
							"usedErrors": []
						}
					],
					"src": "32:2271:2"
				},
				"id": 2
			},
			"IBEP20.sol": {
				"ast": {
					"absolutePath": "IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							531
						]
					},
					"id": 532,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "IBEP20",
							"nameLocation": "67:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "78:62:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "152:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "189:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:3"
									},
									"scope": 531,
									"src": "143:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "202:68:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "282:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "300:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "292:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:17:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "332:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:3"
									},
									"scope": 531,
									"src": "273:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "345:197:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "554:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "571:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "563:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "590:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "582:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:35:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "616:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:6:3"
									},
									"scope": 531,
									"src": "545:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "626:252:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "890:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "900:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:32:3"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "955:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:3"
									},
									"scope": 531,
									"src": "881:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "968:514:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1494:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1510:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1502:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1527:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1519:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:33:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1553:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1553:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:6:3"
									},
									"scope": 531,
									"src": "1485:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1563:280:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1855:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1881:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1873:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1901:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1893:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1924:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1916:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:67:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1953:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:3"
									},
									"scope": 531,
									"src": "1846:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1963:148:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 521,
									"name": "Transfer",
									"nameLocation": "2120:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2145:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2129:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2167:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2151:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:57:3"
									},
									"src": "2114:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2190:142:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 530,
									"name": "Approval",
									"nameLocation": "2341:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2350:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2389:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2373:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2406:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2398:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:63:3"
									},
									"src": "2335:78:3"
								}
							],
							"scope": 532,
							"src": "57:2358:3",
							"usedErrors": []
						}
					],
					"src": "32:2383:3"
				},
				"id": 3
			},
			"Treasury.sol": {
				"ast": {
					"absolutePath": "Treasury.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						],
						"IBEP20": [
							531
						],
						"Treasury": [
							674
						]
					},
					"id": 675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:4"
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 295,
							"src": "119:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEPOwnable.sol",
							"file": "./BEPOwnable.sol",
							"id": 535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 455,
							"src": "143:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 532,
							"src": "170:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 537,
										"name": "BEPOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "215:10:4"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "215:10:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 674,
							"linearizedBaseContracts": [
								674,
								454,
								324
							],
							"name": "Treasury",
							"nameLocation": "203:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ac4b3b0a",
									"id": 540,
									"mutability": "mutable",
									"name": "Pool2",
									"nameLocation": "248:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "233:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 539,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "391:68:4",
										"statements": [
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "Pool2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "402:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307866413045343741326436613538623966643743613164346246414144643131453838313138323442",
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "410:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B"
													},
													"src": "402:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "402:50:4"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "260:104:4",
										"text": " @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
									},
									"id": 549,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:2:4"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:0:4"
									},
									"scope": 674,
									"src": "369:90:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "600:31:4",
										"statements": [
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 557,
														"name": "Pool2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 558,
														"name": "_Pool2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "618:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "610:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "610:14:4"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "469:67:4",
										"text": " @dev The contract should be able to receive Eth."
									},
									"functionSelector": "cc24c800",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 554,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "590:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "590:9:4"
										}
									],
									"name": "setPool2",
									"nameLocation": "556:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_Pool2",
												"nameLocation": "573:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "565:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:16:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "600:0:4"
									},
									"scope": 674,
									"src": "547:84:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "757:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 576,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "806:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Treasury_$674",
																		"typeString": "contract Treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Treasury_$674",
																		"typeString": "contract Treasury"
																	}
																],
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "798:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 574,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "798:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 571,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 570,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "774:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "774:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$531",
																"typeString": "contract IBEP20"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "774:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "774:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 569,
												"id": 579,
												"nodeType": "Return",
												"src": "767:45:4"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "638:36:4",
										"text": " @dev get balance."
									},
									"functionSelector": "48eca45c",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceToken",
									"nameLocation": "688:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "712:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "704:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:15:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "748:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:9:4"
									},
									"scope": 674,
									"src": "679:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "907:212:4",
										"statements": [
											{
												"assignments": [
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 591,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "925:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "917:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 590,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "917:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 598,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "977:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Treasury_$674",
																		"typeString": "contract Treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Treasury_$674",
																		"typeString": "contract Treasury"
																	}
																],
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "969:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 596,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "969:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "969:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "tokenaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "945:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "938:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "938:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$531",
																"typeString": "contract IBEP20"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "938:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "917:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 603,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1001:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1001:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1013:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 607,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1021:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1013:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1001:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74203e2030202626203c2042616c616e6365",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1032:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8",
																"typeString": "literal_string \"Amount > 0 && < Balance\""
															},
															"value": "Amount > 0 && < Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8",
																"typeString": "literal_string \"Amount > 0 && < Balance\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "993:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "993:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "993:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "Pool2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1105:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 614,
																	"name": "tokenaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1075:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 613,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "1068:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1068:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$531",
																"typeString": "contract IBEP20"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 480,
														"src": "1068:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "1068:44:4"
											}
										]
									},
									"functionSelector": "8cef6437",
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 588,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 587,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "897:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "897:9:4"
										}
									],
									"name": "sentT2Pool2Token",
									"nameLocation": "833:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "tokenaddress",
												"nameLocation": "858:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "850:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "880:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "872:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:38:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:0:4"
									},
									"scope": 674,
									"src": "824:295:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "1188:45:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 629,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1213:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Treasury_$674",
																	"typeString": "contract Treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Treasury_$674",
																	"typeString": "contract Treasury"
																}
															],
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1205:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 627,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1205:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1205:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1205:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 626,
												"id": 632,
												"nodeType": "Return",
												"src": "1198:28:4"
											}
										]
									},
									"functionSelector": "bc127127",
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceBNB",
									"nameLocation": "1134:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:2:4"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1179:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:9:4"
									},
									"scope": 674,
									"src": "1125:108:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "1297:175:4",
										"statements": [
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "1315:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "1307:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1307:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 645,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1336:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Treasury_$674",
																	"typeString": "contract Treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Treasury_$674",
																	"typeString": "contract Treasury"
																}
															],
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 643,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1328:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1328:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1307:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 650,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "1367:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1374:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1367:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 653,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "1379:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 654,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "1387:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1379:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1367:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74203e2030202626203c2042616c616e6365",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1398:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8",
																"typeString": "literal_string \"Amount > 0 && < Balance\""
															},
															"value": "Amount > 0 && < Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ebfb398006b77662efac195f93a391f01081cd4c92103c5e976560fd0867fe8",
																"typeString": "literal_string \"Amount > 0 && < Balance\""
															}
														],
														"id": 649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1359:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1359:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "1359:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "1458:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 662,
																	"name": "Pool2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "1442:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1434:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1434:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1434:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1434:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "1434:31:4"
											}
										]
									},
									"functionSelector": "d1f19989",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 639,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 638,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1287:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1287:9:4"
										}
									],
									"name": "sentT2Pool2BNB",
									"nameLocation": "1247:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1270:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1262:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:16:4"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:4"
									},
									"scope": 674,
									"src": "1238:234:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "1505:2:4",
										"statements": []
									},
									"id": 673,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1485:2:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:0:4"
									},
									"scope": 674,
									"src": "1478:29:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 675,
							"src": "194:1315:4",
							"usedErrors": []
						}
					],
					"src": "93:1416:4"
				},
				"id": 4
			}
		}
	}
}