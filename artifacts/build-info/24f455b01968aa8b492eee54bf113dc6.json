{
	"id": "24f455b01968aa8b492eee54bf113dc6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"BEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./BEPContext.sol\";\nimport \"./IBEP20.sol\";\nimport \"./BEPOwnable.sol\";\nimport \"./SafeMath.sol\";\n/**\n * @dev Implementation of the {IBEP20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {BEP20Mintable}.\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of BEP20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IBEP20-approve}.\n */\ncontract BEP20 is BEPContext, IBEP20, BEPOwnable {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) private _balances;\n\n  mapping(address => mapping(address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n\n  /**\n   * @dev See {IBEP20-totalSupply}.\n   */\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IBEP20-balanceOf}.\n   */\n  function balanceOf(address account) public view override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IBEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {IBEP20-allowance}.\n   */\n  function allowance(address owner, address spender) public view override returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {IBEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) public override returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {IBEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) public virtual override returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(\n      sender,\n      _msgSender(),\n      _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")\n    );\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {IBEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {IBEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(\n      _msgSender(),\n      spender,\n      _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")\n    );\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) internal virtual {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(\n    address owner,\n    address spender,\n    uint256 amount\n  ) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(\n      account,\n      _msgSender(),\n      _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\")\n    );\n  }\n}"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n * not same\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   *\n   * _Available since v2.4.0._\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   *\n   * _Available since v2.4.0._\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n}"
			},
			"BEPOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./BEPContext.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract BEPOwnable is BEPContext {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Returns true if the caller is the current owner.\n   */\n  function isOwner() public view returns (bool) {\n    return _msgSender() == _owner;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}"
			},
			"IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"BEPContext.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract BEPContext {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor() {}\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this;\n    return msg.data;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BEP20.sol": {
				"BEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20Mintable}. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IBEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IBEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IBEP20-balanceOf}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "See {IBEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IBEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IBEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEP20.sol\":1140:7751  contract BEP20 is BEPContext, IBEP20, BEPOwnable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"BEPOwnable.sol\":716:733  address msgSender */\n  0x00\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  tag_6\n    /* \"BEPOwnable.sol\":736:746  _msgSender */\n  shl(0x20, tag_7)\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"BEPOwnable.sol\":716:748  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEPOwnable.sol\":763:772  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":754:760  _owner */\n  0x00\n  dup1\n    /* \"BEPOwnable.sol\":754:772  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEPOwnable.sol\":816:825  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEPOwnable.sol\":812:813  0 */\n  0x00\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEPOwnable.sol\":710:831  {... */\n  pop\n    /* \"BEP20.sol\":1140:7751  contract BEP20 is BEPContext, IBEP20, BEPOwnable {... */\n  jump(tag_8)\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\ntag_7:\n    /* \"BEPContext.sol\":805:820  address payable */\n  0x00\n    /* \"BEPContext.sol\":843:853  msg.sender */\n  caller\n    /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"BEP20.sol\":1140:7751  contract BEP20 is BEPContext, IBEP20, BEPOwnable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP20.sol\":1140:7751  contract BEP20 is BEPContext, IBEP20, BEPOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BEP20.sol\":2334:2482  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20.sol\":1427:1519  function totalSupply() public view override returns (uint256) {... */\n    tag_4:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20.sol\":2914:3257  function transferFrom(... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20.sol\":3626:3823  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20.sol\":1569:1680  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20.sol\":4280:4552  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20.sol\":1865:2027  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20.sol\":2077:2212  function allowance(address owner, address spender) public view override returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"BEP20.sol\":2334:2482  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_19:\n        /* \"BEP20.sol\":2409:2413  bool */\n      0x00\n        /* \"BEP20.sol\":2421:2460  _approve(_msgSender(), spender, amount) */\n      tag_66\n        /* \"BEP20.sol\":2430:2442  _msgSender() */\n      tag_67\n        /* \"BEP20.sol\":2430:2440  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":2430:2442  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"BEP20.sol\":2444:2451  spender */\n      dup5\n        /* \"BEP20.sol\":2453:2459  amount */\n      dup5\n        /* \"BEP20.sol\":2421:2429  _approve */\n      tag_69\n        /* \"BEP20.sol\":2421:2460  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_66:\n        /* \"BEP20.sol\":2473:2477  true */\n      0x01\n        /* \"BEP20.sol\":2466:2477  return true */\n      swap1\n      pop\n        /* \"BEP20.sol\":2334:2482  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20.sol\":1427:1519  function totalSupply() public view override returns (uint256) {... */\n    tag_23:\n        /* \"BEP20.sol\":1480:1487  uint256 */\n      0x00\n        /* \"BEP20.sol\":1502:1514  _totalSupply */\n      sload(0x03)\n        /* \"BEP20.sol\":1495:1514  return _totalSupply */\n      swap1\n      pop\n        /* \"BEP20.sol\":1427:1519  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20.sol\":2914:3257  function transferFrom(... */\n    tag_29:\n        /* \"BEP20.sol\":3036:3040  bool */\n      0x00\n        /* \"BEP20.sol\":3048:3084  _transfer(sender, recipient, amount) */\n      tag_72\n        /* \"BEP20.sol\":3058:3064  sender */\n      dup5\n        /* \"BEP20.sol\":3066:3075  recipient */\n      dup5\n        /* \"BEP20.sol\":3077:3083  amount */\n      dup5\n        /* \"BEP20.sol\":3048:3057  _transfer */\n      tag_73\n        /* \"BEP20.sol\":3048:3084  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_72:\n        /* \"BEP20.sol\":3090:3235  _approve(... */\n      tag_74\n        /* \"BEP20.sol\":3106:3112  sender */\n      dup5\n        /* \"BEP20.sol\":3120:3132  _msgSender() */\n      tag_75\n        /* \"BEP20.sol\":3120:3130  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":3120:3132  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"BEP20.sol\":3140:3229  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_76\n        /* \"BEP20.sol\":3178:3184  amount */\n      dup6\n        /* \"BEP20.sol\":3140:3229  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"BEP20.sol\":3140:3151  _allowances */\n      0x02\n        /* \"BEP20.sol\":3140:3159  _allowances[sender] */\n      0x00\n        /* \"BEP20.sol\":3152:3158  sender */\n      dup12\n        /* \"BEP20.sol\":3140:3159  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":3140:3173  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"BEP20.sol\":3160:3172  _msgSender() */\n      tag_77\n        /* \"BEP20.sol\":3160:3170  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":3160:3172  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"BEP20.sol\":3140:3173  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20.sol\":3140:3177  _allowances[sender][_msgSender()].sub */\n      tag_78\n      swap1\n        /* \"BEP20.sol\":3140:3229  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"BEP20.sol\":3090:3098  _approve */\n      tag_69\n        /* \"BEP20.sol\":3090:3235  _approve(... */\n      jump\t// in\n    tag_74:\n        /* \"BEP20.sol\":3248:3252  true */\n      0x01\n        /* \"BEP20.sol\":3241:3252  return true */\n      swap1\n      pop\n        /* \"BEP20.sol\":2914:3257  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20.sol\":3626:3823  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_33:\n        /* \"BEP20.sol\":3706:3710  bool */\n      0x00\n        /* \"BEP20.sol\":3718:3801  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_80\n        /* \"BEP20.sol\":3727:3739  _msgSender() */\n      tag_81\n        /* \"BEP20.sol\":3727:3737  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":3727:3739  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"BEP20.sol\":3741:3748  spender */\n      dup5\n        /* \"BEP20.sol\":3750:3800  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_82\n        /* \"BEP20.sol\":3789:3799  addedValue */\n      dup6\n        /* \"BEP20.sol\":3750:3761  _allowances */\n      0x02\n        /* \"BEP20.sol\":3750:3775  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP20.sol\":3762:3774  _msgSender() */\n      tag_83\n        /* \"BEP20.sol\":3762:3772  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":3762:3774  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"BEP20.sol\":3750:3775  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":3750:3784  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP20.sol\":3776:3783  spender */\n      dup10\n        /* \"BEP20.sol\":3750:3784  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20.sol\":3750:3788  _allowances[_msgSender()][spender].add */\n      tag_84\n      swap1\n        /* \"BEP20.sol\":3750:3800  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"BEP20.sol\":3718:3726  _approve */\n      tag_69\n        /* \"BEP20.sol\":3718:3801  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_80:\n        /* \"BEP20.sol\":3814:3818  true */\n      0x01\n        /* \"BEP20.sol\":3807:3818  return true */\n      swap1\n      pop\n        /* \"BEP20.sol\":3626:3823  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20.sol\":1569:1680  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_38:\n        /* \"BEP20.sol\":1635:1642  uint256 */\n      0x00\n        /* \"BEP20.sol\":1657:1666  _balances */\n      0x01\n        /* \"BEP20.sol\":1657:1675  _balances[account] */\n      0x00\n        /* \"BEP20.sol\":1667:1674  account */\n      dup4\n        /* \"BEP20.sol\":1657:1675  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20.sol\":1650:1675  return _balances[account] */\n      swap1\n      pop\n        /* \"BEP20.sol\":1569:1680  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_41:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_87\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_47\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_87:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"BEPOwnable.sol\":1724:1725  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1708:1714  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":1750:1751  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1733:1739  _owner */\n      dup1\n      0x00\n        /* \"BEPOwnable.sol\":1733:1752  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_43:\n        /* \"BEPOwnable.sol\":937:944  address */\n      0x00\n        /* \"BEPOwnable.sol\":959:965  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":952:965  return _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_47:\n        /* \"BEPOwnable.sol\":1258:1262  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1293:1299  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      tag_94\n        /* \"BEPOwnable.sol\":1277:1287  _msgSender */\n      tag_68\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEPOwnable.sol\":1270:1299  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20.sol\":4280:4552  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_51:\n        /* \"BEP20.sol\":4365:4369  bool */\n      0x00\n        /* \"BEP20.sol\":4377:4530  _approve(... */\n      tag_96\n        /* \"BEP20.sol\":4393:4405  _msgSender() */\n      tag_97\n        /* \"BEP20.sol\":4393:4403  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":4393:4405  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"BEP20.sol\":4413:4420  spender */\n      dup5\n        /* \"BEP20.sol\":4428:4524  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_98\n        /* \"BEP20.sol\":4467:4482  subtractedValue */\n      dup6\n        /* \"BEP20.sol\":4428:4524  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"BEP20.sol\":4428:4439  _allowances */\n      0x02\n        /* \"BEP20.sol\":4428:4453  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP20.sol\":4440:4452  _msgSender() */\n      tag_99\n        /* \"BEP20.sol\":4440:4450  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":4440:4452  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"BEP20.sol\":4428:4453  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":4428:4462  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP20.sol\":4454:4461  spender */\n      dup11\n        /* \"BEP20.sol\":4428:4462  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20.sol\":4428:4466  _allowances[_msgSender()][spender].sub */\n      tag_78\n      swap1\n        /* \"BEP20.sol\":4428:4524  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"BEP20.sol\":4377:4385  _approve */\n      tag_69\n        /* \"BEP20.sol\":4377:4530  _approve(... */\n      jump\t// in\n    tag_96:\n        /* \"BEP20.sol\":4543:4547  true */\n      0x01\n        /* \"BEP20.sol\":4536:4547  return true */\n      swap1\n      pop\n        /* \"BEP20.sol\":4280:4552  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20.sol\":1865:2027  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_55:\n        /* \"BEP20.sol\":1951:1955  bool */\n      0x00\n        /* \"BEP20.sol\":1963:2005  _transfer(_msgSender(), recipient, amount) */\n      tag_101\n        /* \"BEP20.sol\":1973:1985  _msgSender() */\n      tag_102\n        /* \"BEP20.sol\":1973:1983  _msgSender */\n      tag_68\n        /* \"BEP20.sol\":1973:1985  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"BEP20.sol\":1987:1996  recipient */\n      dup5\n        /* \"BEP20.sol\":1998:2004  amount */\n      dup5\n        /* \"BEP20.sol\":1963:1972  _transfer */\n      tag_73\n        /* \"BEP20.sol\":1963:2005  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"BEP20.sol\":2018:2022  true */\n      0x01\n        /* \"BEP20.sol\":2011:2022  return true */\n      swap1\n      pop\n        /* \"BEP20.sol\":1865:2027  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20.sol\":2077:2212  function allowance(address owner, address spender) public view override returns (uint256) {... */\n    tag_60:\n        /* \"BEP20.sol\":2158:2165  uint256 */\n      0x00\n        /* \"BEP20.sol\":2180:2191  _allowances */\n      0x02\n        /* \"BEP20.sol\":2180:2198  _allowances[owner] */\n      0x00\n        /* \"BEP20.sol\":2192:2197  owner */\n      dup5\n        /* \"BEP20.sol\":2180:2198  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":2180:2207  _allowances[owner][spender] */\n      0x00\n        /* \"BEP20.sol\":2199:2206  spender */\n      dup4\n        /* \"BEP20.sol\":2180:2207  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20.sol\":2173:2207  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"BEP20.sol\":2077:2212  function allowance(address owner, address spender) public view override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_64:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_105\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_47\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_105:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_90\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      tag_109\n        /* \"BEPOwnable.sol\":1983:1991  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":1964:1982  _transferOwnership */\n      tag_110\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_109:\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n    tag_68:\n        /* \"BEPContext.sol\":805:820  address payable */\n      0x00\n        /* \"BEPContext.sol\":843:853  msg.sender */\n      caller\n        /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20.sol\":7012:7342  function _approve(... */\n    tag_69:\n        /* \"BEP20.sol\":7134:7135  0 */\n      0x00\n        /* \"BEP20.sol\":7117:7136  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20.sol\":7117:7122  owner */\n      dup4\n        /* \"BEP20.sol\":7117:7136  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20.sol\":7109:7177  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"BEP20.sol\":7210:7211  0 */\n      0x00\n        /* \"BEP20.sol\":7191:7212  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20.sol\":7191:7198  spender */\n      dup3\n        /* \"BEP20.sol\":7191:7212  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20.sol\":7183:7251  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"BEP20.sol\":7288:7294  amount */\n      dup1\n        /* \"BEP20.sol\":7258:7269  _allowances */\n      0x02\n        /* \"BEP20.sol\":7258:7276  _allowances[owner] */\n      0x00\n        /* \"BEP20.sol\":7270:7275  owner */\n      dup6\n        /* \"BEP20.sol\":7258:7276  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":7258:7285  _allowances[owner][spender] */\n      0x00\n        /* \"BEP20.sol\":7277:7284  spender */\n      dup5\n        /* \"BEP20.sol\":7258:7285  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":7258:7294  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20.sol\":7321:7328  spender */\n      dup2\n        /* \"BEP20.sol\":7305:7337  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20.sol\":7314:7319  owner */\n      dup4\n        /* \"BEP20.sol\":7305:7337  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"BEP20.sol\":7330:7336  amount */\n      dup4\n        /* \"BEP20.sol\":7305:7337  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20.sol\":7012:7342  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20.sol\":4996:5462  function _transfer(... */\n    tag_73:\n        /* \"BEP20.sol\":5131:5132  0 */\n      0x00\n        /* \"BEP20.sol\":5113:5133  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20.sol\":5113:5119  sender */\n      dup4\n        /* \"BEP20.sol\":5113:5133  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20.sol\":5105:5175  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"BEP20.sol\":5210:5211  0 */\n      0x00\n        /* \"BEP20.sol\":5189:5212  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20.sol\":5189:5198  recipient */\n      dup3\n        /* \"BEP20.sol\":5189:5212  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20.sol\":5181:5252  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"BEP20.sol\":5279:5350  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_127\n        /* \"BEP20.sol\":5301:5307  amount */\n      dup2\n        /* \"BEP20.sol\":5279:5350  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"BEP20.sol\":5279:5288  _balances */\n      0x01\n        /* \"BEP20.sol\":5279:5296  _balances[sender] */\n      0x00\n        /* \"BEP20.sol\":5289:5295  sender */\n      dup8\n        /* \"BEP20.sol\":5279:5296  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20.sol\":5279:5300  _balances[sender].sub */\n      tag_78\n      swap1\n        /* \"BEP20.sol\":5279:5350  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"BEP20.sol\":5259:5268  _balances */\n      0x01\n        /* \"BEP20.sol\":5259:5276  _balances[sender] */\n      0x00\n        /* \"BEP20.sol\":5269:5275  sender */\n      dup6\n        /* \"BEP20.sol\":5259:5276  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":5259:5350  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20.sol\":5379:5411  _balances[recipient].add(amount) */\n      tag_128\n        /* \"BEP20.sol\":5404:5410  amount */\n      dup2\n        /* \"BEP20.sol\":5379:5388  _balances */\n      0x01\n        /* \"BEP20.sol\":5379:5399  _balances[recipient] */\n      0x00\n        /* \"BEP20.sol\":5389:5398  recipient */\n      dup6\n        /* \"BEP20.sol\":5379:5399  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20.sol\":5379:5403  _balances[recipient].add */\n      tag_84\n      swap1\n        /* \"BEP20.sol\":5379:5411  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"BEP20.sol\":5356:5365  _balances */\n      0x01\n        /* \"BEP20.sol\":5356:5376  _balances[recipient] */\n      0x00\n        /* \"BEP20.sol\":5366:5375  recipient */\n      dup5\n        /* \"BEP20.sol\":5356:5376  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20.sol\":5356:5411  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20.sol\":5439:5448  recipient */\n      dup2\n        /* \"BEP20.sol\":5422:5457  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20.sol\":5431:5437  sender */\n      dup4\n        /* \"BEP20.sol\":5422:5457  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BEP20.sol\":5450:5456  amount */\n      dup4\n        /* \"BEP20.sol\":5422:5457  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20.sol\":4996:5462  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1692:1881  function sub(... */\n    tag_78:\n        /* \"SafeMath.sol\":1794:1801  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1822:1823  a */\n      dup4\n        /* \"SafeMath.sol\":1817:1818  b */\n      dup4\n        /* \"SafeMath.sol\":1817:1823  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1825:1837  errorMessage */\n      dup3\n        /* \"SafeMath.sol\":1809:1838  require(b <= a, errorMessage) */\n      swap1\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n      pop\n        /* \"SafeMath.sol\":1844:1853  uint256 c */\n      0x00\n        /* \"SafeMath.sol\":1860:1861  b */\n      dup4\n        /* \"SafeMath.sol\":1856:1857  a */\n      dup6\n        /* \"SafeMath.sol\":1856:1861  a - b */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"SafeMath.sol\":1844:1861  uint256 c = a - b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":1875:1876  c */\n      dup1\n        /* \"SafeMath.sol\":1868:1876  return c */\n      swap2\n      pop\n      pop\n        /* \"SafeMath.sol\":1692:1881  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":858:1020  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_84:\n        /* \"SafeMath.sol\":916:923  uint256 */\n      0x00\n        /* \"SafeMath.sol\":931:940  uint256 c */\n      dup1\n        /* \"SafeMath.sol\":947:948  b */\n      dup3\n        /* \"SafeMath.sol\":943:944  a */\n      dup5\n        /* \"SafeMath.sol\":943:948  a + b */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"SafeMath.sol\":931:948  uint256 c = a + b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":967:968  a */\n      dup4\n        /* \"SafeMath.sol\":962:963  c */\n      dup2\n        /* \"SafeMath.sol\":962:968  c >= a */\n      lt\n      iszero\n        /* \"SafeMath.sol\":954:1000  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"SafeMath.sol\":1014:1015  c */\n      dup1\n        /* \"SafeMath.sol\":1007:1015  return c */\n      swap2\n      pop\n      pop\n        /* \"SafeMath.sol\":858:1020  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n    tag_110:\n        /* \"BEPOwnable.sol\":2179:2180  0 */\n      0x00\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2159:2167  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEPOwnable.sol\":2151:2224  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"BEPOwnable.sol\":2264:2272  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2256:2262  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":2288:2296  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2279:2285  _owner */\n      0x00\n      dup1\n        /* \"BEPOwnable.sol\":2279:2296  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_147:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_149\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_151:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_153\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_37:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":373:492   */\n    tag_156:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_159\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_147\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_59:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_162\n      tag_158\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":725:844   */\n    tag_161:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_163\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_147\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_164\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_147\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_28:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_167\n      tag_158\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1222:1341   */\n    tag_166:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_168\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_147\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_169\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_147\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_170\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_151\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_18:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_173\n      tag_158\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1830:1949   */\n    tag_172:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_174\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_147\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_175\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_151\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2335   */\n    tag_176:\n        /* \"#utility.yul\":2304:2328   */\n      tag_178\n        /* \"#utility.yul\":2322:2327   */\n      dup2\n        /* \"#utility.yul\":2304:2328   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2299:2302   */\n      dup3\n        /* \"#utility.yul\":2292:2329   */\n      mstore\n        /* \"#utility.yul\":2217:2335   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2450   */\n    tag_180:\n        /* \"#utility.yul\":2422:2443   */\n      tag_182\n        /* \"#utility.yul\":2437:2442   */\n      dup2\n        /* \"#utility.yul\":2422:2443   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2417:2420   */\n      dup3\n        /* \"#utility.yul\":2410:2444   */\n      mstore\n        /* \"#utility.yul\":2341:2450   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2820   */\n    tag_184:\n        /* \"#utility.yul\":2544:2547   */\n      0x00\n        /* \"#utility.yul\":2572:2611   */\n      tag_186\n        /* \"#utility.yul\":2605:2610   */\n      dup3\n        /* \"#utility.yul\":2572:2611   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2627:2698   */\n      tag_188\n        /* \"#utility.yul\":2691:2697   */\n      dup2\n        /* \"#utility.yul\":2686:2689   */\n      dup6\n        /* \"#utility.yul\":2627:2698   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2620:2698   */\n      swap4\n      pop\n        /* \"#utility.yul\":2707:2759   */\n      tag_190\n        /* \"#utility.yul\":2752:2758   */\n      dup2\n        /* \"#utility.yul\":2747:2750   */\n      dup6\n        /* \"#utility.yul\":2740:2744   */\n      0x20\n        /* \"#utility.yul\":2733:2738   */\n      dup7\n        /* \"#utility.yul\":2729:2745   */\n      add\n        /* \"#utility.yul\":2707:2759   */\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2784:2813   */\n      tag_192\n        /* \"#utility.yul\":2806:2812   */\n      dup2\n        /* \"#utility.yul\":2784:2813   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2779:2782   */\n      dup5\n        /* \"#utility.yul\":2775:2814   */\n      add\n        /* \"#utility.yul\":2768:2814   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2820   */\n      pop\n        /* \"#utility.yul\":2456:2820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:3192   */\n    tag_194:\n        /* \"#utility.yul\":2968:2971   */\n      0x00\n        /* \"#utility.yul\":2989:3056   */\n      tag_196\n        /* \"#utility.yul\":3053:3055   */\n      0x25\n        /* \"#utility.yul\":3048:3051   */\n      dup4\n        /* \"#utility.yul\":2989:3056   */\n      tag_189\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2982:3056   */\n      swap2\n      pop\n        /* \"#utility.yul\":3065:3158   */\n      tag_197\n        /* \"#utility.yul\":3154:3157   */\n      dup3\n        /* \"#utility.yul\":3065:3158   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3183:3185   */\n      0x40\n        /* \"#utility.yul\":3178:3181   */\n      dup3\n        /* \"#utility.yul\":3174:3186   */\n      add\n        /* \"#utility.yul\":3167:3186   */\n      swap1\n      pop\n        /* \"#utility.yul\":2826:3192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3198:3564   */\n    tag_199:\n        /* \"#utility.yul\":3340:3343   */\n      0x00\n        /* \"#utility.yul\":3361:3428   */\n      tag_201\n        /* \"#utility.yul\":3425:3427   */\n      0x24\n        /* \"#utility.yul\":3420:3423   */\n      dup4\n        /* \"#utility.yul\":3361:3428   */\n      tag_189\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3354:3428   */\n      swap2\n      pop\n        /* \"#utility.yul\":3437:3530   */\n      tag_202\n        /* \"#utility.yul\":3526:3529   */\n      dup3\n        /* \"#utility.yul\":3437:3530   */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3555:3557   */\n      0x40\n        /* \"#utility.yul\":3550:3553   */\n      dup3\n        /* \"#utility.yul\":3546:3558   */\n      add\n        /* \"#utility.yul\":3539:3558   */\n      swap1\n      pop\n        /* \"#utility.yul\":3198:3564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3936   */\n    tag_204:\n        /* \"#utility.yul\":3712:3715   */\n      0x00\n        /* \"#utility.yul\":3733:3800   */\n      tag_206\n        /* \"#utility.yul\":3797:3799   */\n      0x26\n        /* \"#utility.yul\":3792:3795   */\n      dup4\n        /* \"#utility.yul\":3733:3800   */\n      tag_189\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3726:3800   */\n      swap2\n      pop\n        /* \"#utility.yul\":3809:3902   */\n      tag_207\n        /* \"#utility.yul\":3898:3901   */\n      dup3\n        /* \"#utility.yul\":3809:3902   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3927:3929   */\n      0x40\n        /* \"#utility.yul\":3922:3925   */\n      dup3\n        /* \"#utility.yul\":3918:3930   */\n      add\n        /* \"#utility.yul\":3911:3930   */\n      swap1\n      pop\n        /* \"#utility.yul\":3570:3936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3942:4308   */\n    tag_209:\n        /* \"#utility.yul\":4084:4087   */\n      0x00\n        /* \"#utility.yul\":4105:4172   */\n      tag_211\n        /* \"#utility.yul\":4169:4171   */\n      0x1b\n        /* \"#utility.yul\":4164:4167   */\n      dup4\n        /* \"#utility.yul\":4105:4172   */\n      tag_189\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4098:4172   */\n      swap2\n      pop\n        /* \"#utility.yul\":4181:4274   */\n      tag_212\n        /* \"#utility.yul\":4270:4273   */\n      dup3\n        /* \"#utility.yul\":4181:4274   */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4299:4301   */\n      0x20\n        /* \"#utility.yul\":4294:4297   */\n      dup3\n        /* \"#utility.yul\":4290:4302   */\n      add\n        /* \"#utility.yul\":4283:4302   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4314:4680   */\n    tag_214:\n        /* \"#utility.yul\":4456:4459   */\n      0x00\n        /* \"#utility.yul\":4477:4544   */\n      tag_216\n        /* \"#utility.yul\":4541:4543   */\n      0x20\n        /* \"#utility.yul\":4536:4539   */\n      dup4\n        /* \"#utility.yul\":4477:4544   */\n      tag_189\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4470:4544   */\n      swap2\n      pop\n        /* \"#utility.yul\":4553:4646   */\n      tag_217\n        /* \"#utility.yul\":4642:4645   */\n      dup3\n        /* \"#utility.yul\":4553:4646   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4671:4673   */\n      0x20\n        /* \"#utility.yul\":4666:4669   */\n      dup3\n        /* \"#utility.yul\":4662:4674   */\n      add\n        /* \"#utility.yul\":4655:4674   */\n      swap1\n      pop\n        /* \"#utility.yul\":4314:4680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:5052   */\n    tag_219:\n        /* \"#utility.yul\":4828:4831   */\n      0x00\n        /* \"#utility.yul\":4849:4916   */\n      tag_221\n        /* \"#utility.yul\":4913:4915   */\n      0x23\n        /* \"#utility.yul\":4908:4911   */\n      dup4\n        /* \"#utility.yul\":4849:4916   */\n      tag_189\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4842:4916   */\n      swap2\n      pop\n        /* \"#utility.yul\":4925:5018   */\n      tag_222\n        /* \"#utility.yul\":5014:5017   */\n      dup3\n        /* \"#utility.yul\":4925:5018   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5043:5045   */\n      0x40\n        /* \"#utility.yul\":5038:5041   */\n      dup3\n        /* \"#utility.yul\":5034:5046   */\n      add\n        /* \"#utility.yul\":5027:5046   */\n      swap1\n      pop\n        /* \"#utility.yul\":4686:5052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5058:5424   */\n    tag_224:\n        /* \"#utility.yul\":5200:5203   */\n      0x00\n        /* \"#utility.yul\":5221:5288   */\n      tag_226\n        /* \"#utility.yul\":5285:5287   */\n      0x22\n        /* \"#utility.yul\":5280:5283   */\n      dup4\n        /* \"#utility.yul\":5221:5288   */\n      tag_189\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5214:5288   */\n      swap2\n      pop\n        /* \"#utility.yul\":5297:5390   */\n      tag_227\n        /* \"#utility.yul\":5386:5389   */\n      dup3\n        /* \"#utility.yul\":5297:5390   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5415:5417   */\n      0x40\n        /* \"#utility.yul\":5410:5413   */\n      dup3\n        /* \"#utility.yul\":5406:5418   */\n      add\n        /* \"#utility.yul\":5399:5418   */\n      swap1\n      pop\n        /* \"#utility.yul\":5058:5424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5548   */\n    tag_229:\n        /* \"#utility.yul\":5517:5541   */\n      tag_231\n        /* \"#utility.yul\":5535:5540   */\n      dup2\n        /* \"#utility.yul\":5517:5541   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5512:5515   */\n      dup3\n        /* \"#utility.yul\":5505:5542   */\n      mstore\n        /* \"#utility.yul\":5430:5548   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5554:5776   */\n    tag_45:\n        /* \"#utility.yul\":5647:5651   */\n      0x00\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5674:5683   */\n      dup3\n        /* \"#utility.yul\":5670:5688   */\n      add\n        /* \"#utility.yul\":5662:5688   */\n      swap1\n      pop\n        /* \"#utility.yul\":5698:5769   */\n      tag_234\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5755:5764   */\n      dup4\n        /* \"#utility.yul\":5751:5768   */\n      add\n        /* \"#utility.yul\":5742:5748   */\n      dup5\n        /* \"#utility.yul\":5698:5769   */\n      tag_176\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5554:5776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5782:5992   */\n    tag_21:\n        /* \"#utility.yul\":5869:5873   */\n      0x00\n        /* \"#utility.yul\":5907:5909   */\n      0x20\n        /* \"#utility.yul\":5896:5905   */\n      dup3\n        /* \"#utility.yul\":5892:5910   */\n      add\n        /* \"#utility.yul\":5884:5910   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5985   */\n      tag_236\n        /* \"#utility.yul\":5982:5983   */\n      0x00\n        /* \"#utility.yul\":5971:5980   */\n      dup4\n        /* \"#utility.yul\":5967:5984   */\n      add\n        /* \"#utility.yul\":5958:5964   */\n      dup5\n        /* \"#utility.yul\":5920:5985   */\n      tag_180\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5782:5992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5998:6311   */\n    tag_133:\n        /* \"#utility.yul\":6111:6115   */\n      0x00\n        /* \"#utility.yul\":6149:6151   */\n      0x20\n        /* \"#utility.yul\":6138:6147   */\n      dup3\n        /* \"#utility.yul\":6134:6152   */\n      add\n        /* \"#utility.yul\":6126:6152   */\n      swap1\n      pop\n        /* \"#utility.yul\":6198:6207   */\n      dup2\n        /* \"#utility.yul\":6192:6196   */\n      dup2\n        /* \"#utility.yul\":6188:6208   */\n      sub\n        /* \"#utility.yul\":6184:6185   */\n      0x00\n        /* \"#utility.yul\":6173:6182   */\n      dup4\n        /* \"#utility.yul\":6169:6186   */\n      add\n        /* \"#utility.yul\":6162:6209   */\n      mstore\n        /* \"#utility.yul\":6226:6304   */\n      tag_238\n        /* \"#utility.yul\":6299:6303   */\n      dup2\n        /* \"#utility.yul\":6290:6296   */\n      dup5\n        /* \"#utility.yul\":6226:6304   */\n      tag_184\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6218:6304   */\n      swap1\n      pop\n        /* \"#utility.yul\":5998:6311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6317:6736   */\n    tag_123:\n        /* \"#utility.yul\":6483:6487   */\n      0x00\n        /* \"#utility.yul\":6521:6523   */\n      0x20\n        /* \"#utility.yul\":6510:6519   */\n      dup3\n        /* \"#utility.yul\":6506:6524   */\n      add\n        /* \"#utility.yul\":6498:6524   */\n      swap1\n      pop\n        /* \"#utility.yul\":6570:6579   */\n      dup2\n        /* \"#utility.yul\":6564:6568   */\n      dup2\n        /* \"#utility.yul\":6560:6580   */\n      sub\n        /* \"#utility.yul\":6556:6557   */\n      0x00\n        /* \"#utility.yul\":6545:6554   */\n      dup4\n        /* \"#utility.yul\":6541:6558   */\n      add\n        /* \"#utility.yul\":6534:6581   */\n      mstore\n        /* \"#utility.yul\":6598:6729   */\n      tag_240\n        /* \"#utility.yul\":6724:6728   */\n      dup2\n        /* \"#utility.yul\":6598:6729   */\n      tag_194\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6590:6729   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6742:7161   */\n    tag_115:\n        /* \"#utility.yul\":6908:6912   */\n      0x00\n        /* \"#utility.yul\":6946:6948   */\n      0x20\n        /* \"#utility.yul\":6935:6944   */\n      dup3\n        /* \"#utility.yul\":6931:6949   */\n      add\n        /* \"#utility.yul\":6923:6949   */\n      swap1\n      pop\n        /* \"#utility.yul\":6995:7004   */\n      dup2\n        /* \"#utility.yul\":6989:6993   */\n      dup2\n        /* \"#utility.yul\":6985:7005   */\n      sub\n        /* \"#utility.yul\":6981:6982   */\n      0x00\n        /* \"#utility.yul\":6970:6979   */\n      dup4\n        /* \"#utility.yul\":6966:6983   */\n      add\n        /* \"#utility.yul\":6959:7006   */\n      mstore\n        /* \"#utility.yul\":7023:7154   */\n      tag_242\n        /* \"#utility.yul\":7149:7153   */\n      dup2\n        /* \"#utility.yul\":7023:7154   */\n      tag_199\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7015:7154   */\n      swap1\n      pop\n        /* \"#utility.yul\":6742:7161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7167:7586   */\n    tag_145:\n        /* \"#utility.yul\":7333:7337   */\n      0x00\n        /* \"#utility.yul\":7371:7373   */\n      0x20\n        /* \"#utility.yul\":7360:7369   */\n      dup3\n        /* \"#utility.yul\":7356:7374   */\n      add\n        /* \"#utility.yul\":7348:7374   */\n      swap1\n      pop\n        /* \"#utility.yul\":7420:7429   */\n      dup2\n        /* \"#utility.yul\":7414:7418   */\n      dup2\n        /* \"#utility.yul\":7410:7430   */\n      sub\n        /* \"#utility.yul\":7406:7407   */\n      0x00\n        /* \"#utility.yul\":7395:7404   */\n      dup4\n        /* \"#utility.yul\":7391:7408   */\n      add\n        /* \"#utility.yul\":7384:7431   */\n      mstore\n        /* \"#utility.yul\":7448:7579   */\n      tag_244\n        /* \"#utility.yul\":7574:7578   */\n      dup2\n        /* \"#utility.yul\":7448:7579   */\n      tag_204\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7440:7579   */\n      swap1\n      pop\n        /* \"#utility.yul\":7167:7586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7592:8011   */\n    tag_141:\n        /* \"#utility.yul\":7758:7762   */\n      0x00\n        /* \"#utility.yul\":7796:7798   */\n      0x20\n        /* \"#utility.yul\":7785:7794   */\n      dup3\n        /* \"#utility.yul\":7781:7799   */\n      add\n        /* \"#utility.yul\":7773:7799   */\n      swap1\n      pop\n        /* \"#utility.yul\":7845:7854   */\n      dup2\n        /* \"#utility.yul\":7839:7843   */\n      dup2\n        /* \"#utility.yul\":7835:7855   */\n      sub\n        /* \"#utility.yul\":7831:7832   */\n      0x00\n        /* \"#utility.yul\":7820:7829   */\n      dup4\n        /* \"#utility.yul\":7816:7833   */\n      add\n        /* \"#utility.yul\":7809:7856   */\n      mstore\n        /* \"#utility.yul\":7873:8004   */\n      tag_246\n        /* \"#utility.yul\":7999:8003   */\n      dup2\n        /* \"#utility.yul\":7873:8004   */\n      tag_209\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7865:8004   */\n      swap1\n      pop\n        /* \"#utility.yul\":7592:8011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8017:8436   */\n    tag_90:\n        /* \"#utility.yul\":8183:8187   */\n      0x00\n        /* \"#utility.yul\":8221:8223   */\n      0x20\n        /* \"#utility.yul\":8210:8219   */\n      dup3\n        /* \"#utility.yul\":8206:8224   */\n      add\n        /* \"#utility.yul\":8198:8224   */\n      swap1\n      pop\n        /* \"#utility.yul\":8270:8279   */\n      dup2\n        /* \"#utility.yul\":8264:8268   */\n      dup2\n        /* \"#utility.yul\":8260:8280   */\n      sub\n        /* \"#utility.yul\":8256:8257   */\n      0x00\n        /* \"#utility.yul\":8245:8254   */\n      dup4\n        /* \"#utility.yul\":8241:8258   */\n      add\n        /* \"#utility.yul\":8234:8281   */\n      mstore\n        /* \"#utility.yul\":8298:8429   */\n      tag_248\n        /* \"#utility.yul\":8424:8428   */\n      dup2\n        /* \"#utility.yul\":8298:8429   */\n      tag_214\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8290:8429   */\n      swap1\n      pop\n        /* \"#utility.yul\":8017:8436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8442:8861   */\n    tag_126:\n        /* \"#utility.yul\":8608:8612   */\n      0x00\n        /* \"#utility.yul\":8646:8648   */\n      0x20\n        /* \"#utility.yul\":8635:8644   */\n      dup3\n        /* \"#utility.yul\":8631:8649   */\n      add\n        /* \"#utility.yul\":8623:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8695:8704   */\n      dup2\n        /* \"#utility.yul\":8689:8693   */\n      dup2\n        /* \"#utility.yul\":8685:8705   */\n      sub\n        /* \"#utility.yul\":8681:8682   */\n      0x00\n        /* \"#utility.yul\":8670:8679   */\n      dup4\n        /* \"#utility.yul\":8666:8683   */\n      add\n        /* \"#utility.yul\":8659:8706   */\n      mstore\n        /* \"#utility.yul\":8723:8854   */\n      tag_250\n        /* \"#utility.yul\":8849:8853   */\n      dup2\n        /* \"#utility.yul\":8723:8854   */\n      tag_219\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8715:8854   */\n      swap1\n      pop\n        /* \"#utility.yul\":8442:8861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8867:9286   */\n    tag_118:\n        /* \"#utility.yul\":9033:9037   */\n      0x00\n        /* \"#utility.yul\":9071:9073   */\n      0x20\n        /* \"#utility.yul\":9060:9069   */\n      dup3\n        /* \"#utility.yul\":9056:9074   */\n      add\n        /* \"#utility.yul\":9048:9074   */\n      swap1\n      pop\n        /* \"#utility.yul\":9120:9129   */\n      dup2\n        /* \"#utility.yul\":9114:9118   */\n      dup2\n        /* \"#utility.yul\":9110:9130   */\n      sub\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9095:9104   */\n      dup4\n        /* \"#utility.yul\":9091:9108   */\n      add\n        /* \"#utility.yul\":9084:9131   */\n      mstore\n        /* \"#utility.yul\":9148:9279   */\n      tag_252\n        /* \"#utility.yul\":9274:9278   */\n      dup2\n        /* \"#utility.yul\":9148:9279   */\n      tag_224\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9140:9279   */\n      swap1\n      pop\n        /* \"#utility.yul\":8867:9286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9292:9514   */\n    tag_25:\n        /* \"#utility.yul\":9385:9389   */\n      0x00\n        /* \"#utility.yul\":9423:9425   */\n      0x20\n        /* \"#utility.yul\":9412:9421   */\n      dup3\n        /* \"#utility.yul\":9408:9426   */\n      add\n        /* \"#utility.yul\":9400:9426   */\n      swap1\n      pop\n        /* \"#utility.yul\":9436:9507   */\n      tag_254\n        /* \"#utility.yul\":9504:9505   */\n      0x00\n        /* \"#utility.yul\":9493:9502   */\n      dup4\n        /* \"#utility.yul\":9489:9506   */\n      add\n        /* \"#utility.yul\":9480:9486   */\n      dup5\n        /* \"#utility.yul\":9436:9507   */\n      tag_229\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9292:9514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9601:9700   */\n    tag_187:\n        /* \"#utility.yul\":9653:9659   */\n      0x00\n        /* \"#utility.yul\":9687:9692   */\n      dup2\n        /* \"#utility.yul\":9681:9693   */\n      mload\n        /* \"#utility.yul\":9671:9693   */\n      swap1\n      pop\n        /* \"#utility.yul\":9601:9700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9706:9875   */\n    tag_189:\n        /* \"#utility.yul\":9790:9801   */\n      0x00\n        /* \"#utility.yul\":9824:9830   */\n      dup3\n        /* \"#utility.yul\":9819:9822   */\n      dup3\n        /* \"#utility.yul\":9812:9831   */\n      mstore\n        /* \"#utility.yul\":9864:9868   */\n      0x20\n        /* \"#utility.yul\":9859:9862   */\n      dup3\n        /* \"#utility.yul\":9855:9869   */\n      add\n        /* \"#utility.yul\":9840:9869   */\n      swap1\n      pop\n        /* \"#utility.yul\":9706:9875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9881:10186   */\n    tag_138:\n        /* \"#utility.yul\":9921:9924   */\n      0x00\n        /* \"#utility.yul\":9940:9960   */\n      tag_260\n        /* \"#utility.yul\":9958:9959   */\n      dup3\n        /* \"#utility.yul\":9940:9960   */\n      tag_232\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9935:9960   */\n      swap2\n      pop\n        /* \"#utility.yul\":9974:9994   */\n      tag_261\n        /* \"#utility.yul\":9992:9993   */\n      dup4\n        /* \"#utility.yul\":9974:9994   */\n      tag_232\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9969:9994   */\n      swap3\n      pop\n        /* \"#utility.yul\":10128:10129   */\n      dup3\n        /* \"#utility.yul\":10060:10126   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10056:10130   */\n      sub\n        /* \"#utility.yul\":10053:10054   */\n      dup3\n        /* \"#utility.yul\":10050:10131   */\n      gt\n        /* \"#utility.yul\":10047:10154   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":10134:10152   */\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10047:10154   */\n    tag_262:\n        /* \"#utility.yul\":10178:10179   */\n      dup3\n        /* \"#utility.yul\":10175:10176   */\n      dup3\n        /* \"#utility.yul\":10171:10180   */\n      add\n        /* \"#utility.yul\":10164:10180   */\n      swap1\n      pop\n        /* \"#utility.yul\":9881:10186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10192:10383   */\n    tag_135:\n        /* \"#utility.yul\":10232:10236   */\n      0x00\n        /* \"#utility.yul\":10252:10272   */\n      tag_266\n        /* \"#utility.yul\":10270:10271   */\n      dup3\n        /* \"#utility.yul\":10252:10272   */\n      tag_232\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10247:10272   */\n      swap2\n      pop\n        /* \"#utility.yul\":10286:10306   */\n      tag_267\n        /* \"#utility.yul\":10304:10305   */\n      dup4\n        /* \"#utility.yul\":10286:10306   */\n      tag_232\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10281:10306   */\n      swap3\n      pop\n        /* \"#utility.yul\":10325:10326   */\n      dup3\n        /* \"#utility.yul\":10322:10323   */\n      dup3\n        /* \"#utility.yul\":10319:10327   */\n      lt\n        /* \"#utility.yul\":10316:10350   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":10330:10348   */\n      tag_269\n      tag_264\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10316:10350   */\n    tag_268:\n        /* \"#utility.yul\":10375:10376   */\n      dup3\n        /* \"#utility.yul\":10372:10373   */\n      dup3\n        /* \"#utility.yul\":10368:10377   */\n      sub\n        /* \"#utility.yul\":10360:10377   */\n      swap1\n      pop\n        /* \"#utility.yul\":10192:10383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10389:10485   */\n    tag_179:\n        /* \"#utility.yul\":10426:10433   */\n      0x00\n        /* \"#utility.yul\":10455:10479   */\n      tag_271\n        /* \"#utility.yul\":10473:10478   */\n      dup3\n        /* \"#utility.yul\":10455:10479   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10444:10479   */\n      swap1\n      pop\n        /* \"#utility.yul\":10389:10485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10491:10581   */\n    tag_183:\n        /* \"#utility.yul\":10525:10532   */\n      0x00\n        /* \"#utility.yul\":10568:10573   */\n      dup2\n        /* \"#utility.yul\":10561:10574   */\n      iszero\n        /* \"#utility.yul\":10554:10575   */\n      iszero\n        /* \"#utility.yul\":10543:10575   */\n      swap1\n      pop\n        /* \"#utility.yul\":10491:10581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10587:10713   */\n    tag_272:\n        /* \"#utility.yul\":10624:10631   */\n      0x00\n        /* \"#utility.yul\":10664:10706   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10657:10662   */\n      dup3\n        /* \"#utility.yul\":10653:10707   */\n      and\n        /* \"#utility.yul\":10642:10707   */\n      swap1\n      pop\n        /* \"#utility.yul\":10587:10713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10719:10796   */\n    tag_232:\n        /* \"#utility.yul\":10756:10763   */\n      0x00\n        /* \"#utility.yul\":10785:10790   */\n      dup2\n        /* \"#utility.yul\":10774:10790   */\n      swap1\n      pop\n        /* \"#utility.yul\":10719:10796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10802:11109   */\n    tag_191:\n        /* \"#utility.yul\":10870:10871   */\n      0x00\n        /* \"#utility.yul\":10880:10993   */\n    tag_277:\n        /* \"#utility.yul\":10894:10900   */\n      dup4\n        /* \"#utility.yul\":10891:10892   */\n      dup2\n        /* \"#utility.yul\":10888:10901   */\n      lt\n        /* \"#utility.yul\":10880:10993   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":10979:10980   */\n      dup1\n        /* \"#utility.yul\":10974:10977   */\n      dup3\n        /* \"#utility.yul\":10970:10981   */\n      add\n        /* \"#utility.yul\":10964:10982   */\n      mload\n        /* \"#utility.yul\":10960:10961   */\n      dup2\n        /* \"#utility.yul\":10955:10958   */\n      dup5\n        /* \"#utility.yul\":10951:10962   */\n      add\n        /* \"#utility.yul\":10944:10983   */\n      mstore\n        /* \"#utility.yul\":10916:10918   */\n      0x20\n        /* \"#utility.yul\":10913:10914   */\n      dup2\n        /* \"#utility.yul\":10909:10919   */\n      add\n        /* \"#utility.yul\":10904:10919   */\n      swap1\n      pop\n        /* \"#utility.yul\":10880:10993   */\n      jump(tag_277)\n    tag_279:\n        /* \"#utility.yul\":11011:11017   */\n      dup4\n        /* \"#utility.yul\":11008:11009   */\n      dup2\n        /* \"#utility.yul\":11005:11018   */\n      gt\n        /* \"#utility.yul\":11002:11103   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":11091:11092   */\n      0x00\n        /* \"#utility.yul\":11082:11088   */\n      dup5\n        /* \"#utility.yul\":11077:11080   */\n      dup5\n        /* \"#utility.yul\":11073:11089   */\n      add\n        /* \"#utility.yul\":11066:11093   */\n      mstore\n        /* \"#utility.yul\":11002:11103   */\n    tag_280:\n        /* \"#utility.yul\":10851:11109   */\n      pop\n        /* \"#utility.yul\":10802:11109   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11115:11295   */\n    tag_264:\n        /* \"#utility.yul\":11163:11240   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11160:11161   */\n      0x00\n        /* \"#utility.yul\":11153:11241   */\n      mstore\n        /* \"#utility.yul\":11260:11264   */\n      0x11\n        /* \"#utility.yul\":11257:11258   */\n      0x04\n        /* \"#utility.yul\":11250:11265   */\n      mstore\n        /* \"#utility.yul\":11284:11288   */\n      0x24\n        /* \"#utility.yul\":11281:11282   */\n      0x00\n        /* \"#utility.yul\":11274:11289   */\n      revert\n        /* \"#utility.yul\":11424:11541   */\n    tag_158:\n        /* \"#utility.yul\":11533:11534   */\n      0x00\n        /* \"#utility.yul\":11530:11531   */\n      dup1\n        /* \"#utility.yul\":11523:11535   */\n      revert\n        /* \"#utility.yul\":11547:11649   */\n    tag_193:\n        /* \"#utility.yul\":11588:11594   */\n      0x00\n        /* \"#utility.yul\":11639:11641   */\n      0x1f\n        /* \"#utility.yul\":11635:11642   */\n      not\n        /* \"#utility.yul\":11630:11632   */\n      0x1f\n        /* \"#utility.yul\":11623:11628   */\n      dup4\n        /* \"#utility.yul\":11619:11633   */\n      add\n        /* \"#utility.yul\":11615:11643   */\n      and\n        /* \"#utility.yul\":11605:11643   */\n      swap1\n      pop\n        /* \"#utility.yul\":11547:11649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11655:11879   */\n    tag_198:\n        /* \"#utility.yul\":11795:11829   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":11791:11792   */\n      0x00\n        /* \"#utility.yul\":11783:11789   */\n      dup3\n        /* \"#utility.yul\":11779:11793   */\n      add\n        /* \"#utility.yul\":11772:11830   */\n      mstore\n        /* \"#utility.yul\":11864:11871   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11859:11861   */\n      0x20\n        /* \"#utility.yul\":11851:11857   */\n      dup3\n        /* \"#utility.yul\":11847:11862   */\n      add\n        /* \"#utility.yul\":11840:11872   */\n      mstore\n        /* \"#utility.yul\":11655:11879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11885:12108   */\n    tag_203:\n        /* \"#utility.yul\":12025:12059   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":12021:12022   */\n      0x00\n        /* \"#utility.yul\":12013:12019   */\n      dup3\n        /* \"#utility.yul\":12009:12023   */\n      add\n        /* \"#utility.yul\":12002:12060   */\n      mstore\n        /* \"#utility.yul\":12094:12100   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12089:12091   */\n      0x20\n        /* \"#utility.yul\":12081:12087   */\n      dup3\n        /* \"#utility.yul\":12077:12092   */\n      add\n        /* \"#utility.yul\":12070:12101   */\n      mstore\n        /* \"#utility.yul\":11885:12108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12114:12339   */\n    tag_208:\n        /* \"#utility.yul\":12254:12288   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12250:12251   */\n      0x00\n        /* \"#utility.yul\":12242:12248   */\n      dup3\n        /* \"#utility.yul\":12238:12252   */\n      add\n        /* \"#utility.yul\":12231:12289   */\n      mstore\n        /* \"#utility.yul\":12323:12331   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12318:12320   */\n      0x20\n        /* \"#utility.yul\":12310:12316   */\n      dup3\n        /* \"#utility.yul\":12306:12321   */\n      add\n        /* \"#utility.yul\":12299:12332   */\n      mstore\n        /* \"#utility.yul\":12114:12339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12345:12522   */\n    tag_213:\n        /* \"#utility.yul\":12485:12514   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12473:12479   */\n      dup3\n        /* \"#utility.yul\":12469:12483   */\n      add\n        /* \"#utility.yul\":12462:12515   */\n      mstore\n        /* \"#utility.yul\":12345:12522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12528:12710   */\n    tag_218:\n        /* \"#utility.yul\":12668:12702   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12664:12665   */\n      0x00\n        /* \"#utility.yul\":12656:12662   */\n      dup3\n        /* \"#utility.yul\":12652:12666   */\n      add\n        /* \"#utility.yul\":12645:12703   */\n      mstore\n        /* \"#utility.yul\":12528:12710   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12716:12938   */\n    tag_223:\n        /* \"#utility.yul\":12856:12890   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12852:12853   */\n      0x00\n        /* \"#utility.yul\":12844:12850   */\n      dup3\n        /* \"#utility.yul\":12840:12854   */\n      add\n        /* \"#utility.yul\":12833:12891   */\n      mstore\n        /* \"#utility.yul\":12925:12930   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12920:12922   */\n      0x20\n        /* \"#utility.yul\":12912:12918   */\n      dup3\n        /* \"#utility.yul\":12908:12923   */\n      add\n        /* \"#utility.yul\":12901:12931   */\n      mstore\n        /* \"#utility.yul\":12716:12938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12944:13165   */\n    tag_228:\n        /* \"#utility.yul\":13084:13118   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":13080:13081   */\n      0x00\n        /* \"#utility.yul\":13072:13078   */\n      dup3\n        /* \"#utility.yul\":13068:13082   */\n      add\n        /* \"#utility.yul\":13061:13119   */\n      mstore\n        /* \"#utility.yul\":13153:13157   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13148:13150   */\n      0x20\n        /* \"#utility.yul\":13140:13146   */\n      dup3\n        /* \"#utility.yul\":13136:13151   */\n      add\n        /* \"#utility.yul\":13129:13158   */\n      mstore\n        /* \"#utility.yul\":12944:13165   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13171:13293   */\n    tag_150:\n        /* \"#utility.yul\":13244:13268   */\n      tag_294\n        /* \"#utility.yul\":13262:13267   */\n      dup2\n        /* \"#utility.yul\":13244:13268   */\n      tag_179\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13237:13242   */\n      dup2\n        /* \"#utility.yul\":13234:13269   */\n      eq\n        /* \"#utility.yul\":13224:13287   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":13283:13284   */\n      0x00\n        /* \"#utility.yul\":13280:13281   */\n      dup1\n        /* \"#utility.yul\":13273:13285   */\n      revert\n        /* \"#utility.yul\":13224:13287   */\n    tag_295:\n        /* \"#utility.yul\":13171:13293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13299:13421   */\n    tag_154:\n        /* \"#utility.yul\":13372:13396   */\n      tag_297\n        /* \"#utility.yul\":13390:13395   */\n      dup2\n        /* \"#utility.yul\":13372:13396   */\n      tag_232\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":13365:13370   */\n      dup2\n        /* \"#utility.yul\":13362:13397   */\n      eq\n        /* \"#utility.yul\":13352:13415   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":13411:13412   */\n      0x00\n        /* \"#utility.yul\":13408:13409   */\n      dup1\n        /* \"#utility.yul\":13401:13413   */\n      revert\n        /* \"#utility.yul\":13352:13415   */\n    tag_298:\n        /* \"#utility.yul\":13299:13421   */\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220b737db32894834b15895a91ae29a5eb3d8bd424d86d524e4034bbc5df14ba14764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_441": {
									"entryPoint": null,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_501": {
									"entryPoint": null,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_453": {
									"entryPoint": 196,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b611619806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101a15780638f32d59b146101bf578063a457c2d7146101dd578063a9059cbb1461020d578063dd62ed3e1461023d578063f2fde38b1461026d576100b4565b8063095ea7b3146100b957806318160ddd146100e957806323b872dd14610107578063395093511461013757806370a0823114610167578063715018a614610197575b600080fd5b6100d360048036038101906100ce9190610f11565b610289565b6040516100e091906110c7565b60405180910390f35b6100f16102a7565b6040516100fe91906111e4565b60405180910390f35b610121600480360381019061011c9190610ebe565b6102b1565b60405161012e91906110c7565b60405180910390f35b610151600480360381019061014c9190610f11565b61038a565b60405161015e91906110c7565b60405180910390f35b610181600480360381019061017c9190610e51565b61043d565b60405161018e91906111e4565b60405180910390f35b61019f610486565b005b6101a961058b565b6040516101b691906110ac565b60405180910390f35b6101c76105b4565b6040516101d491906110c7565b60405180910390f35b6101f760048036038101906101f29190610f11565b610612565b60405161020491906110c7565b60405180910390f35b61022760048036038101906102229190610f11565b6106df565b60405161023491906110c7565b60405180910390f35b61025760048036038101906102529190610e7e565b6106fd565b60405161026491906111e4565b60405180910390f35b61028760048036038101906102829190610e51565b610784565b005b600061029d6102966107d7565b84846107df565b6001905092915050565b6000600354905090565b60006102be8484846109aa565b61037f846102ca6107d7565b61037a8560405180606001604052806028815260200161157160289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103306107d7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c389092919063ffffffff16565b6107df565b600190509392505050565b60006104336103976107d7565b8461042e85600260006103a86107d7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9c90919063ffffffff16565b6107df565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61048e6105b4565b6104cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c490611184565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105f66107d7565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60006106d561061f6107d7565b846106d0856040518060600160405280602581526020016115bf60259139600260006106496107d7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c389092919063ffffffff16565b6107df565b6001905092915050565b60006106f36106ec6107d7565b84846109aa565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61078c6105b4565b6107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290611184565b60405180910390fd5b6107d481610cfa565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084690611124565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b6906111c4565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161099d91906111e4565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1190611104565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a81906111a4565b60405180910390fd5b610af68160405180606001604052806026815260200161159960269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c389092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b8b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c2b91906111e4565b60405180910390a3505050565b6000838311158290610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7791906110e2565b60405180910390fd5b5060008385610c8f9190611271565b9050809150509392505050565b6000808284610cab919061121b565b905083811015610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce790611164565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6190611144565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610e3681611542565b92915050565b600081359050610e4b81611559565b92915050565b600060208284031215610e6757610e6661134f565b5b6000610e7584828501610e27565b91505092915050565b60008060408385031215610e9557610e9461134f565b5b6000610ea385828601610e27565b9250506020610eb485828601610e27565b9150509250929050565b600080600060608486031215610ed757610ed661134f565b5b6000610ee586828701610e27565b9350506020610ef686828701610e27565b9250506040610f0786828701610e3c565b9150509250925092565b60008060408385031215610f2857610f2761134f565b5b6000610f3685828601610e27565b9250506020610f4785828601610e3c565b9150509250929050565b610f5a816112a5565b82525050565b610f69816112b7565b82525050565b6000610f7a826111ff565b610f84818561120a565b9350610f948185602086016112ed565b610f9d81611354565b840191505092915050565b6000610fb560258361120a565b9150610fc082611365565b604082019050919050565b6000610fd860248361120a565b9150610fe3826113b4565b604082019050919050565b6000610ffb60268361120a565b915061100682611403565b604082019050919050565b600061101e601b8361120a565b915061102982611452565b602082019050919050565b600061104160208361120a565b915061104c8261147b565b602082019050919050565b600061106460238361120a565b915061106f826114a4565b604082019050919050565b600061108760228361120a565b9150611092826114f3565b604082019050919050565b6110a6816112e3565b82525050565b60006020820190506110c16000830184610f51565b92915050565b60006020820190506110dc6000830184610f60565b92915050565b600060208201905081810360008301526110fc8184610f6f565b905092915050565b6000602082019050818103600083015261111d81610fa8565b9050919050565b6000602082019050818103600083015261113d81610fcb565b9050919050565b6000602082019050818103600083015261115d81610fee565b9050919050565b6000602082019050818103600083015261117d81611011565b9050919050565b6000602082019050818103600083015261119d81611034565b9050919050565b600060208201905081810360008301526111bd81611057565b9050919050565b600060208201905081810360008301526111dd8161107a565b9050919050565b60006020820190506111f9600083018461109d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611226826112e3565b9150611231836112e3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561126657611265611320565b5b828201905092915050565b600061127c826112e3565b9150611287836112e3565b92508282101561129a57611299611320565b5b828203905092915050565b60006112b0826112c3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561130b5780820151818401526020810190506112f0565b8381111561131a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b61154b816112a5565b811461155657600080fd5b50565b611562816112e3565b811461156d57600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b737db32894834b15895a91ae29a5eb3d8bd424d86d524e4034bbc5df14ba14764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1619 DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x486 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x29D PUSH2 0x296 PUSH2 0x7D7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP5 DUP5 DUP5 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x37F DUP5 PUSH2 0x2CA PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x37A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1571 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x330 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x397 PUSH2 0x7D7 JUMP JUMPDEST DUP5 PUSH2 0x42E DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x3A8 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48E PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C4 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F6 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D5 PUSH2 0x61F PUSH2 0x7D7 JUMP JUMPDEST DUP5 PUSH2 0x6D0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15BF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x649 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F3 PUSH2 0x6EC PUSH2 0x7D7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x78C PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0xCFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1599 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB8B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE7 SWAP1 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD61 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE36 DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4B DUP2 PUSH2 0x1559 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE75 DUP5 DUP3 DUP6 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH2 0xE94 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP6 DUP3 DUP7 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEB4 DUP6 DUP3 DUP7 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xED7 JUMPI PUSH2 0xED6 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE5 DUP7 DUP3 DUP8 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEF6 DUP7 DUP3 DUP8 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF07 DUP7 DUP3 DUP8 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF28 JUMPI PUSH2 0xF27 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF36 DUP6 DUP3 DUP7 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF47 DUP6 DUP3 DUP7 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5A DUP2 PUSH2 0x12A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF69 DUP2 PUSH2 0x12B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7A DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0xF84 DUP2 DUP6 PUSH2 0x120A JUMP JUMPDEST SWAP4 POP PUSH2 0xF94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12ED JUMP JUMPDEST PUSH2 0xF9D DUP2 PUSH2 0x1354 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB5 PUSH1 0x25 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD8 PUSH1 0x24 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0xFE3 DUP3 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB PUSH1 0x26 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x1006 DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101E PUSH1 0x1B DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x1029 DUP3 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x20 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1064 PUSH1 0x23 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x106F DUP3 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1087 PUSH1 0x22 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x1092 DUP3 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A6 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FC DUP2 DUP5 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x111D DUP2 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x115D DUP2 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x117D DUP2 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x119D DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11BD DUP2 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11DD DUP2 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x109D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1226 DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1231 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1265 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127C DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1287 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x129A JUMPI PUSH2 0x1299 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x130B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12F0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x131A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x12A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1562 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xB7 CALLDATACOPY 0xDB ORIGIN DUP10 BASEFEE CALLVALUE 0xB1 PC SWAP6 0xA9 BYTE 0xE2 SWAP11 0x5E 0xB3 0xD8 0xBD TIMESTAMP 0x4D DUP7 0xD5 0x24 0xE4 SUB 0x4B 0xBC 0x5D CALL 0x4B LOG1 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1140:6611:0:-:0;;;;;;;;;;;;;716:17:2;736:12;:10;;;:12;;:::i;:::-;716:32;;763:9;754:6;;:18;;;;;;;;;;;;;;;;;;816:9;783:43;;812:1;783:43;;;;;;;;;;;;710:121;1140:6611:0;;760:99:1;805:15;843:10;828:26;;760:99;:::o;1140:6611:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_404": {
									"entryPoint": 2015,
									"id": 404,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_453": {
									"entryPoint": 2007,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_594": {
									"entryPoint": 3322,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_266": {
									"entryPoint": 2474,
									"id": 266,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_701": {
									"entryPoint": 3228,
									"id": 701,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_90": {
									"entryPoint": 1789,
									"id": 90,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_111": {
									"entryPoint": 649,
									"id": 111,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_51": {
									"entryPoint": 1085,
									"id": 51,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decreaseAllowance_206": {
									"entryPoint": 1554,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_177": {
									"entryPoint": 906,
									"id": 177,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isOwner_533": {
									"entryPoint": 1460,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_510": {
									"entryPoint": 1419,
									"id": 510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_555": {
									"entryPoint": 1158,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_746": {
									"entryPoint": 3128,
									"id": 746,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalSupply_37": {
									"entryPoint": 679,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_149": {
									"entryPoint": 689,
									"id": 149,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_568": {
									"entryPoint": 1924,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_72": {
									"entryPoint": 1759,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4845,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13424:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:5"
															},
															"nodeType": "YulIf",
															"src": "725:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:5",
														"type": ""
													}
												],
												"src": "632:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:5"
															},
															"nodeType": "YulIf",
															"src": "1222:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:5",
														"type": ""
													}
												],
												"src": "1112:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:5"
															},
															"nodeType": "YulIf",
															"src": "1830:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:5",
														"type": ""
													}
												],
												"src": "1737:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2299:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2322:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2304:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2292:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2270:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2277:3:5",
														"type": ""
													}
												],
												"src": "2217:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2400:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2417:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2437:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2422:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2422:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2410:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2410:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2388:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2395:3:5",
														"type": ""
													}
												],
												"src": "2341:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2558:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2605:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2572:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2562:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2620:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2686:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2691:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2627:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2620:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2733:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2740:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2747:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2752:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2707:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2768:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2779:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2784:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2784:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2775:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2529:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2536:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2544:3:5",
														"type": ""
													}
												],
												"src": "2456:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3048:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2989:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2982:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3154:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "3065:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3167:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3178:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2960:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2968:3:5",
														"type": ""
													}
												],
												"src": "2826:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3344:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3354:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3420:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3425:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3361:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3361:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "3437:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3437:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3539:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3550:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3555:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3332:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3340:3:5",
														"type": ""
													}
												],
												"src": "3198:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3792:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3797:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3733:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3898:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3809:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3809:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3911:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3922:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3704:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3712:3:5",
														"type": ""
													}
												],
												"src": "3570:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4088:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4098:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4164:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4169:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4105:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4098:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4270:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "4181:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4181:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4181:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4283:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4294:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4076:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4084:3:5",
														"type": ""
													}
												],
												"src": "3942:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4460:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4470:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4536:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4541:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4477:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4477:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4470:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4642:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4553:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4553:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4655:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4666:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4671:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4655:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4448:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4456:3:5",
														"type": ""
													}
												],
												"src": "4314:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4832:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4842:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4908:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4913:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4849:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5014:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "4925:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5038:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5043:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5027:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4820:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4828:3:5",
														"type": ""
													}
												],
												"src": "4686:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5204:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5214:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5280:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5221:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5214:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "5297:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5297:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5297:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5399:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5410:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5406:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5399:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5200:3:5",
														"type": ""
													}
												],
												"src": "5058:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5495:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5512:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5535:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5517:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5517:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5505:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5505:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5483:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5490:3:5",
														"type": ""
													}
												],
												"src": "5430:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5652:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5662:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5674:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5670:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5662:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5742:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5766:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5751:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5698:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5624:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5636:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5647:4:5",
														"type": ""
													}
												],
												"src": "5554:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5874:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5884:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5896:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5907:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5892:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5884:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5971:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5982:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5920:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5920:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5920:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5846:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5858:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5869:4:5",
														"type": ""
													}
												],
												"src": "5782:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6116:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6126:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6138:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6134:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6134:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6126:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6173:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6184:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6192:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6198:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6188:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6188:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6218:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6290:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6299:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6226:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6226:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6218:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6088:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6100:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6111:4:5",
														"type": ""
													}
												],
												"src": "5998:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6488:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6498:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6510:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6506:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6506:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6498:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6556:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6541:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6564:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6570:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6534:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6590:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6724:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6598:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6598:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6590:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6468:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6483:4:5",
														"type": ""
													}
												],
												"src": "6317:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6913:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6923:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6935:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6946:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6923:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6981:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6989:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6995:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6985:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7015:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7149:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7023:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7023:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7015:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6893:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6908:4:5",
														"type": ""
													}
												],
												"src": "6742:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7338:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7348:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7360:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7371:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7356:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7348:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7406:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7391:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7391:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7414:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7420:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7410:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7410:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7384:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7440:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7574:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7448:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7448:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7440:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7318:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7333:4:5",
														"type": ""
													}
												],
												"src": "7167:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7763:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7773:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7785:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7796:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7781:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7820:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7831:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7816:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7816:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7839:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7845:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7835:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7809:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7809:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7865:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7999:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7873:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7873:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7865:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7743:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7758:4:5",
														"type": ""
													}
												],
												"src": "7592:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8188:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8198:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8210:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8221:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8206:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8198:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8245:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8256:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8241:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8264:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8270:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8260:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8260:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8424:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8298:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8298:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8290:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8168:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8183:4:5",
														"type": ""
													}
												],
												"src": "8017:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8613:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8623:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8635:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8646:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8631:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8631:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8623:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8670:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8681:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8666:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8666:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8689:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8695:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8685:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8685:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8659:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8659:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8659:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8715:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8849:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8723:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8723:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8715:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8593:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8608:4:5",
														"type": ""
													}
												],
												"src": "8442:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9038:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9048:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9060:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9071:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9056:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9048:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9095:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9106:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9091:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9114:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9120:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9110:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9110:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9084:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9140:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9274:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9148:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9148:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9140:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9018:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9033:4:5",
														"type": ""
													}
												],
												"src": "8867:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9390:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9400:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9412:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9423:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9408:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9400:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9480:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9493:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9504:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9489:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9436:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9436:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9436:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9362:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9374:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9385:4:5",
														"type": ""
													}
												],
												"src": "9292:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9560:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9570:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9586:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9580:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9580:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9570:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9553:6:5",
														"type": ""
													}
												],
												"src": "9520:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9660:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9671:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9687:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9681:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9671:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9643:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9653:6:5",
														"type": ""
													}
												],
												"src": "9601:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9802:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9819:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9824:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9812:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9812:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9840:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9859:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9864:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9855:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9855:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9840:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9774:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9779:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9790:11:5",
														"type": ""
													}
												],
												"src": "9706:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9925:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9935:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9958:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9940:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9940:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9935:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9969:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9992:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9974:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9974:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9969:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10132:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10134:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10134:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10134:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10053:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10060:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10128:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10056:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10056:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10050:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10050:81:5"
															},
															"nodeType": "YulIf",
															"src": "10047:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10164:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10175:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10178:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10171:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10164:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9912:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9915:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9921:3:5",
														"type": ""
													}
												],
												"src": "9881:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10237:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10247:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10270:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10252:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10247:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10281:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10304:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10286:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10281:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10328:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10330:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10330:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10330:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10322:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10325:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10319:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10319:8:5"
															},
															"nodeType": "YulIf",
															"src": "10316:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10360:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10372:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10375:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10368:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10368:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10360:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10223:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10226:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10232:4:5",
														"type": ""
													}
												],
												"src": "10192:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10434:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10444:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10473:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10455:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10455:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10444:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10416:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10426:7:5",
														"type": ""
													}
												],
												"src": "10389:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10533:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10543:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10568:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10561:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10561:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10554:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10554:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10543:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10515:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10525:7:5",
														"type": ""
													}
												],
												"src": "10491:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10632:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10642:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10657:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10664:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10653:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10653:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10624:7:5",
														"type": ""
													}
												],
												"src": "10587:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10764:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10774:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10785:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10774:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10746:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10756:7:5",
														"type": ""
													}
												],
												"src": "10719:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10851:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10861:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10870:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10865:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10930:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10955:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10960:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10951:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10951:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10974:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10979:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10970:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10970:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10964:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10964:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10944:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10944:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10944:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10891:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10894:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10888:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10902:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10904:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10913:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10916:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10909:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10909:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10904:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10884:3:5",
																"statements": []
															},
															"src": "10880:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11027:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11077:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11082:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11073:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11073:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11091:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11066:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11066:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11066:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11008:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11011:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11005:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:13:5"
															},
															"nodeType": "YulIf",
															"src": "11002:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10833:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10838:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10843:6:5",
														"type": ""
													}
												],
												"src": "10802:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11143:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11160:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11163:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11153:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11153:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11153:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11257:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11260:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11250:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11250:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11281:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11284:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11274:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11274:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11274:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11115:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11390:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11407:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11410:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11400:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11400:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11400:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11301:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11513:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11530:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11533:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11523:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11523:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11523:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11424:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11595:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11605:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11623:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11630:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11619:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11619:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11639:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11635:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11635:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11615:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11605:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11578:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11588:6:5",
														"type": ""
													}
												],
												"src": "11547:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11761:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11783:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11791:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11779:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11795:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11772:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11772:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11772:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11851:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11859:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11847:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11847:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11864:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11840:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11840:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11753:6:5",
														"type": ""
													}
												],
												"src": "11655:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11991:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12013:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12021:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12009:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12009:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12025:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12002:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12002:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12002:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12081:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12089:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12077:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12077:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12094:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12070:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12070:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12070:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11983:6:5",
														"type": ""
													}
												],
												"src": "11885:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12220:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12242:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12250:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12238:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12238:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12254:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12231:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12231:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12231:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12310:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12318:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12306:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12306:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12323:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12299:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12299:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12299:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12212:6:5",
														"type": ""
													}
												],
												"src": "12114:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12451:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12473:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12481:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12469:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12469:14:5"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12485:29:5",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12462:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12462:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12462:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12443:6:5",
														"type": ""
													}
												],
												"src": "12345:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12634:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12656:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12664:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12652:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12668:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12645:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12645:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12626:6:5",
														"type": ""
													}
												],
												"src": "12528:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12822:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12844:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12852:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12840:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12856:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12833:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12833:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12833:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12912:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12920:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12908:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12925:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12901:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12901:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12901:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12814:6:5",
														"type": ""
													}
												],
												"src": "12716:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13050:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13072:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13080:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13068:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13068:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13084:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13061:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13061:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13061:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13140:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13148:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13136:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13136:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13153:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13129:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13129:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13129:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13042:6:5",
														"type": ""
													}
												],
												"src": "12944:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13214:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13271:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13280:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13283:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13273:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13273:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13273:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13237:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13262:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13244:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13244:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13234:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13234:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:43:5"
															},
															"nodeType": "YulIf",
															"src": "13224:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13207:5:5",
														"type": ""
													}
												],
												"src": "13171:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13342:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13399:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13408:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13411:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13401:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13401:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13401:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13365:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13390:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13372:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13372:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13362:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13362:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13355:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13355:43:5"
															},
															"nodeType": "YulIf",
															"src": "13352:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13335:5:5",
														"type": ""
													}
												],
												"src": "13299:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x486 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x29D PUSH2 0x296 PUSH2 0x7D7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP5 DUP5 DUP5 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x37F DUP5 PUSH2 0x2CA PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x37A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1571 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x330 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x397 PUSH2 0x7D7 JUMP JUMPDEST DUP5 PUSH2 0x42E DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x3A8 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48E PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C4 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F6 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D5 PUSH2 0x61F PUSH2 0x7D7 JUMP JUMPDEST DUP5 PUSH2 0x6D0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15BF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x649 PUSH2 0x7D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F3 PUSH2 0x6EC PUSH2 0x7D7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x78C PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0xCFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1599 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB8B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE7 SWAP1 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD61 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE36 DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4B DUP2 PUSH2 0x1559 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE75 DUP5 DUP3 DUP6 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH2 0xE94 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP6 DUP3 DUP7 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEB4 DUP6 DUP3 DUP7 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xED7 JUMPI PUSH2 0xED6 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE5 DUP7 DUP3 DUP8 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEF6 DUP7 DUP3 DUP8 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF07 DUP7 DUP3 DUP8 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF28 JUMPI PUSH2 0xF27 PUSH2 0x134F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF36 DUP6 DUP3 DUP7 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF47 DUP6 DUP3 DUP7 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5A DUP2 PUSH2 0x12A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF69 DUP2 PUSH2 0x12B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7A DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0xF84 DUP2 DUP6 PUSH2 0x120A JUMP JUMPDEST SWAP4 POP PUSH2 0xF94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12ED JUMP JUMPDEST PUSH2 0xF9D DUP2 PUSH2 0x1354 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB5 PUSH1 0x25 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD8 PUSH1 0x24 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0xFE3 DUP3 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB PUSH1 0x26 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x1006 DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101E PUSH1 0x1B DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x1029 DUP3 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x20 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1064 PUSH1 0x23 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x106F DUP3 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1087 PUSH1 0x22 DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x1092 DUP3 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A6 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FC DUP2 DUP5 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x111D DUP2 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x115D DUP2 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x117D DUP2 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x119D DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11BD DUP2 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11DD DUP2 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x109D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1226 DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1231 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1265 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127C DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1287 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x129A JUMPI PUSH2 0x1299 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x130B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12F0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x131A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x12A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1562 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xB7 CALLDATACOPY 0xDB ORIGIN DUP10 BASEFEE CALLVALUE 0xB1 PC SWAP6 0xA9 BYTE 0xE2 SWAP11 0x5E 0xB3 0xD8 0xBD TIMESTAMP 0x4D DUP7 0xD5 0x24 0xE4 SUB 0x4B 0xBC 0x5D CALL 0x4B LOG1 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1140:6611:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2334:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1427:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2914:343;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3626:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1569:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1630:127:2;;;:::i;:::-;;899:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1218:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4280:272:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1865:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1896:101:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2334:148:0;2409:4;2421:39;2430:12;:10;:12::i;:::-;2444:7;2453:6;2421:8;:39::i;:::-;2473:4;2466:11;;2334:148;;;;:::o;1427:92::-;1480:7;1502:12;;1495:19;;1427:92;:::o;2914:343::-;3036:4;3048:36;3058:6;3066:9;3077:6;3048:9;:36::i;:::-;3090:145;3106:6;3120:12;:10;:12::i;:::-;3140:89;3178:6;3140:89;;;;;;;;;;;;;;;;;:11;:19;3152:6;3140:19;;;;;;;;;;;;;;;:33;3160:12;:10;:12::i;:::-;3140:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3090:8;:145::i;:::-;3248:4;3241:11;;2914:343;;;;;:::o;3626:197::-;3706:4;3718:83;3727:12;:10;:12::i;:::-;3741:7;3750:50;3789:10;3750:11;:25;3762:12;:10;:12::i;:::-;3750:25;;;;;;;;;;;;;;;:34;3776:7;3750:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3718:8;:83::i;:::-;3814:4;3807:11;;3626:197;;;;:::o;1569:111::-;1635:7;1657:9;:18;1667:7;1657:18;;;;;;;;;;;;;;;;1650:25;;1569:111;;;:::o;1630:127:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:1:::1;1687:40;;1708:6;::::0;::::1;;;;;;;;1687:40;;;;;;;;;;;;1750:1;1733:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1630:127::o:0;899:71::-;937:7;959:6;;;;;;;;;;;952:13;;899:71;:::o;1218:86::-;1258:4;1293:6;;;;;;;;;;;1277:22;;:12;:10;:12::i;:::-;:22;;;1270:29;;1218:86;:::o;4280:272:0:-;4365:4;4377:153;4393:12;:10;:12::i;:::-;4413:7;4428:96;4467:15;4428:96;;;;;;;;;;;;;;;;;:11;:25;4440:12;:10;:12::i;:::-;4428:25;;;;;;;;;;;;;;;:34;4454:7;4428:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4377:8;:153::i;:::-;4543:4;4536:11;;4280:272;;;;:::o;1865:162::-;1951:4;1963:42;1973:12;:10;:12::i;:::-;1987:9;1998:6;1963:9;:42::i;:::-;2018:4;2011:11;;1865:162;;;;:::o;2077:135::-;2158:7;2180:11;:18;2192:5;2180:18;;;;;;;;;;;;;;;:27;2199:7;2180:27;;;;;;;;;;;;;;;;2173:34;;2077:135;;;;:::o;1896:101:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1964:28:::1;1983:8;1964:18;:28::i;:::-;1896:101:::0;:::o;760:99:1:-;805:15;843:10;828:26;;760:99;:::o;7012:330:0:-;7134:1;7117:19;;:5;:19;;;;7109:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7210:1;7191:21;;:7;:21;;;;7183:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7288:6;7258:11;:18;7270:5;7258:18;;;;;;;;;;;;;;;:27;7277:7;7258:27;;;;;;;;;;;;;;;:36;;;;7321:7;7305:32;;7314:5;7305:32;;;7330:6;7305:32;;;;;;:::i;:::-;;;;;;;;7012:330;;;:::o;4996:466::-;5131:1;5113:20;;:6;:20;;;;5105:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5210:1;5189:23;;:9;:23;;;;5181:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5279;5301:6;5279:71;;;;;;;;;;;;;;;;;:9;:17;5289:6;5279:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5259:9;:17;5269:6;5259:17;;;;;;;;;;;;;;;:91;;;;5379:32;5404:6;5379:9;:20;5389:9;5379:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5356:9;:20;5366:9;5356:20;;;;;;;;;;;;;;;:55;;;;5439:9;5422:35;;5431:6;5422:35;;;5450:6;5422:35;;;;;;:::i;:::-;;;;;;;;4996:466;;;:::o;1692:189:4:-;1794:7;1822:1;1817;:6;;1825:12;1809:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1844:9;1860:1;1856;:5;;;;:::i;:::-;1844:17;;1875:1;1868:8;;;1692:189;;;;;:::o;858:162::-;916:7;931:9;947:1;943;:5;;;;:::i;:::-;931:17;;967:1;962;:6;;954:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1014:1;1007:8;;;858:162;;;;:::o;2090:211:2:-;2179:1;2159:22;;:8;:22;;;;2151:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:8;2235:38;;2256:6;;;;;;;;;;2235:38;;;;;;;;;;;;2288:8;2279:6;;:17;;;;;;;;;;;;;;;;;;2090:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:118::-;2304:24;2322:5;2304:24;:::i;:::-;2299:3;2292:37;2217:118;;:::o;2341:109::-;2422:21;2437:5;2422:21;:::i;:::-;2417:3;2410:34;2341:109;;:::o;2456:364::-;2544:3;2572:39;2605:5;2572:39;:::i;:::-;2627:71;2691:6;2686:3;2627:71;:::i;:::-;2620:78;;2707:52;2752:6;2747:3;2740:4;2733:5;2729:16;2707:52;:::i;:::-;2784:29;2806:6;2784:29;:::i;:::-;2779:3;2775:39;2768:46;;2548:272;2456:364;;;;:::o;2826:366::-;2968:3;2989:67;3053:2;3048:3;2989:67;:::i;:::-;2982:74;;3065:93;3154:3;3065:93;:::i;:::-;3183:2;3178:3;3174:12;3167:19;;2826:366;;;:::o;3198:::-;3340:3;3361:67;3425:2;3420:3;3361:67;:::i;:::-;3354:74;;3437:93;3526:3;3437:93;:::i;:::-;3555:2;3550:3;3546:12;3539:19;;3198:366;;;:::o;3570:::-;3712:3;3733:67;3797:2;3792:3;3733:67;:::i;:::-;3726:74;;3809:93;3898:3;3809:93;:::i;:::-;3927:2;3922:3;3918:12;3911:19;;3570:366;;;:::o;3942:::-;4084:3;4105:67;4169:2;4164:3;4105:67;:::i;:::-;4098:74;;4181:93;4270:3;4181:93;:::i;:::-;4299:2;4294:3;4290:12;4283:19;;3942:366;;;:::o;4314:::-;4456:3;4477:67;4541:2;4536:3;4477:67;:::i;:::-;4470:74;;4553:93;4642:3;4553:93;:::i;:::-;4671:2;4666:3;4662:12;4655:19;;4314:366;;;:::o;4686:::-;4828:3;4849:67;4913:2;4908:3;4849:67;:::i;:::-;4842:74;;4925:93;5014:3;4925:93;:::i;:::-;5043:2;5038:3;5034:12;5027:19;;4686:366;;;:::o;5058:::-;5200:3;5221:67;5285:2;5280:3;5221:67;:::i;:::-;5214:74;;5297:93;5386:3;5297:93;:::i;:::-;5415:2;5410:3;5406:12;5399:19;;5058:366;;;:::o;5430:118::-;5517:24;5535:5;5517:24;:::i;:::-;5512:3;5505:37;5430:118;;:::o;5554:222::-;5647:4;5685:2;5674:9;5670:18;5662:26;;5698:71;5766:1;5755:9;5751:17;5742:6;5698:71;:::i;:::-;5554:222;;;;:::o;5782:210::-;5869:4;5907:2;5896:9;5892:18;5884:26;;5920:65;5982:1;5971:9;5967:17;5958:6;5920:65;:::i;:::-;5782:210;;;;:::o;5998:313::-;6111:4;6149:2;6138:9;6134:18;6126:26;;6198:9;6192:4;6188:20;6184:1;6173:9;6169:17;6162:47;6226:78;6299:4;6290:6;6226:78;:::i;:::-;6218:86;;5998:313;;;;:::o;6317:419::-;6483:4;6521:2;6510:9;6506:18;6498:26;;6570:9;6564:4;6560:20;6556:1;6545:9;6541:17;6534:47;6598:131;6724:4;6598:131;:::i;:::-;6590:139;;6317:419;;;:::o;6742:::-;6908:4;6946:2;6935:9;6931:18;6923:26;;6995:9;6989:4;6985:20;6981:1;6970:9;6966:17;6959:47;7023:131;7149:4;7023:131;:::i;:::-;7015:139;;6742:419;;;:::o;7167:::-;7333:4;7371:2;7360:9;7356:18;7348:26;;7420:9;7414:4;7410:20;7406:1;7395:9;7391:17;7384:47;7448:131;7574:4;7448:131;:::i;:::-;7440:139;;7167:419;;;:::o;7592:::-;7758:4;7796:2;7785:9;7781:18;7773:26;;7845:9;7839:4;7835:20;7831:1;7820:9;7816:17;7809:47;7873:131;7999:4;7873:131;:::i;:::-;7865:139;;7592:419;;;:::o;8017:::-;8183:4;8221:2;8210:9;8206:18;8198:26;;8270:9;8264:4;8260:20;8256:1;8245:9;8241:17;8234:47;8298:131;8424:4;8298:131;:::i;:::-;8290:139;;8017:419;;;:::o;8442:::-;8608:4;8646:2;8635:9;8631:18;8623:26;;8695:9;8689:4;8685:20;8681:1;8670:9;8666:17;8659:47;8723:131;8849:4;8723:131;:::i;:::-;8715:139;;8442:419;;;:::o;8867:::-;9033:4;9071:2;9060:9;9056:18;9048:26;;9120:9;9114:4;9110:20;9106:1;9095:9;9091:17;9084:47;9148:131;9274:4;9148:131;:::i;:::-;9140:139;;8867:419;;;:::o;9292:222::-;9385:4;9423:2;9412:9;9408:18;9400:26;;9436:71;9504:1;9493:9;9489:17;9480:6;9436:71;:::i;:::-;9292:222;;;;:::o;9601:99::-;9653:6;9687:5;9681:12;9671:22;;9601:99;;;:::o;9706:169::-;9790:11;9824:6;9819:3;9812:19;9864:4;9859:3;9855:14;9840:29;;9706:169;;;;:::o;9881:305::-;9921:3;9940:20;9958:1;9940:20;:::i;:::-;9935:25;;9974:20;9992:1;9974:20;:::i;:::-;9969:25;;10128:1;10060:66;10056:74;10053:1;10050:81;10047:107;;;10134:18;;:::i;:::-;10047:107;10178:1;10175;10171:9;10164:16;;9881:305;;;;:::o;10192:191::-;10232:4;10252:20;10270:1;10252:20;:::i;:::-;10247:25;;10286:20;10304:1;10286:20;:::i;:::-;10281:25;;10325:1;10322;10319:8;10316:34;;;10330:18;;:::i;:::-;10316:34;10375:1;10372;10368:9;10360:17;;10192:191;;;;:::o;10389:96::-;10426:7;10455:24;10473:5;10455:24;:::i;:::-;10444:35;;10389:96;;;:::o;10491:90::-;10525:7;10568:5;10561:13;10554:21;10543:32;;10491:90;;;:::o;10587:126::-;10624:7;10664:42;10657:5;10653:54;10642:65;;10587:126;;;:::o;10719:77::-;10756:7;10785:5;10774:16;;10719:77;;;:::o;10802:307::-;10870:1;10880:113;10894:6;10891:1;10888:13;10880:113;;;10979:1;10974:3;10970:11;10964:18;10960:1;10955:3;10951:11;10944:39;10916:2;10913:1;10909:10;10904:15;;10880:113;;;11011:6;11008:1;11005:13;11002:101;;;11091:1;11082:6;11077:3;11073:16;11066:27;11002:101;10851:258;10802:307;;;:::o;11115:180::-;11163:77;11160:1;11153:88;11260:4;11257:1;11250:15;11284:4;11281:1;11274:15;11424:117;11533:1;11530;11523:12;11547:102;11588:6;11639:2;11635:7;11630:2;11623:5;11619:14;11615:28;11605:38;;11547:102;;;:::o;11655:224::-;11795:34;11791:1;11783:6;11779:14;11772:58;11864:7;11859:2;11851:6;11847:15;11840:32;11655:224;:::o;11885:223::-;12025:34;12021:1;12013:6;12009:14;12002:58;12094:6;12089:2;12081:6;12077:15;12070:31;11885:223;:::o;12114:225::-;12254:34;12250:1;12242:6;12238:14;12231:58;12323:8;12318:2;12310:6;12306:15;12299:33;12114:225;:::o;12345:177::-;12485:29;12481:1;12473:6;12469:14;12462:53;12345:177;:::o;12528:182::-;12668:34;12664:1;12656:6;12652:14;12645:58;12528:182;:::o;12716:222::-;12856:34;12852:1;12844:6;12840:14;12833:58;12925:5;12920:2;12912:6;12908:15;12901:30;12716:222;:::o;12944:221::-;13084:34;13080:1;13072:6;13068:14;13061:58;13153:4;13148:2;13140:6;13136:15;13129:29;12944:221;:::o;13171:122::-;13244:24;13262:5;13244:24;:::i;:::-;13237:5;13234:35;13224:63;;13283:1;13280;13273:12;13224:63;13171:122;:::o;13299:::-;13372:24;13390:5;13372:24;:::i;:::-;13365:5;13362:35;13352:63;;13411:1;13408;13401:12;13352:63;13299:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1131400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"isOwner()": "2553",
								"owner()": "2522",
								"renounceOwnership()": "30440",
								"totalSupply()": "2460",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30817"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 716,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 772,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 816,
									"end": 825,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 812,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 710,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 760,
									"end": 859,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 805,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 853,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 7751,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b737db32894834b15895a91ae29a5eb3d8bd424d86d524e4034bbc5df14ba14764736f6c63430008070033",
									".code": [
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 7751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2430,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2421,
											"end": 2460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2421,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2421,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2466,
											"end": 2477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2482,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3048,
											"end": 3084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3048,
											"end": 3084,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3048,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3178,
											"end": 3184,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3151,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3160,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3160,
											"end": 3172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3160,
											"end": 3172,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3160,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3140,
											"end": 3177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3140,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3090,
											"end": 3235,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3090,
											"end": 3235,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3090,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3241,
											"end": 3252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3727,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3727,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3727,
											"end": 3739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3739,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3727,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3741,
											"end": 3748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3761,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3762,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3762,
											"end": 3774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3774,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3762,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3775,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3750,
											"end": 3788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3750,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3718,
											"end": 3801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3718,
											"end": 3801,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3718,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1666,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4393,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4420,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4467,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4440,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4440,
											"end": 4452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4452,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4440,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4428,
											"end": 4466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4428,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4377,
											"end": 4530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4530,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4377,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4547,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4536,
											"end": 4547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 4547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4552,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1973,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1963,
											"end": 2005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1963,
											"end": 2005,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1963,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2018,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2011,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 2027,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1983,
											"end": 1991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 853,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7012,
											"end": 7342,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7012,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7109,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7191,
											"end": 7212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7191,
											"end": 7212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7212,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7183,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7269,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7284,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7285,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7294,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7342,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4996,
											"end": 5462,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4996,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5105,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5189,
											"end": 5212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5189,
											"end": 5212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5212,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5181,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5295,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5279,
											"end": 5300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5379,
											"end": 5403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5411,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5450,
											"end": 5456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5457,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5462,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1857,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1876,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 916,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 943,
											"end": 944,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 943,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 963,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 968,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 968,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 954,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2335,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2217,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2322,
											"end": 2327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2335,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2341,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2341,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2450,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2691,
											"end": 2697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2689,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2698,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2750,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2738,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 2971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3053,
											"end": 3055,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3154,
											"end": 3157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3343,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3425,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3526,
											"end": 3529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3792,
											"end": 3795,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3898,
											"end": 3901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4169,
											"end": 4171,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4098,
											"end": 4172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4098,
											"end": 4172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4270,
											"end": 4273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4539,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4642,
											"end": 4645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4671,
											"end": 4673,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4913,
											"end": 4915,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4908,
											"end": 4911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5014,
											"end": 5017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5535,
											"end": 5540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5554,
											"end": 5776,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5554,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5698,
											"end": 5769,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5698,
											"end": 5769,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5698,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5776,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5776,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5782,
											"end": 5992,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5782,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5920,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5920,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5920,
											"end": 5985,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5920,
											"end": 5985,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5920,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5992,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5992,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5998,
											"end": 6311,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5998,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6151,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6138,
											"end": 6147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6299,
											"end": 6303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6296,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6226,
											"end": 6304,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6226,
											"end": 6304,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6226,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6218,
											"end": 6304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6218,
											"end": 6304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6311,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6311,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6317,
											"end": 6736,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6317,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6523,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6510,
											"end": 6519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6580,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6556,
											"end": 6557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6598,
											"end": 6729,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6598,
											"end": 6729,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6598,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 6948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6995,
											"end": 7004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6989,
											"end": 6993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 7005,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6966,
											"end": 6983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 7006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7015,
											"end": 7154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7015,
											"end": 7154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7337,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7360,
											"end": 7369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 7429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7430,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7391,
											"end": 7408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7440,
											"end": 7579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7440,
											"end": 7579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7796,
											"end": 7798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7785,
											"end": 7794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7773,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7773,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7835,
											"end": 7855,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7831,
											"end": 7832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7809,
											"end": 7856,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7999,
											"end": 8003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7865,
											"end": 8004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7865,
											"end": 8004,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8183,
											"end": 8187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8219,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8198,
											"end": 8224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8198,
											"end": 8224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8270,
											"end": 8279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8280,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8256,
											"end": 8257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8254,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8241,
											"end": 8258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8424,
											"end": 8428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8442,
											"end": 8861,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8442,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8608,
											"end": 8612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8648,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8635,
											"end": 8644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8623,
											"end": 8649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8623,
											"end": 8649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8695,
											"end": 8704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8689,
											"end": 8693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8685,
											"end": 8705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8666,
											"end": 8683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8659,
											"end": 8706,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8849,
											"end": 8853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 8723,
											"end": 8854,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8723,
											"end": 8854,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8723,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8442,
											"end": 8861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8442,
											"end": 8861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8442,
											"end": 8861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8442,
											"end": 8861,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9060,
											"end": 9069,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9056,
											"end": 9074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9048,
											"end": 9074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9048,
											"end": 9074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9120,
											"end": 9129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9130,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9091,
											"end": 9108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9084,
											"end": 9131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9274,
											"end": 9278,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9140,
											"end": 9279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9140,
											"end": 9279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9292,
											"end": 9514,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 9292,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9385,
											"end": 9389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9423,
											"end": 9425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9436,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9502,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9436,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9436,
											"end": 9507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9436,
											"end": 9507,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 9436,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9514,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9514,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9601,
											"end": 9700,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 9601,
											"end": 9700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9653,
											"end": 9659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9687,
											"end": 9692,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9681,
											"end": 9693,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9671,
											"end": 9693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9671,
											"end": 9693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9700,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9706,
											"end": 9875,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 9706,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9790,
											"end": 9801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9822,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9864,
											"end": 9868,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9875,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9875,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9881,
											"end": 10186,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 9881,
											"end": 10186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9921,
											"end": 9924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9940,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9940,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9940,
											"end": 9960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9940,
											"end": 9960,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9940,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9992,
											"end": 9993,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9969,
											"end": 9994,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9969,
											"end": 9994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10056,
											"end": 10130,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10053,
											"end": 10054,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10050,
											"end": 10131,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10154,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10047,
											"end": 10154,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10154,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10047,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10175,
											"end": 10176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10171,
											"end": 10180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10186,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10186,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 10186,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10192,
											"end": 10383,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 10192,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10232,
											"end": 10236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 10270,
											"end": 10271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10252,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 10252,
											"end": 10272,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10252,
											"end": 10272,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 10252,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10247,
											"end": 10272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10247,
											"end": 10272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10304,
											"end": 10305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10281,
											"end": 10306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10281,
											"end": 10306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10325,
											"end": 10326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10322,
											"end": 10323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10327,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10330,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10330,
											"end": 10348,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10330,
											"end": 10348,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10330,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10368,
											"end": 10377,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10192,
											"end": 10383,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10192,
											"end": 10383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10192,
											"end": 10383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10192,
											"end": 10383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10192,
											"end": 10383,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10389,
											"end": 10485,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 10389,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10426,
											"end": 10433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10473,
											"end": 10478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10455,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10455,
											"end": 10479,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10455,
											"end": 10479,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10455,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10444,
											"end": 10479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10444,
											"end": 10479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10389,
											"end": 10485,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10389,
											"end": 10485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10389,
											"end": 10485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10389,
											"end": 10485,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10491,
											"end": 10581,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 10491,
											"end": 10581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10525,
											"end": 10532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10561,
											"end": 10574,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10543,
											"end": 10575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10543,
											"end": 10575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10491,
											"end": 10581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10491,
											"end": 10581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10491,
											"end": 10581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10491,
											"end": 10581,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10587,
											"end": 10713,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10587,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10706,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10657,
											"end": 10662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10653,
											"end": 10707,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10713,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10719,
											"end": 10796,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 10719,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10756,
											"end": 10763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10785,
											"end": 10790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10774,
											"end": 10790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10774,
											"end": 10790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10796,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10802,
											"end": 11109,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 10802,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10870,
											"end": 10871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10894,
											"end": 10900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10891,
											"end": 10892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10888,
											"end": 10901,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 10980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10974,
											"end": 10977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10970,
											"end": 10981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10961,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10955,
											"end": 10958,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 10962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10944,
											"end": 10983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10916,
											"end": 10918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 10914,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10909,
											"end": 10919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10904,
											"end": 10919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10904,
											"end": 10919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10880,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11011,
											"end": 11017,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11005,
											"end": 11018,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11002,
											"end": 11103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11088,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11080,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11066,
											"end": 11093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11103,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11002,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10851,
											"end": 11109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10802,
											"end": 11109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10802,
											"end": 11109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10802,
											"end": 11109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10802,
											"end": 11109,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11115,
											"end": 11295,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 11115,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11163,
											"end": 11240,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11160,
											"end": 11161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11260,
											"end": 11264,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 11257,
											"end": 11258,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11250,
											"end": 11265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11284,
											"end": 11288,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11281,
											"end": 11282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11274,
											"end": 11289,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11424,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 11424,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11533,
											"end": 11534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11530,
											"end": 11531,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 11535,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11649,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 11547,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11588,
											"end": 11594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11641,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11635,
											"end": 11642,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 11632,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11623,
											"end": 11628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11619,
											"end": 11633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11615,
											"end": 11643,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11605,
											"end": 11643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11605,
											"end": 11643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11649,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11655,
											"end": 11879,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 11655,
											"end": 11879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11795,
											"end": 11829,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 11791,
											"end": 11792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11783,
											"end": 11789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11779,
											"end": 11793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11772,
											"end": 11830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11864,
											"end": 11871,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11859,
											"end": 11861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11851,
											"end": 11857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 11862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11840,
											"end": 11872,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11655,
											"end": 11879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11655,
											"end": 11879,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11885,
											"end": 12108,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 11885,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12025,
											"end": 12059,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 12021,
											"end": 12022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12002,
											"end": 12060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12094,
											"end": 12100,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12089,
											"end": 12091,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12081,
											"end": 12087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12092,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12070,
											"end": 12101,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11885,
											"end": 12108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11885,
											"end": 12108,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12114,
											"end": 12339,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 12114,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12254,
											"end": 12288,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12250,
											"end": 12251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12242,
											"end": 12248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12238,
											"end": 12252,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12231,
											"end": 12289,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12323,
											"end": 12331,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12318,
											"end": 12320,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12310,
											"end": 12316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12306,
											"end": 12321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12114,
											"end": 12339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12114,
											"end": 12339,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12345,
											"end": 12522,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 12345,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12514,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12469,
											"end": 12483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12462,
											"end": 12515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12345,
											"end": 12522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12345,
											"end": 12522,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12528,
											"end": 12710,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 12528,
											"end": 12710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12668,
											"end": 12702,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12664,
											"end": 12665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12656,
											"end": 12662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12652,
											"end": 12666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12645,
											"end": 12703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12710,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12716,
											"end": 12938,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 12716,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12856,
											"end": 12890,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12852,
											"end": 12853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12844,
											"end": 12850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12840,
											"end": 12854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12833,
											"end": 12891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12925,
											"end": 12930,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12920,
											"end": 12922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12912,
											"end": 12918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12901,
											"end": 12931,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12716,
											"end": 12938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12716,
											"end": 12938,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12944,
											"end": 13165,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 12944,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13084,
											"end": 13118,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 13080,
											"end": 13081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13072,
											"end": 13078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13068,
											"end": 13082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13061,
											"end": 13119,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13153,
											"end": 13157,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13148,
											"end": 13150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13136,
											"end": 13151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13129,
											"end": 13158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12944,
											"end": 13165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12944,
											"end": 13165,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13171,
											"end": 13293,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 13171,
											"end": 13293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13237,
											"end": 13242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13234,
											"end": 13269,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13224,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 13224,
											"end": 13287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13283,
											"end": 13284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13280,
											"end": 13281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13273,
											"end": 13285,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13224,
											"end": 13287,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 13224,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13171,
											"end": 13293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13171,
											"end": 13293,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13299,
											"end": 13421,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 13299,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13372,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 13390,
											"end": 13395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13372,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 13372,
											"end": 13396,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13372,
											"end": 13396,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 13372,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13365,
											"end": 13370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13362,
											"end": 13397,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13352,
											"end": 13415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 13352,
											"end": 13415,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13411,
											"end": 13412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13408,
											"end": 13409,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13401,
											"end": 13413,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13352,
											"end": 13415,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 13352,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13299,
											"end": 13421,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13299,
											"end": 13421,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20Mintable}. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IBEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IBEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IBEP20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"See {IBEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IBEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IBEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEP20.sol\":\"BEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP20.sol\":{\"keccak256\":\"0xa0f391d24fbfb226845b04a86d676b8833a3568d4d474c3a3d9a05f289b15c35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b33fe7a51fd16e8e02ebbf26f01bc23590574f3e71df587e79c624ec7297a62\",\"dweb:/ipfs/QmcSNYgjeUZwnaB9xYd5XjGsSKKjnAk6h9ABQq56wLT3GX\"]},\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]},\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]},\"SafeMath.sol\":{\"keccak256\":\"0x6740ccbf4f5dc5bec9e91527b869ad14b644ca02f5710d15e66f50d9202471d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b32759c900ae8cc00cc6bfa0729b09aded30db488a1c7c300522fc9cba694a94\",\"dweb:/ipfs/QmXs8y9q1JVxzbiyu9zMfaWnd9NS9rtyR4F6rr85UvkqEm\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPContext.sol": {
				"BEPContext": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPContext.sol\":\"BEPContext\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPOwnable.sol": {
				"BEPOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPOwnable.sol\":\"BEPOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. not same",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":633:3820  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":633:3820  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122080c18203e9c55d81b07b5c3d8a41941a42f4f68abc9d586ebfbcf57dc78ea1db64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080c18203e9c55d81b07b5c3d8a41941a42f4f68abc9d586ebfbcf57dc78ea1db64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xC1 DUP3 SUB 0xE9 0xC5 0x5D DUP2 0xB0 PUSH28 0x5C3D8A41941A42F4F68ABC9D586EBFBCF57DC78EA1DB64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "633:3187:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080c18203e9c55d81b07b5c3d8a41941a42f4f68abc9d586ebfbcf57dc78ea1db64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xC1 DUP3 SUB 0xE9 0xC5 0x5D DUP2 0xB0 PUSH28 0x5C3D8A41941A42F4F68ABC9D586EBFBCF57DC78EA1DB64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "633:3187:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 633,
									"end": 3820,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080c18203e9c55d81b07b5c3d8a41941a42f4f68abc9d586ebfbcf57dc78ea1db64736f6c63430008070033",
									".code": [
										{
											"begin": 633,
											"end": 3820,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 3820,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. not same\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x6740ccbf4f5dc5bec9e91527b869ad14b644ca02f5710d15e66f50d9202471d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b32759c900ae8cc00cc6bfa0729b09aded30db488a1c7c300522fc9cba694a94\",\"dweb:/ipfs/QmXs8y9q1JVxzbiyu9zMfaWnd9NS9rtyR4F6rr85UvkqEm\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"BEP20.sol": {
				"ast": {
					"absolutePath": "BEP20.sol",
					"exportedSymbols": {
						"BEP20": [
							435
						],
						"BEPContext": [
							465
						],
						"BEPOwnable": [
							595
						],
						"IBEP20": [
							672
						],
						"SafeMath": [
							827
						]
					},
					"id": 436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "BEPContext.sol",
							"file": "./BEPContext.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 466,
							"src": "56:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 673,
							"src": "83:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEPOwnable.sol",
							"file": "./BEPOwnable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 596,
							"src": "106:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 828,
							"src": "133:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "BEPContext",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 465,
										"src": "1158:10:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1158:10:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 672,
										"src": "1170:6:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1170:6:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "BEPOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 595,
										"src": "1178:10:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1178:10:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "158:981:0",
								"text": " @dev Implementation of the {IBEP20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {BEP20Mintable}.\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of BEP20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IBEP20-approve}."
							},
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435,
								595,
								672,
								465
							],
							"name": "BEP20",
							"nameLocation": "1149:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 15,
									"libraryName": {
										"id": 13,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 827,
										"src": "1199:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1193:27:0",
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1212:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1260:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "1224:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1232:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1224:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1243:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1330:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "1274:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1282:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1274:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1301:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1293:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1312:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1362:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "1346:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										603
									],
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1489:30:0",
										"statements": [
											{
												"expression": {
													"id": 34,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1502:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 35,
												"nodeType": "Return",
												"src": "1495:19:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1379:45:0",
										"text": " @dev See {IBEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1436:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 30,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1462:8:0"
									},
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:9:0"
									},
									"scope": 435,
									"src": "1427:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										611
									],
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1644:36:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 46,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1657:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 48,
													"indexExpression": {
														"id": 47,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1657:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 45,
												"id": 49,
												"nodeType": "Return",
												"src": "1650:25:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1523:43:0",
										"text": " @dev See {IBEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1578:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 42,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1617:8:0"
									},
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1596:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:17:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:9:0"
									},
									"scope": 435,
									"src": "1569:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1957:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 63,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "1973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1973:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 65,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1987:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 66,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1998:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 62,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1963:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1963:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 61,
												"id": 70,
												"nodeType": "Return",
												"src": "2011:11:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1684:178:0",
										"text": " @dev See {IBEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1874:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1933:8:0"
									},
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1891:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1883:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1910:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1902:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:35:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:6:0"
									},
									"scope": 435,
									"src": "1865:162:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "2167:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 83,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2180:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 85,
														"indexExpression": {
															"id": 84,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "2192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2180:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 87,
													"indexExpression": {
														"id": 86,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2180:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 88,
												"nodeType": "Return",
												"src": "2173:34:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2031:43:0",
										"text": " @dev See {IBEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2086:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 79,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2140:8:0"
									},
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2104:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2096:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2119:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:32:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:9:0"
									},
									"scope": 435,
									"src": "2077:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2415:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 102,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "2430:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2430:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 104,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 101,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2421:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2421:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2421:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 100,
												"id": 109,
												"nodeType": "Return",
												"src": "2466:11:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2216:115:0",
										"text": " @dev See {IBEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2343:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 97,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2391:8:0"
									},
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2376:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2368:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2350:33:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2409:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:6:0"
									},
									"scope": 435,
									"src": "2334:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										653
									],
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3042:215:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3066:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3077:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 124,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3048:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3048:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "3048:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 131,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3106:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 132,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "3120:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3120:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 141,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3178:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3186:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 134,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "3140:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 136,
																		"indexExpression": {
																			"id": 135,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "3152:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3140:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 139,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 137,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "3160:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3160:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3140:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 746,
																"src": "3140:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3140:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3090:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:145:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "3090:145:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 123,
												"id": 147,
												"nodeType": "Return",
												"src": "3241:11:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2486:425:0",
										"text": " @dev See {IBEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2923:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3018:8:0"
									},
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2949:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2941:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2969:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2961:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2992:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2984:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2935:67:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3036:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:6:0"
									},
									"scope": 435,
									"src": "2914:343:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "3712:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 160,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "3727:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3727:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 162,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 170,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "3789:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 163,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "3750:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 166,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 164,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "3762:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3762:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3750:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 168,
																	"indexExpression": {
																		"id": 167,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "3776:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3750:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 701,
																"src": "3750:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3750:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 159,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3718:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3718:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "3718:83:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 158,
												"id": 175,
												"nodeType": "Return",
												"src": "3807:11:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3261:362:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IBEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "3635:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3661:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3653:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "3678:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3670:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3652:37:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3706:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3706:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3705:6:0"
									},
									"scope": 435,
									"src": "3626:197:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "4371:181:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 188,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "4393:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4393:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 190,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4413:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 198,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "4467:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4484:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 191,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "4428:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 194,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 192,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "4440:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4440:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4428:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 196,
																	"indexExpression": {
																		"id": 195,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "4454:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4428:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 746,
																"src": "4428:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4428:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 187,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "4377:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4377:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "4377:153:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 186,
												"id": 204,
												"nodeType": "Return",
												"src": "4536:11:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "3827:450:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IBEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4289:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4315:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4307:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4332:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4324:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4306:42:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4365:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:6:0"
									},
									"scope": 435,
									"src": "4280:272:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "5099:363:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "5113:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5123:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 218,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5123:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5123:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5113:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5135:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "5105:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 227,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "5189:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5210:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5202:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 228,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5202:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5202:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5189:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5214:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5181:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "5181:71:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 236,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "5259:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 238,
														"indexExpression": {
															"id": 237,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "5269:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5259:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 243,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "5301:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5309:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 239,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "5279:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"id": 240,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "5289:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5279:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 746,
															"src": "5279:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5279:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5259:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "5259:91:0"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 248,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "5356:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 250,
														"indexExpression": {
															"id": 249,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "5366:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5356:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 255,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "5404:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 251,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "5379:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 253,
																"indexExpression": {
																	"id": 252,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "5389:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5379:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 701,
															"src": "5379:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5379:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5356:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "5356:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 260,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "5431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 261,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "5439:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 262,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "5450:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 259,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "5422:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5422:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "EmitStatement",
												"src": "5417:40:0"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "4556:437:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5005:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5028:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5020:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5048:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5040:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5071:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5063:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:67:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5099:0:0"
									},
									"scope": 435,
									"src": "4996:466:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5769:227:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "5783:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5802:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5794:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5783:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5806:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5775:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "5775:65:0"
											},
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "5847:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 287,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "5879:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 285,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5862:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 701,
															"src": "5862:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5862:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5847:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "5847:39:0"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 291,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "5892:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 293,
														"indexExpression": {
															"id": 292,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "5902:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5892:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 298,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "5936:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 294,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "5913:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 296,
																"indexExpression": {
																	"id": 295,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "5923:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5913:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 701,
															"src": "5913:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5913:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5892:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "5892:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5963:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 303,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5963:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5963:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 307,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "5975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "5984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "5954:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5954:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "EmitStatement",
												"src": "5949:42:0"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5466:243:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5721:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5735:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5727:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5752:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5744:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5726:33:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5769:0:0"
									},
									"scope": 435,
									"src": "5712:284:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "6348:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 321,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "6362:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6381:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6373:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 322,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6373:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6373:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6362:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6385:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6354:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6354:67:0"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 330,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "6428:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 332,
														"indexExpression": {
															"id": 331,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6428:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 337,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6472:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6480:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 333,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "6449:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 335,
																"indexExpression": {
																	"id": 334,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6459:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6449:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 746,
															"src": "6449:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6449:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6428:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "6428:89:0"
											},
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "6523:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 345,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6555:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 343,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "6538:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "6538:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6538:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6523:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "6523:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 350,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6591:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 351,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6591:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6591:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "6603:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 349,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "6573:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6573:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "EmitStatement",
												"src": "6568:42:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "6000:288:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6300:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6331:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6323:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:33:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6348:0:0"
									},
									"scope": 435,
									"src": "6291:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "7103:239:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 370,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "7117:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7126:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 371,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7126:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7126:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7117:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7138:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7109:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "7109:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "7191:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7210:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7202:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 381,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7202:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7202:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7191:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7214:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7183:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "7183:68:0"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 389,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "7258:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 392,
															"indexExpression": {
																"id": 390,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "7270:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7258:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 391,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "7277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7258:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "7288:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7258:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "7258:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 398,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "7314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "7321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "7330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7305:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7305:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "EmitStatement",
												"src": "7300:37:0"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "6619:390:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "7021:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7043:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "7035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7062:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "7054:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7083:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "7075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7029:64:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7103:0:0"
									},
									"scope": 435,
									"src": "7012:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "7567:182:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "7588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "7573:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7573:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "7573:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7617:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 419,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7632:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 428,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "7691:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7699:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 421,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7652:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 423,
																		"indexExpression": {
																			"id": 422,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "7664:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7652:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 426,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 424,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "7673:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7673:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7652:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 746,
																"src": "7652:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7652:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "7601:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7601:143:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "7601:143:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "7346:157:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "7515:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "7525:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7550:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "7542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7524:33:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7567:0:0"
									},
									"scope": 435,
									"src": "7506:243:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 436,
							"src": "1140:6611:0",
							"usedErrors": []
						}
					],
					"src": "32:7719:0"
				},
				"id": 0
			},
			"BEPContext.sol": {
				"ast": {
					"absolutePath": "BEPContext.sol",
					"exportedSymbols": {
						"BEPContext": [
							465
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 465,
							"linearizedBaseContracts": [
								465
							],
							"name": "BEPContext",
							"nameLocation": "575:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "754:2:1",
										"statements": []
									},
									"id": 441,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:2:1"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 465,
									"src": "740:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "822:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "843:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 446,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 445,
												"id": 451,
												"nodeType": "Return",
												"src": "828:26:1"
											}
										]
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "769:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:17:1"
									},
									"scope": 465,
									"src": "760:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "920:36:1",
										"statements": [
											{
												"expression": {
													"id": 458,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_BEPContext_$465",
														"typeString": "contract BEPContext"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "926:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 460,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "943:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "943:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 457,
												"id": 462,
												"nodeType": "Return",
												"src": "936:15:1"
											}
										]
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "872:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "906:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:14:1"
									},
									"scope": 465,
									"src": "863:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 466,
							"src": "557:401:1",
							"usedErrors": []
						}
					],
					"src": "32:926:1"
				},
				"id": 1
			},
			"BEPOwnable.sol": {
				"ast": {
					"absolutePath": "BEPOwnable.sol",
					"exportedSymbols": {
						"BEPContext": [
							465
						],
						"BEPOwnable": [
							595
						]
					},
					"id": 596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "BEPContext.sol",
							"file": "./BEPContext.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 596,
							"sourceUnit": 466,
							"src": "56:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 470,
										"name": "BEPContext",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 465,
										"src": "476:10:2"
									},
									"id": 471,
									"nodeType": "InheritanceSpecifier",
									"src": "476:10:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "83:360:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 595,
							"linearizedBaseContracts": [
								595,
								465
							],
							"name": "BEPOwnable",
							"nameLocation": "462:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 473,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "507:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 595,
									"src": "491:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 472,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 479,
									"name": "OwnershipTransferred",
									"nameLocation": "524:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "561:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "545:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "592:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "576:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:57:2"
									},
									"src": "518:84:2"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "710:121:2",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "724:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "716:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 483,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "716:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "736:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "716:32:2"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "754:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 489,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "763:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "754:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "754:18:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "812:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "804:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "804:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "816:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 492,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "783:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "778:48:2"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "606:87:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 501,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:2"
									},
									"scope": 595,
									"src": "696:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "946:24:2",
										"statements": [
											{
												"expression": {
													"id": 507,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "959:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 506,
												"id": 508,
												"nodeType": "Return",
												"src": "952:13:2"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "835:61:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "908:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "937:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:2"
									},
									"scope": 595,
									"src": "899:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1071:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 514,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "1085:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1085:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1096:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "1077:54:2"
											},
											{
												"id": 519,
												"nodeType": "PlaceholderStatement",
												"src": "1137:1:2"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "974:73:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 521,
									"name": "onlyOwner",
									"nameLocation": "1059:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:2:2"
									},
									"src": "1050:93:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1264:40:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 527,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "1277:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1277:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 529,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1293:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1277:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 526,
												"id": 531,
												"nodeType": "Return",
												"src": "1270:29:2"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1147:68:2",
										"text": " @dev Returns true if the caller is the current owner."
									},
									"functionSelector": "8f32d59b",
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "1227:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:2"
									},
									"scope": 595,
									"src": "1218:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1676:81:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 540,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "1708:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 539,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1687:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1687:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "EmitStatement",
												"src": "1682:45:2"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 547,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1733:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1750:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1742:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 548,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1742:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1733:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "1733:19:2"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1308:319:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 536,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 521,
												"src": "1666:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1666:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1639:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:0:2"
									},
									"scope": 595,
									"src": "1630:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "1958:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "1983:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 563,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "1964:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "1964:28:2"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "1761:132:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 560,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 521,
												"src": "1948:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1905:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1931:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1923:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:18:2"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:0:2"
									},
									"scope": 595,
									"src": "1896:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2145:156:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "2159:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2179:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2171:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 576,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2171:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2171:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2159:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "2151:73:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 585,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "2256:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2264:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 584,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2235:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "EmitStatement",
												"src": "2230:43:2"
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2279:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 590,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2288:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2279:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "2279:17:2"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2001:86:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2099:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2126:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2118:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:18:2"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2145:0:2"
									},
									"scope": 595,
									"src": "2090:211:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 596,
							"src": "444:1859:2",
							"usedErrors": []
						}
					],
					"src": "32:2271:2"
				},
				"id": 2
			},
			"IBEP20.sol": {
				"ast": {
					"absolutePath": "IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							672
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 597,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 672,
							"linearizedBaseContracts": [
								672
							],
							"name": "IBEP20",
							"nameLocation": "67:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "78:62:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "152:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:3"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "189:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:3"
									},
									"scope": 672,
									"src": "143:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "202:68:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "282:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "300:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "292:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "332:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:3"
									},
									"scope": 672,
									"src": "273:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "345:197:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "554:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "571:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "563:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "590:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "582:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:35:3"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "616:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:6:3"
									},
									"scope": 672,
									"src": "545:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "626:252:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "890:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "900:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:32:3"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "955:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:3"
									},
									"scope": 672,
									"src": "881:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "968:514:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1494:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1510:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1502:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1527:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1519:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:33:3"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1553:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1553:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:6:3"
									},
									"scope": 672,
									"src": "1485:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1563:280:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1855:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1881:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1873:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1901:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1893:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1924:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1916:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:67:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1953:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:3"
									},
									"scope": 672,
									"src": "1846:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "1963:148:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 662,
									"name": "Transfer",
									"nameLocation": "2120:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2145:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2129:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2167:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2151:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:57:3"
									},
									"src": "2114:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "2190:142:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 671,
									"name": "Approval",
									"nameLocation": "2341:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2350:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2389:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2373:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2406:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2398:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:63:3"
									},
									"src": "2335:78:3"
								}
							],
							"scope": 673,
							"src": "57:2358:3",
							"usedErrors": []
						}
					],
					"src": "32:2383:3"
				},
				"id": 3
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							827
						]
					},
					"id": 828,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 675,
								"nodeType": "StructuredDocumentation",
								"src": "57:575:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n not same"
							},
							"fullyImplemented": true,
							"id": 827,
							"linearizedBaseContracts": [
								827
							],
							"name": "SafeMath",
							"nameLocation": "641:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "925:95:4",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "939:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "931:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "931:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 690,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "947:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "943:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "931:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 692,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "962:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 693,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "967:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "962:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "970:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "954:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "954:46:4"
											},
											{
												"expression": {
													"id": 698,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 686,
													"src": "1014:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 699,
												"nodeType": "Return",
												"src": "1007:8:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "654:201:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "867:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "879:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "871:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "890:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "882:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "916:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:9:4"
									},
									"scope": 827,
									"src": "858:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "1331:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "1348:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 713,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "1351:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 711,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															718,
															746
														],
														"referencedDeclaration": 746,
														"src": "1344:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1344:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 716,
												"nodeType": "Return",
												"src": "1337:50:4"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "1024:237:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1273:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1285:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1277:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1296:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1288:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:22:4"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1322:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1321:9:4"
									},
									"scope": 827,
									"src": "1264:128:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "1803:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "1817:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 732,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "1822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1817:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 734,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "1825:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "1809:29:4"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1852:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "1844:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1856:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 740,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1860:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1844:17:4"
											},
											{
												"expression": {
													"id": 743,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 738,
													"src": "1875:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 744,
												"nodeType": "Return",
												"src": "1868:8:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1396:293:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1701:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1718:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1710:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1733:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1725:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1754:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1740:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1740:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:66:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1794:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:9:4"
									},
									"scope": 827,
									"src": "1692:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "2168:276:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 756,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "2308:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2313:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2308:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "2304:35:4",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "2316:23:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2331:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 755,
															"id": 760,
															"nodeType": "Return",
															"src": "2324:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2353:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "2345:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2345:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "2357:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 766,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2361:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2357:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2345:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 770,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "2376:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 771,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "2380:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2376:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 773,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "2385:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2388:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "2368:56:4"
											},
											{
												"expression": {
													"id": 778,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "2438:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 755,
												"id": 779,
												"nodeType": "Return",
												"src": "2431:8:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1885:213:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2110:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2122:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2114:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2133:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2125:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:22:4"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2159:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2158:9:4"
									},
									"scope": 827,
									"src": "2101:343:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "2942:57:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "2959:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 793,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2962:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2965:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 791,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															826
														],
														"referencedDeclaration": 826,
														"src": "2955:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 790,
												"id": 796,
												"nodeType": "Return",
												"src": "2948:46:4"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "2448:424:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2884:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2896:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2888:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2907:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2899:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:22:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2933:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2932:9:4"
									},
									"scope": 827,
									"src": "2875:124:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "3597:221:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 811,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "3673:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3677:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3673:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 814,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3680:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "3665:28:4"
											},
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3707:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "3699:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 817,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3699:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "3711:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "3715:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3711:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3699:17:4"
											},
											{
												"expression": {
													"id": 823,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "3812:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 809,
												"id": 824,
												"nodeType": "Return",
												"src": "3805:8:4"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "3003:480:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3495:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3512:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3504:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3527:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3519:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3548:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3534:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3534:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:66:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3588:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:9:4"
									},
									"scope": 827,
									"src": "3486:332:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 828,
							"src": "633:3187:4",
							"usedErrors": []
						}
					],
					"src": "32:3788:4"
				},
				"id": 4
			}
		}
	}
}