{
	"id": "9ca8e81a9bdc3661b4586b0ba29ab7e4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (finance/VestingWallet.sol)\npragma solidity ^0.8.0;\n\n\nimport \"./Address.sol\";\nimport \"./BEPOwnable.sol\";\nimport \"./IBEP20.sol\";\n\ncontract marketplace is BEPOwnable {\n\n    address public Treasury;\n    address public LiquidPool;\n    event changeTreasury(address _Treasury);\n    event changeLiquidPool(address _LiquidPool);\n\n    constructor() { \n        Treasury = 0xcb3745379275252F4beB5d1094bF1a8A09F368b7;\n        LiquidPool = 0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83;\n    }\n\n    function setTreasury(address _Treasury) external onlyOwner {\n        Treasury = _Treasury;\n        emit changeTreasury(Treasury);\n    }  \n    function setLiquidPool(address _LiquidPool) external onlyOwner {\n        LiquidPool = _LiquidPool;\n        emit changeLiquidPool(LiquidPool);\n    } \n    function getMINPrice() public view virtual returns (uint256) {\n        uint256 wbnbbalance = IBEP20(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c).balanceOf(LiquidPool);\n        uint256 vimbalance = IBEP20(0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30).balanceOf(LiquidPool);\n        uint256 minprice = vimbalance/wbnbbalance;\n        return minprice;\n    }\n    \n}"
			},
			"IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"BEPOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./BEPContext.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract BEPOwnable is BEPContext {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Returns true if the caller is the current owner.\n   */\n  function isOwner() public view returns (bool) {\n    return _msgSender() == _owner;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"BEPContext.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract BEPContext {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor() {}\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this;\n    return msg.data;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:8240  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:8240  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPContext.sol": {
				"BEPContext": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPContext.sol\":\"BEPContext\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPOwnable.sol": {
				"BEPOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPOwnable.sol\":\"BEPOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "BEPOwnable.sol:BEPOwnable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"marketplace.sol": {
				"marketplace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_LiquidPool",
									"type": "address"
								}
							],
							"name": "changeLiquidPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_Treasury",
									"type": "address"
								}
							],
							"name": "changeTreasury",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LiquidPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMINPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LiquidPool",
									"type": "address"
								}
							],
							"name": "setLiquidPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"marketplace.sol\":194:1200  contract marketplace is BEPOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"marketplace.sol\":391:541  constructor() { ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"BEPOwnable.sol\":716:733  address msgSender */\n  0x00\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  tag_7\n    /* \"BEPOwnable.sol\":736:746  _msgSender */\n  shl(0x20, tag_8)\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"BEPOwnable.sol\":716:748  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEPOwnable.sol\":763:772  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":754:760  _owner */\n  0x00\n  dup1\n    /* \"BEPOwnable.sol\":754:772  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEPOwnable.sol\":816:825  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEPOwnable.sol\":812:813  0 */\n  0x00\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEPOwnable.sol\":710:831  {... */\n  pop\n    /* \"marketplace.sol\":427:469  0xcb3745379275252F4beB5d1094bF1a8A09F368b7 */\n  0xcb3745379275252f4beb5d1094bf1a8a09f368b7\n    /* \"marketplace.sol\":416:424  Treasury */\n  0x01\n  0x00\n    /* \"marketplace.sol\":416:469  Treasury = 0xcb3745379275252F4beB5d1094bF1a8A09F368b7 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":492:534  0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83 */\n  0xd295cf5d859b9ed331cdf69c49a81eff5e1bee83\n    /* \"marketplace.sol\":479:489  LiquidPool */\n  0x02\n  0x00\n    /* \"marketplace.sol\":479:534  LiquidPool = 0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":194:1200  contract marketplace is BEPOwnable {... */\n  jump(tag_10)\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"BEPContext.sol\":805:820  address payable */\n  0x00\n    /* \"BEPContext.sol\":843:853  msg.sender */\n  caller\n    /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"marketplace.sol\":194:1200  contract marketplace is BEPOwnable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"marketplace.sol\":194:1200  contract marketplace is BEPOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f32d59b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa888a93a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xea156f44\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x36c3b4e2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x563df32f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"marketplace.sol\":265:290  address public LiquidPool */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":236:259  address public Treasury */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":689:836  function setLiquidPool(address _LiquidPool) external onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"marketplace.sol\":842:1193  function getMINPrice() public view virtual returns (uint256) {... */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":547:682  function setTreasury(address _Treasury) external onlyOwner {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"marketplace.sol\":265:290  address public LiquidPool */\n    tag_14:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"marketplace.sol\":236:259  address public Treasury */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_21:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_44\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_26\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_44:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"BEPOwnable.sol\":1724:1725  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1708:1714  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":1750:1751  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1733:1739  _owner */\n      dup1\n      0x00\n        /* \"BEPOwnable.sol\":1733:1752  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_23:\n        /* \"BEPOwnable.sol\":937:944  address */\n      0x00\n        /* \"BEPOwnable.sol\":959:965  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":952:965  return _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_26:\n        /* \"BEPOwnable.sol\":1258:1262  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1293:1299  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      tag_51\n        /* \"BEPOwnable.sol\":1277:1287  _msgSender */\n      tag_52\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEPOwnable.sol\":1270:1299  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"marketplace.sol\":689:836  function setLiquidPool(address _LiquidPool) external onlyOwner {... */\n    tag_32:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_54\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_26\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_54:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_47\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"marketplace.sol\":775:786  _LiquidPool */\n      dup1\n        /* \"marketplace.sol\":762:772  LiquidPool */\n      0x02\n      0x00\n        /* \"marketplace.sol\":762:786  LiquidPool = _LiquidPool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":801:829  changeLiquidPool(LiquidPool) */\n      0xacdd85d235b5b49226c2c4f2b72cb01fa1cc3ae64bb843a6def27788d05b1b60\n        /* \"marketplace.sol\":818:828  LiquidPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":801:829  changeLiquidPool(LiquidPool) */\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"marketplace.sol\":689:836  function setLiquidPool(address _LiquidPool) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"marketplace.sol\":842:1193  function getMINPrice() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"marketplace.sol\":894:901  uint256 */\n      0x00\n        /* \"marketplace.sol\":913:932  uint256 wbnbbalance */\n      dup1\n        /* \"marketplace.sol\":942:984  0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n      0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\n        /* \"marketplace.sol\":935:995  IBEP20(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"marketplace.sol\":996:1006  LiquidPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":935:1007  IBEP20(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c).balanceOf(LiquidPool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"marketplace.sol\":913:1007  uint256 wbnbbalance = IBEP20(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c).balanceOf(LiquidPool) */\n      swap1\n      pop\n        /* \"marketplace.sol\":1017:1035  uint256 vimbalance */\n      0x00\n        /* \"marketplace.sol\":1045:1087  0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30 */\n      0x5bcd91c734d665fe426a5d7156f2ad7d37b76e30\n        /* \"marketplace.sol\":1038:1098  IBEP20(0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"marketplace.sol\":1099:1109  LiquidPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":1038:1110  IBEP20(0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30).balanceOf(LiquidPool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_70:\n        /* \"marketplace.sol\":1017:1110  uint256 vimbalance = IBEP20(0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30).balanceOf(LiquidPool) */\n      swap1\n      pop\n        /* \"marketplace.sol\":1120:1136  uint256 minprice */\n      0x00\n        /* \"marketplace.sol\":1150:1161  wbnbbalance */\n      dup3\n        /* \"marketplace.sol\":1139:1149  vimbalance */\n      dup3\n        /* \"marketplace.sol\":1139:1161  vimbalance/wbnbbalance */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"marketplace.sol\":1120:1161  uint256 minprice = vimbalance/wbnbbalance */\n      swap1\n      pop\n        /* \"marketplace.sol\":1178:1186  minprice */\n      dup1\n        /* \"marketplace.sol\":1171:1186  return minprice */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"marketplace.sol\":842:1193  function getMINPrice() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"marketplace.sol\":547:682  function setTreasury(address _Treasury) external onlyOwner {... */\n    tag_39:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_74\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_26\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_74:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_47\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"marketplace.sol\":627:636  _Treasury */\n      dup1\n        /* \"marketplace.sol\":616:624  Treasury */\n      0x01\n      0x00\n        /* \"marketplace.sol\":616:636  Treasury = _Treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":651:675  changeTreasury(Treasury) */\n      0xb14f2a39bb21fda32827bbdb4be629c94036e10a3f6055a6454f884ca1b33fa1\n        /* \"marketplace.sol\":666:674  Treasury */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":651:675  changeTreasury(Treasury) */\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"marketplace.sol\":547:682  function setTreasury(address _Treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_42:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_80\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_26\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_80:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_47\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      tag_84\n        /* \"BEPOwnable.sol\":1983:1991  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":1964:1982  _transferOwnership */\n      tag_85\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_84:\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n    tag_52:\n        /* \"BEPContext.sol\":805:820  address payable */\n      0x00\n        /* \"BEPContext.sol\":843:853  msg.sender */\n      caller\n        /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n    tag_85:\n        /* \"BEPOwnable.sol\":2179:2180  0 */\n      0x00\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2159:2167  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEPOwnable.sol\":2151:2224  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"BEPOwnable.sol\":2264:2272  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2256:2262  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":2288:2296  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2279:2285  _owner */\n      0x00\n      dup1\n        /* \"BEPOwnable.sol\":2279:2296  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_92:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_94\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_96:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_98\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":301:630   */\n    tag_31:\n        /* \"#utility.yul\":360:366   */\n      0x00\n        /* \"#utility.yul\":409:411   */\n      0x20\n        /* \"#utility.yul\":397:406   */\n      dup3\n        /* \"#utility.yul\":388:395   */\n      dup5\n        /* \"#utility.yul\":384:407   */\n      sub\n        /* \"#utility.yul\":380:412   */\n      slt\n        /* \"#utility.yul\":377:496   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":377:496   */\n    tag_101:\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":560:613   */\n      tag_104\n        /* \"#utility.yul\":605:612   */\n      dup5\n        /* \"#utility.yul\":596:602   */\n      dup3\n        /* \"#utility.yul\":585:594   */\n      dup6\n        /* \"#utility.yul\":581:603   */\n      add\n        /* \"#utility.yul\":560:613   */\n      tag_92\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":550:613   */\n      swap2\n      pop\n        /* \"#utility.yul\":506:623   */\n      pop\n        /* \"#utility.yul\":301:630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":636:987   */\n    tag_65:\n        /* \"#utility.yul\":706:712   */\n      0x00\n        /* \"#utility.yul\":755:757   */\n      0x20\n        /* \"#utility.yul\":743:752   */\n      dup3\n        /* \"#utility.yul\":734:741   */\n      dup5\n        /* \"#utility.yul\":730:753   */\n      sub\n        /* \"#utility.yul\":726:758   */\n      slt\n        /* \"#utility.yul\":723:842   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":761:840   */\n      tag_107\n      tag_103\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":723:842   */\n    tag_106:\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":906:970   */\n      tag_108\n        /* \"#utility.yul\":962:969   */\n      dup5\n        /* \"#utility.yul\":953:959   */\n      dup3\n        /* \"#utility.yul\":942:951   */\n      dup6\n        /* \"#utility.yul\":938:960   */\n      add\n        /* \"#utility.yul\":906:970   */\n      tag_96\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":896:970   */\n      swap2\n      pop\n        /* \"#utility.yul\":852:980   */\n      pop\n        /* \"#utility.yul\":636:987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":993:1111   */\n    tag_109:\n        /* \"#utility.yul\":1080:1104   */\n      tag_111\n        /* \"#utility.yul\":1098:1103   */\n      dup2\n        /* \"#utility.yul\":1080:1104   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1075:1078   */\n      dup3\n        /* \"#utility.yul\":1068:1105   */\n      mstore\n        /* \"#utility.yul\":993:1111   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1226   */\n    tag_113:\n        /* \"#utility.yul\":1198:1219   */\n      tag_115\n        /* \"#utility.yul\":1213:1218   */\n      dup2\n        /* \"#utility.yul\":1198:1219   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1193:1196   */\n      dup3\n        /* \"#utility.yul\":1186:1220   */\n      mstore\n        /* \"#utility.yul\":1117:1226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1598   */\n    tag_117:\n        /* \"#utility.yul\":1374:1377   */\n      0x00\n        /* \"#utility.yul\":1395:1462   */\n      tag_119\n        /* \"#utility.yul\":1459:1461   */\n      0x26\n        /* \"#utility.yul\":1454:1457   */\n      dup4\n        /* \"#utility.yul\":1395:1462   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1388:1462   */\n      swap2\n      pop\n        /* \"#utility.yul\":1471:1564   */\n      tag_121\n        /* \"#utility.yul\":1560:1563   */\n      dup3\n        /* \"#utility.yul\":1471:1564   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1589:1591   */\n      0x40\n        /* \"#utility.yul\":1584:1587   */\n      dup3\n        /* \"#utility.yul\":1580:1592   */\n      add\n        /* \"#utility.yul\":1573:1592   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1604:1970   */\n    tag_123:\n        /* \"#utility.yul\":1746:1749   */\n      0x00\n        /* \"#utility.yul\":1767:1834   */\n      tag_125\n        /* \"#utility.yul\":1831:1833   */\n      0x20\n        /* \"#utility.yul\":1826:1829   */\n      dup4\n        /* \"#utility.yul\":1767:1834   */\n      tag_120\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1760:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1843:1936   */\n      tag_126\n        /* \"#utility.yul\":1932:1935   */\n      dup3\n        /* \"#utility.yul\":1843:1936   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1961:1963   */\n      0x20\n        /* \"#utility.yul\":1956:1959   */\n      dup3\n        /* \"#utility.yul\":1952:1964   */\n      add\n        /* \"#utility.yul\":1945:1964   */\n      swap1\n      pop\n        /* \"#utility.yul\":1604:1970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:2094   */\n    tag_128:\n        /* \"#utility.yul\":2063:2087   */\n      tag_130\n        /* \"#utility.yul\":2081:2086   */\n      dup2\n        /* \"#utility.yul\":2063:2087   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2058:2061   */\n      dup3\n        /* \"#utility.yul\":2051:2088   */\n      mstore\n        /* \"#utility.yul\":1976:2094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2100:2322   */\n    tag_16:\n        /* \"#utility.yul\":2193:2197   */\n      0x00\n        /* \"#utility.yul\":2231:2233   */\n      0x20\n        /* \"#utility.yul\":2220:2229   */\n      dup3\n        /* \"#utility.yul\":2216:2234   */\n      add\n        /* \"#utility.yul\":2208:2234   */\n      swap1\n      pop\n        /* \"#utility.yul\":2244:2315   */\n      tag_133\n        /* \"#utility.yul\":2312:2313   */\n      0x00\n        /* \"#utility.yul\":2301:2310   */\n      dup4\n        /* \"#utility.yul\":2297:2314   */\n      add\n        /* \"#utility.yul\":2288:2294   */\n      dup5\n        /* \"#utility.yul\":2244:2315   */\n      tag_109\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2100:2322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2328:2538   */\n    tag_28:\n        /* \"#utility.yul\":2415:2419   */\n      0x00\n        /* \"#utility.yul\":2453:2455   */\n      0x20\n        /* \"#utility.yul\":2442:2451   */\n      dup3\n        /* \"#utility.yul\":2438:2456   */\n      add\n        /* \"#utility.yul\":2430:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2531   */\n      tag_135\n        /* \"#utility.yul\":2528:2529   */\n      0x00\n        /* \"#utility.yul\":2517:2526   */\n      dup4\n        /* \"#utility.yul\":2513:2530   */\n      add\n        /* \"#utility.yul\":2504:2510   */\n      dup5\n        /* \"#utility.yul\":2466:2531   */\n      tag_113\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2328:2538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2544:2963   */\n    tag_90:\n        /* \"#utility.yul\":2710:2714   */\n      0x00\n        /* \"#utility.yul\":2748:2750   */\n      0x20\n        /* \"#utility.yul\":2737:2746   */\n      dup3\n        /* \"#utility.yul\":2733:2751   */\n      add\n        /* \"#utility.yul\":2725:2751   */\n      swap1\n      pop\n        /* \"#utility.yul\":2797:2806   */\n      dup2\n        /* \"#utility.yul\":2791:2795   */\n      dup2\n        /* \"#utility.yul\":2787:2807   */\n      sub\n        /* \"#utility.yul\":2783:2784   */\n      0x00\n        /* \"#utility.yul\":2772:2781   */\n      dup4\n        /* \"#utility.yul\":2768:2785   */\n      add\n        /* \"#utility.yul\":2761:2808   */\n      mstore\n        /* \"#utility.yul\":2825:2956   */\n      tag_137\n        /* \"#utility.yul\":2951:2955   */\n      dup2\n        /* \"#utility.yul\":2825:2956   */\n      tag_117\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2817:2956   */\n      swap1\n      pop\n        /* \"#utility.yul\":2544:2963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2969:3388   */\n    tag_47:\n        /* \"#utility.yul\":3135:3139   */\n      0x00\n        /* \"#utility.yul\":3173:3175   */\n      0x20\n        /* \"#utility.yul\":3162:3171   */\n      dup3\n        /* \"#utility.yul\":3158:3176   */\n      add\n        /* \"#utility.yul\":3150:3176   */\n      swap1\n      pop\n        /* \"#utility.yul\":3222:3231   */\n      dup2\n        /* \"#utility.yul\":3216:3220   */\n      dup2\n        /* \"#utility.yul\":3212:3232   */\n      sub\n        /* \"#utility.yul\":3208:3209   */\n      0x00\n        /* \"#utility.yul\":3197:3206   */\n      dup4\n        /* \"#utility.yul\":3193:3210   */\n      add\n        /* \"#utility.yul\":3186:3233   */\n      mstore\n        /* \"#utility.yul\":3250:3381   */\n      tag_139\n        /* \"#utility.yul\":3376:3380   */\n      dup2\n        /* \"#utility.yul\":3250:3381   */\n      tag_123\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3242:3381   */\n      swap1\n      pop\n        /* \"#utility.yul\":2969:3388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:3616   */\n    tag_36:\n        /* \"#utility.yul\":3487:3491   */\n      0x00\n        /* \"#utility.yul\":3525:3527   */\n      0x20\n        /* \"#utility.yul\":3514:3523   */\n      dup3\n        /* \"#utility.yul\":3510:3528   */\n      add\n        /* \"#utility.yul\":3502:3528   */\n      swap1\n      pop\n        /* \"#utility.yul\":3538:3609   */\n      tag_141\n        /* \"#utility.yul\":3606:3607   */\n      0x00\n        /* \"#utility.yul\":3595:3604   */\n      dup4\n        /* \"#utility.yul\":3591:3608   */\n      add\n        /* \"#utility.yul\":3582:3588   */\n      dup5\n        /* \"#utility.yul\":3538:3609   */\n      tag_128\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3394:3616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3872   */\n    tag_120:\n        /* \"#utility.yul\":3787:3798   */\n      0x00\n        /* \"#utility.yul\":3821:3827   */\n      dup3\n        /* \"#utility.yul\":3816:3819   */\n      dup3\n        /* \"#utility.yul\":3809:3828   */\n      mstore\n        /* \"#utility.yul\":3861:3865   */\n      0x20\n        /* \"#utility.yul\":3856:3859   */\n      dup3\n        /* \"#utility.yul\":3852:3866   */\n      add\n        /* \"#utility.yul\":3837:3866   */\n      swap1\n      pop\n        /* \"#utility.yul\":3703:3872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3878:4063   */\n    tag_72:\n        /* \"#utility.yul\":3918:3919   */\n      0x00\n        /* \"#utility.yul\":3935:3955   */\n      tag_146\n        /* \"#utility.yul\":3953:3954   */\n      dup3\n        /* \"#utility.yul\":3935:3955   */\n      tag_131\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3930:3955   */\n      swap2\n      pop\n        /* \"#utility.yul\":3969:3989   */\n      tag_147\n        /* \"#utility.yul\":3987:3988   */\n      dup4\n        /* \"#utility.yul\":3969:3989   */\n      tag_131\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3964:3989   */\n      swap3\n      pop\n        /* \"#utility.yul\":4008:4009   */\n      dup3\n        /* \"#utility.yul\":3998:4033   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":4013:4031   */\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3998:4033   */\n    tag_148:\n        /* \"#utility.yul\":4055:4056   */\n      dup3\n        /* \"#utility.yul\":4052:4053   */\n      dup3\n        /* \"#utility.yul\":4048:4057   */\n      div\n        /* \"#utility.yul\":4043:4057   */\n      swap1\n      pop\n        /* \"#utility.yul\":3878:4063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4069:4165   */\n    tag_112:\n        /* \"#utility.yul\":4106:4113   */\n      0x00\n        /* \"#utility.yul\":4135:4159   */\n      tag_152\n        /* \"#utility.yul\":4153:4158   */\n      dup3\n        /* \"#utility.yul\":4135:4159   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4124:4159   */\n      swap1\n      pop\n        /* \"#utility.yul\":4069:4165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4261   */\n    tag_116:\n        /* \"#utility.yul\":4205:4212   */\n      0x00\n        /* \"#utility.yul\":4248:4253   */\n      dup2\n        /* \"#utility.yul\":4241:4254   */\n      iszero\n        /* \"#utility.yul\":4234:4255   */\n      iszero\n        /* \"#utility.yul\":4223:4255   */\n      swap1\n      pop\n        /* \"#utility.yul\":4171:4261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4267:4393   */\n    tag_153:\n        /* \"#utility.yul\":4304:4311   */\n      0x00\n        /* \"#utility.yul\":4344:4386   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4333:4387   */\n      and\n        /* \"#utility.yul\":4322:4387   */\n      swap1\n      pop\n        /* \"#utility.yul\":4267:4393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4399:4476   */\n    tag_131:\n        /* \"#utility.yul\":4436:4443   */\n      0x00\n        /* \"#utility.yul\":4465:4470   */\n      dup2\n        /* \"#utility.yul\":4454:4470   */\n      swap1\n      pop\n        /* \"#utility.yul\":4399:4476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4668:4848   */\n    tag_150:\n        /* \"#utility.yul\":4716:4793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4713:4714   */\n      0x00\n        /* \"#utility.yul\":4706:4794   */\n      mstore\n        /* \"#utility.yul\":4813:4817   */\n      0x12\n        /* \"#utility.yul\":4810:4811   */\n      0x04\n        /* \"#utility.yul\":4803:4818   */\n      mstore\n        /* \"#utility.yul\":4837:4841   */\n      0x24\n        /* \"#utility.yul\":4834:4835   */\n      0x00\n        /* \"#utility.yul\":4827:4842   */\n      revert\n        /* \"#utility.yul\":4977:5094   */\n    tag_103:\n        /* \"#utility.yul\":5086:5087   */\n      0x00\n        /* \"#utility.yul\":5083:5084   */\n      dup1\n        /* \"#utility.yul\":5076:5088   */\n      revert\n        /* \"#utility.yul\":5100:5325   */\n    tag_122:\n        /* \"#utility.yul\":5240:5274   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5236:5237   */\n      0x00\n        /* \"#utility.yul\":5228:5234   */\n      dup3\n        /* \"#utility.yul\":5224:5238   */\n      add\n        /* \"#utility.yul\":5217:5275   */\n      mstore\n        /* \"#utility.yul\":5309:5317   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5304:5306   */\n      0x20\n        /* \"#utility.yul\":5296:5302   */\n      dup3\n        /* \"#utility.yul\":5292:5307   */\n      add\n        /* \"#utility.yul\":5285:5318   */\n      mstore\n        /* \"#utility.yul\":5100:5325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5331:5513   */\n    tag_127:\n        /* \"#utility.yul\":5471:5505   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5467:5468   */\n      0x00\n        /* \"#utility.yul\":5459:5465   */\n      dup3\n        /* \"#utility.yul\":5455:5469   */\n      add\n        /* \"#utility.yul\":5448:5506   */\n      mstore\n        /* \"#utility.yul\":5331:5513   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5519:5641   */\n    tag_95:\n        /* \"#utility.yul\":5592:5616   */\n      tag_166\n        /* \"#utility.yul\":5610:5615   */\n      dup2\n        /* \"#utility.yul\":5592:5616   */\n      tag_112\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5585:5590   */\n      dup2\n        /* \"#utility.yul\":5582:5617   */\n      eq\n        /* \"#utility.yul\":5572:5635   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":5631:5632   */\n      0x00\n        /* \"#utility.yul\":5628:5629   */\n      dup1\n        /* \"#utility.yul\":5621:5633   */\n      revert\n        /* \"#utility.yul\":5572:5635   */\n    tag_167:\n        /* \"#utility.yul\":5519:5641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5769   */\n    tag_99:\n        /* \"#utility.yul\":5720:5744   */\n      tag_169\n        /* \"#utility.yul\":5738:5743   */\n      dup2\n        /* \"#utility.yul\":5720:5744   */\n      tag_131\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5713:5718   */\n      dup2\n        /* \"#utility.yul\":5710:5745   */\n      eq\n        /* \"#utility.yul\":5700:5763   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5756:5757   */\n      dup1\n        /* \"#utility.yul\":5749:5761   */\n      revert\n        /* \"#utility.yul\":5700:5763   */\n    tag_170:\n        /* \"#utility.yul\":5647:5769   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220416037718ffa560e181dd99ac291ef0b647fb5050366eba766f2e682ae4bbf1f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_360": {
									"entryPoint": null,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_562": {
									"entryPoint": null,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 366,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600061002161016e60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35073cb3745379275252f4beb5d1094bf1a8a09f368b7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d295cf5d859b9ed331cdf69c49a81eff5e1bee83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610176565b600033905090565b610b76806101856000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638f32d59b116100665780638f32d59b146100fc578063a888a93a1461011a578063ea156f4414610136578063f0f4426014610154578063f2fde38b1461017057610093565b806336c3b4e214610098578063563df32f146100b6578063715018a6146100d45780638da5cb5b146100de575b600080fd5b6100a061018c565b6040516100ad919061094b565b60405180910390f35b6100be6101b2565b6040516100cb919061094b565b60405180910390f35b6100dc6101d8565b005b6100e66102dd565b6040516100f3919061094b565b60405180910390f35b610104610306565b6040516101119190610966565b60405180910390f35b610134600480360381019061012f919061087e565b610364565b005b61013e610448565b60405161014b91906109c1565b60405180910390f35b61016e6004803603810190610169919061087e565b6105e8565b005b61018a6004803603810190610185919061087e565b6106cc565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101e0610306565b61021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906109a1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661034861071f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61036c610306565b6103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a2906109a1565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507facdd85d235b5b49226c2c4f2b72cb01fa1cc3ae64bb843a6def27788d05b1b60600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161043d919061094b565b60405180910390a150565b60008073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c73ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104ba919061094b565b60206040518083038186803b1580156104d257600080fd5b505afa1580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a91906108ab565b90506000735bcd91c734d665fe426a5d7156f2ad7d37b76e3073ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161057d919061094b565b60206040518083038186803b15801561059557600080fd5b505afa1580156105a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cd91906108ab565b9050600082826105dd91906109ed565b905080935050505090565b6105f0610306565b61062f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610626906109a1565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb14f2a39bb21fda32827bbdb4be629c94036e10a3f6055a6454f884ca1b33fa1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516106c1919061094b565b60405180910390a150565b6106d4610306565b610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a906109a1565b60405180910390fd5b61071c81610727565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90610981565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061086381610b12565b92915050565b60008151905061087881610b29565b92915050565b60006020828403121561089457610893610a95565b5b60006108a284828501610854565b91505092915050565b6000602082840312156108c1576108c0610a95565b5b60006108cf84828501610869565b91505092915050565b6108e181610a1e565b82525050565b6108f081610a30565b82525050565b60006109036026836109dc565b915061090e82610a9a565b604082019050919050565b60006109266020836109dc565b915061093182610ae9565b602082019050919050565b61094581610a5c565b82525050565b600060208201905061096060008301846108d8565b92915050565b600060208201905061097b60008301846108e7565b92915050565b6000602082019050818103600083015261099a816108f6565b9050919050565b600060208201905081810360008301526109ba81610919565b9050919050565b60006020820190506109d6600083018461093c565b92915050565b600082825260208201905092915050565b60006109f882610a5c565b9150610a0383610a5c565b925082610a1357610a12610a66565b5b828204905092915050565b6000610a2982610a3c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610b1b81610a1e565b8114610b2657600080fd5b50565b610b3281610a5c565b8114610b3d57600080fd5b5056fea2646970667358221220416037718ffa560e181dd99ac291ef0b647fb5050366eba766f2e682ae4bbf1f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0x16E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH20 0xCB3745379275252F4BEB5D1094BF1A8A09F368B7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD295CF5D859B9ED331CDF69C49A81EFF5E1BEE83 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x176 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB76 DUP1 PUSH2 0x185 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xA888A93A EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xEA156F44 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x170 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x36C3B4E2 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x563DF32F EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x348 PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x306 JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xACDD85D235B5B49226C2C4F2B72CB01FA1CC3AE64BB843A6DEF27788D05B1B60 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x5BCD91C734D665FE426A5D7156F2AD7D37B76E30 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5F0 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB14F2A39BB21FDA32827BBDB4BE629C94036E10A3F6055A6454F884CA1B33FA1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71C DUP2 PUSH2 0x727 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x863 DUP2 PUSH2 0xB12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x878 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A2 DUP5 DUP3 DUP6 ADD PUSH2 0x854 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8CF DUP5 DUP3 DUP6 ADD PUSH2 0x869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8E1 DUP2 PUSH2 0xA1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x903 PUSH1 0x26 DUP4 PUSH2 0x9DC JUMP JUMPDEST SWAP2 POP PUSH2 0x90E DUP3 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x926 PUSH1 0x20 DUP4 PUSH2 0x9DC JUMP JUMPDEST SWAP2 POP PUSH2 0x931 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 DUP2 PUSH2 0xA5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x99A DUP2 PUSH2 0x8F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9BA DUP2 PUSH2 0x919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x93C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F8 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH2 0xA03 DUP4 PUSH2 0xA5C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA13 JUMPI PUSH2 0xA12 PUSH2 0xA66 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 DUP3 PUSH2 0xA3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB1B DUP2 PUSH2 0xA1E JUMP JUMPDEST DUP2 EQ PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xA5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH1 0x37 PUSH18 0x8FFA560E181DD99AC291EF0B647FB5050366 0xEB 0xA7 PUSH7 0xF2E682AE4BBF1F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:1006:4:-:0;;;391:150;;;;;;;;;;716:17:2;736:12;:10;;;:12;;:::i;:::-;716:32;;763:9;754:6;;:18;;;;;;;;;;;;;;;;;;816:9;783:43;;812:1;783:43;;;;;;;;;;;;710:121;427:42:4;416:8;;:53;;;;;;;;;;;;;;;;;;492:42;479:10;;:55;;;;;;;;;;;;;;;;;;194:1006;;760:99:1;805:15;843:10;828:26;;760:99;:::o;194:1006:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LiquidPool_542": {
									"entryPoint": 396,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Treasury_540": {
									"entryPoint": 434,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 1823,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_453": {
									"entryPoint": 1831,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getMINPrice_626": {
									"entryPoint": 1096,
									"id": 626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isOwner_392": {
									"entryPoint": 774,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_369": {
									"entryPoint": 733,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_414": {
									"entryPoint": 472,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLiquidPool_594": {
									"entryPoint": 868,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasury_578": {
									"entryPoint": 1512,
									"id": 578,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_427": {
									"entryPoint": 1740,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5772:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:5",
														"type": ""
													}
												],
												"src": "152:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "367:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "413:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "388:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "397:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "384:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "384:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "409:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "380:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:32:5"
															},
															"nodeType": "YulIf",
															"src": "377:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "585:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "596:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "581:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "581:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "605:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "560:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "337:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "348:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "360:6:5",
														"type": ""
													}
												],
												"src": "301:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "713:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "761:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "761:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "761:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "734:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "743:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:32:5"
															},
															"nodeType": "YulIf",
															"src": "723:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "852:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "867:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "871:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "896:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "942:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "953:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "938:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "938:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "962:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "906:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "896:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "683:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "694:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "706:6:5",
														"type": ""
													}
												],
												"src": "636:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1058:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1098:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1080:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1068:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1068:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1053:3:5",
														"type": ""
													}
												],
												"src": "993:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1176:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1193:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1213:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1198:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1198:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1186:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1164:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1171:3:5",
														"type": ""
													}
												],
												"src": "1117:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1378:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1388:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1454:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1395:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1560:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1471:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1471:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1573:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1584:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1589:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1580:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1366:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1374:3:5",
														"type": ""
													}
												],
												"src": "1232:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1750:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1760:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1826:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1767:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1760:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1932:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1843:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1945:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1738:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1746:3:5",
														"type": ""
													}
												],
												"src": "1604:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2041:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2058:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2081:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2063:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2029:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2036:3:5",
														"type": ""
													}
												],
												"src": "1976:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2198:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2208:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2220:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2231:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2208:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2288:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2312:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2297:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2244:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2244:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2170:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2182:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2193:4:5",
														"type": ""
													}
												],
												"src": "2100:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2420:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2430:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2430:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2504:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2517:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2528:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2513:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2513:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2466:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2466:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2392:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2404:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2415:4:5",
														"type": ""
													}
												],
												"src": "2328:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2715:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2725:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2737:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2748:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2725:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2791:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2817:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2951:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2825:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2817:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2695:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2710:4:5",
														"type": ""
													}
												],
												"src": "2544:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3140:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3150:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3162:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3173:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3158:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3150:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3208:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3193:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3216:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3222:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3186:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3242:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3376:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3250:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3250:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3242:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3120:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3135:4:5",
														"type": ""
													}
												],
												"src": "2969:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3514:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3525:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3582:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3595:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3606:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3538:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3538:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3464:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3476:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3487:4:5",
														"type": ""
													}
												],
												"src": "3394:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3662:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3672:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3682:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3655:6:5",
														"type": ""
													}
												],
												"src": "3622:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3799:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3816:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3821:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3809:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3837:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3856:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3861:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3852:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3837:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3771:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3776:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3787:11:5",
														"type": ""
													}
												],
												"src": "3703:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3920:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3930:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3953:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3935:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3930:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3964:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3987:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3969:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3964:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4011:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4013:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4013:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4013:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4008:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4001:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:9:5"
															},
															"nodeType": "YulIf",
															"src": "3998:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4043:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4052:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4055:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4048:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4043:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3909:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3912:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3918:1:5",
														"type": ""
													}
												],
												"src": "3878:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4114:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4124:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4153:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4135:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4124:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4096:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4106:7:5",
														"type": ""
													}
												],
												"src": "4069:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4213:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4223:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4248:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4241:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4241:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4234:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4234:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4223:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4195:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4205:7:5",
														"type": ""
													}
												],
												"src": "4171:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4312:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4322:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4333:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4322:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4294:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4304:7:5",
														"type": ""
													}
												],
												"src": "4267:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4444:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4454:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4465:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4454:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4426:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4436:7:5",
														"type": ""
													}
												],
												"src": "4399:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4510:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4527:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4530:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4624:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4627:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4617:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4617:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4648:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4651:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4641:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4641:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4482:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4696:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4713:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4716:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4810:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4813:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4803:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4803:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4803:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4834:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4837:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4668:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4943:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4963:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4953:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4953:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4854:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5066:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5076:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4977:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5206:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5228:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5236:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5224:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5240:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5217:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5296:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5304:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5292:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5292:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5309:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5285:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5285:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5198:6:5",
														"type": ""
													}
												],
												"src": "5100:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5437:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5459:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5467:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5455:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5471:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5448:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5448:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5429:6:5",
														"type": ""
													}
												],
												"src": "5331:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5562:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5619:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5628:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5631:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5621:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5621:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5585:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5610:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5592:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5592:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5582:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5582:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:43:5"
															},
															"nodeType": "YulIf",
															"src": "5572:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5555:5:5",
														"type": ""
													}
												],
												"src": "5519:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5690:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5747:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5756:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5749:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5749:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5749:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5713:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5738:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5720:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5720:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5710:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5710:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:43:5"
															},
															"nodeType": "YulIf",
															"src": "5700:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5683:5:5",
														"type": ""
													}
												],
												"src": "5647:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80638f32d59b116100665780638f32d59b146100fc578063a888a93a1461011a578063ea156f4414610136578063f0f4426014610154578063f2fde38b1461017057610093565b806336c3b4e214610098578063563df32f146100b6578063715018a6146100d45780638da5cb5b146100de575b600080fd5b6100a061018c565b6040516100ad919061094b565b60405180910390f35b6100be6101b2565b6040516100cb919061094b565b60405180910390f35b6100dc6101d8565b005b6100e66102dd565b6040516100f3919061094b565b60405180910390f35b610104610306565b6040516101119190610966565b60405180910390f35b610134600480360381019061012f919061087e565b610364565b005b61013e610448565b60405161014b91906109c1565b60405180910390f35b61016e6004803603810190610169919061087e565b6105e8565b005b61018a6004803603810190610185919061087e565b6106cc565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101e0610306565b61021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906109a1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661034861071f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61036c610306565b6103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a2906109a1565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507facdd85d235b5b49226c2c4f2b72cb01fa1cc3ae64bb843a6def27788d05b1b60600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161043d919061094b565b60405180910390a150565b60008073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c73ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104ba919061094b565b60206040518083038186803b1580156104d257600080fd5b505afa1580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a91906108ab565b90506000735bcd91c734d665fe426a5d7156f2ad7d37b76e3073ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161057d919061094b565b60206040518083038186803b15801561059557600080fd5b505afa1580156105a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cd91906108ab565b9050600082826105dd91906109ed565b905080935050505090565b6105f0610306565b61062f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610626906109a1565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb14f2a39bb21fda32827bbdb4be629c94036e10a3f6055a6454f884ca1b33fa1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516106c1919061094b565b60405180910390a150565b6106d4610306565b610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a906109a1565b60405180910390fd5b61071c81610727565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90610981565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061086381610b12565b92915050565b60008151905061087881610b29565b92915050565b60006020828403121561089457610893610a95565b5b60006108a284828501610854565b91505092915050565b6000602082840312156108c1576108c0610a95565b5b60006108cf84828501610869565b91505092915050565b6108e181610a1e565b82525050565b6108f081610a30565b82525050565b60006109036026836109dc565b915061090e82610a9a565b604082019050919050565b60006109266020836109dc565b915061093182610ae9565b602082019050919050565b61094581610a5c565b82525050565b600060208201905061096060008301846108d8565b92915050565b600060208201905061097b60008301846108e7565b92915050565b6000602082019050818103600083015261099a816108f6565b9050919050565b600060208201905081810360008301526109ba81610919565b9050919050565b60006020820190506109d6600083018461093c565b92915050565b600082825260208201905092915050565b60006109f882610a5c565b9150610a0383610a5c565b925082610a1357610a12610a66565b5b828204905092915050565b6000610a2982610a3c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610b1b81610a1e565b8114610b2657600080fd5b50565b610b3281610a5c565b8114610b3d57600080fd5b5056fea2646970667358221220416037718ffa560e181dd99ac291ef0b647fb5050366eba766f2e682ae4bbf1f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xA888A93A EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xEA156F44 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x170 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x36C3B4E2 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x563DF32F EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x348 PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x306 JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xACDD85D235B5B49226C2C4F2B72CB01FA1CC3AE64BB843A6DEF27788D05B1B60 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x5BCD91C734D665FE426A5D7156F2AD7D37B76E30 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5F0 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB14F2A39BB21FDA32827BBDB4BE629C94036E10A3F6055A6454F884CA1B33FA1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71C DUP2 PUSH2 0x727 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x863 DUP2 PUSH2 0xB12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x878 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A2 DUP5 DUP3 DUP6 ADD PUSH2 0x854 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8CF DUP5 DUP3 DUP6 ADD PUSH2 0x869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8E1 DUP2 PUSH2 0xA1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x903 PUSH1 0x26 DUP4 PUSH2 0x9DC JUMP JUMPDEST SWAP2 POP PUSH2 0x90E DUP3 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x926 PUSH1 0x20 DUP4 PUSH2 0x9DC JUMP JUMPDEST SWAP2 POP PUSH2 0x931 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 DUP2 PUSH2 0xA5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x99A DUP2 PUSH2 0x8F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9BA DUP2 PUSH2 0x919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x93C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F8 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH2 0xA03 DUP4 PUSH2 0xA5C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA13 JUMPI PUSH2 0xA12 PUSH2 0xA66 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 DUP3 PUSH2 0xA3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB1B DUP2 PUSH2 0xA1E JUMP JUMPDEST DUP2 EQ PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xA5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH1 0x37 PUSH18 0x8FFA560E181DD99AC291EF0B647FB5050366 0xEB 0xA7 PUSH7 0xF2E682AE4BBF1F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:1006:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;236:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1630:127:2;;;:::i;:::-;;899:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1218:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;689:147:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;842:351;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;547:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1896:101:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;265:25:4;;;;;;;;;;;;;:::o;236:23::-;;;;;;;;;;;;;:::o;1630:127:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:1:::1;1687:40;;1708:6;::::0;::::1;;;;;;;;1687:40;;;;;;;;;;;;1750:1;1733:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1630:127::o:0;899:71::-;937:7;959:6;;;;;;;;;;;952:13;;899:71;:::o;1218:86::-;1258:4;1293:6;;;;;;;;;;;1277:22;;:12;:10;:12::i;:::-;:22;;;1270:29;;1218:86;:::o;689:147:4:-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;775:11:4::1;762:10;;:24;;;;;;;;;;;;;;;;;;801:28;818:10;;;;;;;;;;;801:28;;;;;;:::i;:::-;;;;;;;;689:147:::0;:::o;842:351::-;894:7;913:19;942:42;935:60;;;996:10;;;;;;;;;;;935:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;913:94;;1017:18;1045:42;1038:60;;;1099:10;;;;;;;;;;;1038:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1017:93;;1120:16;1150:11;1139:10;:22;;;;:::i;:::-;1120:41;;1178:8;1171:15;;;;;842:351;:::o;547:135::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;627:9:4::1;616:8;;:20;;;;;;;;;;;;;;;;;;651:24;666:8;;;;;;;;;;;651:24;;;;;;:::i;:::-;;;;;;;;547:135:::0;:::o;1896:101:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1964:28:::1;1983:8;1964:18;:28::i;:::-;1896:101:::0;:::o;760:99:1:-;805:15;843:10;828:26;;760:99;:::o;2090:211:2:-;2179:1;2159:22;;:8;:22;;;;2151:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:8;2235:38;;2256:6;;;;;;;;;;2235:38;;;;;;;;;;;;2288:8;2279:6;;:17;;;;;;;;;;;;;;;;;;2090:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:329::-;360:6;409:2;397:9;388:7;384:23;380:32;377:119;;;415:79;;:::i;:::-;377:119;535:1;560:53;605:7;596:6;585:9;581:22;560:53;:::i;:::-;550:63;;506:117;301:329;;;;:::o;636:351::-;706:6;755:2;743:9;734:7;730:23;726:32;723:119;;;761:79;;:::i;:::-;723:119;881:1;906:64;962:7;953:6;942:9;938:22;906:64;:::i;:::-;896:74;;852:128;636:351;;;;:::o;993:118::-;1080:24;1098:5;1080:24;:::i;:::-;1075:3;1068:37;993:118;;:::o;1117:109::-;1198:21;1213:5;1198:21;:::i;:::-;1193:3;1186:34;1117:109;;:::o;1232:366::-;1374:3;1395:67;1459:2;1454:3;1395:67;:::i;:::-;1388:74;;1471:93;1560:3;1471:93;:::i;:::-;1589:2;1584:3;1580:12;1573:19;;1232:366;;;:::o;1604:::-;1746:3;1767:67;1831:2;1826:3;1767:67;:::i;:::-;1760:74;;1843:93;1932:3;1843:93;:::i;:::-;1961:2;1956:3;1952:12;1945:19;;1604:366;;;:::o;1976:118::-;2063:24;2081:5;2063:24;:::i;:::-;2058:3;2051:37;1976:118;;:::o;2100:222::-;2193:4;2231:2;2220:9;2216:18;2208:26;;2244:71;2312:1;2301:9;2297:17;2288:6;2244:71;:::i;:::-;2100:222;;;;:::o;2328:210::-;2415:4;2453:2;2442:9;2438:18;2430:26;;2466:65;2528:1;2517:9;2513:17;2504:6;2466:65;:::i;:::-;2328:210;;;;:::o;2544:419::-;2710:4;2748:2;2737:9;2733:18;2725:26;;2797:9;2791:4;2787:20;2783:1;2772:9;2768:17;2761:47;2825:131;2951:4;2825:131;:::i;:::-;2817:139;;2544:419;;;:::o;2969:::-;3135:4;3173:2;3162:9;3158:18;3150:26;;3222:9;3216:4;3212:20;3208:1;3197:9;3193:17;3186:47;3250:131;3376:4;3250:131;:::i;:::-;3242:139;;2969:419;;;:::o;3394:222::-;3487:4;3525:2;3514:9;3510:18;3502:26;;3538:71;3606:1;3595:9;3591:17;3582:6;3538:71;:::i;:::-;3394:222;;;;:::o;3703:169::-;3787:11;3821:6;3816:3;3809:19;3861:4;3856:3;3852:14;3837:29;;3703:169;;;;:::o;3878:185::-;3918:1;3935:20;3953:1;3935:20;:::i;:::-;3930:25;;3969:20;3987:1;3969:20;:::i;:::-;3964:25;;4008:1;3998:35;;4013:18;;:::i;:::-;3998:35;4055:1;4052;4048:9;4043:14;;3878:185;;;;:::o;4069:96::-;4106:7;4135:24;4153:5;4135:24;:::i;:::-;4124:35;;4069:96;;;:::o;4171:90::-;4205:7;4248:5;4241:13;4234:21;4223:32;;4171:90;;;:::o;4267:126::-;4304:7;4344:42;4337:5;4333:54;4322:65;;4267:126;;;:::o;4399:77::-;4436:7;4465:5;4454:16;;4399:77;;;:::o;4668:180::-;4716:77;4713:1;4706:88;4813:4;4810:1;4803:15;4837:4;4834:1;4827:15;4977:117;5086:1;5083;5076:12;5100:225;5240:34;5236:1;5228:6;5224:14;5217:58;5309:8;5304:2;5296:6;5292:15;5285:33;5100:225;:::o;5331:182::-;5471:34;5467:1;5459:6;5455:14;5448:58;5331:182;:::o;5519:122::-;5592:24;5610:5;5592:24;:::i;:::-;5585:5;5582:35;5572:63;;5631:1;5628;5621:12;5572:63;5519:122;:::o;5647:::-;5720:24;5738:5;5720:24;:::i;:::-;5713:5;5710:35;5700:63;;5759:1;5756;5749:12;5700:63;5647:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "586800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LiquidPool()": "2515",
								"Treasury()": "2537",
								"getMINPrice()": "infinite",
								"isOwner()": "2531",
								"owner()": "2589",
								"renounceOwnership()": "30374",
								"setLiquidPool(address)": "infinite",
								"setTreasury(address)": "infinite",
								"transferOwnership(address)": "30795"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 1200,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 541,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 541,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 391,
									"end": 541,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 716,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 772,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 816,
									"end": 825,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 812,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 710,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 427,
									"end": 469,
									"name": "PUSH",
									"source": 4,
									"value": "CB3745379275252F4BEB5D1094BF1A8A09F368B7"
								},
								{
									"begin": 416,
									"end": 424,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 416,
									"end": 424,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 469,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 416,
									"end": 469,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 469,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 469,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 416,
									"end": 469,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 492,
									"end": 534,
									"name": "PUSH",
									"source": 4,
									"value": "D295CF5D859B9ED331CDF69C49A81EFF5E1BEE83"
								},
								{
									"begin": 479,
									"end": 489,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 479,
									"end": 489,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 534,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 479,
									"end": 534,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 479,
									"end": 534,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 479,
									"end": 534,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 479,
									"end": 534,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 760,
									"end": 859,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 805,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 853,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 1200,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220416037718ffa560e181dd99ac291ef0b647fb5050366eba766f2e682ae4bbf1f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "8F32D59B"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "8F32D59B"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "A888A93A"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "EA156F44"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "F0F44260"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "36C3B4E2"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "563DF32F"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1200,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 689,
											"end": 836,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 265,
											"end": 290,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 290,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 265,
											"end": 290,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 259,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 689,
											"end": 836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 775,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 762,
											"end": 772,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 762,
											"end": 772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 762,
											"end": 786,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 762,
											"end": 786,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 762,
											"end": 786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 762,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "PUSH",
											"source": 4,
											"value": "ACDD85D235B5B49226C2C4F2B72CB01FA1CC3AE64BB843A6DEF27788D05B1B60"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 818,
											"end": 828,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 818,
											"end": 828,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 818,
											"end": 828,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 818,
											"end": 828,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 829,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 801,
											"end": 829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 801,
											"end": 829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 801,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 801,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 829,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 801,
											"end": 829,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 689,
											"end": 836,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 894,
											"end": 901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 942,
											"end": 984,
											"name": "PUSH",
											"source": 4,
											"value": "BB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
										},
										{
											"begin": 935,
											"end": 995,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 995,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 935,
											"end": 995,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 913,
											"end": 1007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 913,
											"end": 1007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1087,
											"name": "PUSH",
											"source": 4,
											"value": "5BCD91C734D665FE426A5D7156F2AD7D37B76E30"
										},
										{
											"begin": 1038,
											"end": 1098,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1098,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1098,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1038,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 842,
											"end": 1193,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 547,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 616,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "PUSH",
											"source": 4,
											"value": "B14F2A39BB21FDA32827BBDB4BE629C94036E10A3F6055A6454F884CA1B33FA1"
										},
										{
											"begin": 666,
											"end": 674,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 666,
											"end": 674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 666,
											"end": 674,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 666,
											"end": 674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 666,
											"end": 674,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 666,
											"end": 674,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 666,
											"end": 674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 666,
											"end": 674,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 666,
											"end": 674,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 666,
											"end": 674,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 675,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 651,
											"end": 675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 651,
											"end": 675,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 675,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 651,
											"end": 675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 675,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 651,
											"end": 675,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 547,
											"end": 682,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1983,
											"end": 1991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 853,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 630,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 301,
											"end": 630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 360,
											"end": 366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 388,
											"end": 395,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 384,
											"end": 407,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 380,
											"end": 412,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 377,
											"end": 496,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 377,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 377,
											"end": 496,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 496,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 377,
											"end": 496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 605,
											"end": 612,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 596,
											"end": 602,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 585,
											"end": 594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 581,
											"end": 603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 560,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 550,
											"end": 613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 550,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 506,
											"end": 623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 301,
											"end": 630,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 301,
											"end": 630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 301,
											"end": 630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 301,
											"end": 630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 301,
											"end": 630,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 636,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 636,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 706,
											"end": 712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 757,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 752,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 730,
											"end": 753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 726,
											"end": 758,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 723,
											"end": 842,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 723,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 723,
											"end": 842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 761,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 723,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 723,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 962,
											"end": 969,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 953,
											"end": 959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 942,
											"end": 951,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 938,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 896,
											"end": 970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 852,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 987,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 636,
											"end": 987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 636,
											"end": 987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 987,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1454,
											"end": 1457,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1560,
											"end": 1563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1932,
											"end": 1935,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2081,
											"end": 2086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2528,
											"end": 2529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2526,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2530,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2750,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3186,
											"end": 3233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3376,
											"end": 3380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3527,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3865,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3856,
											"end": 3859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3878,
											"end": 4063,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3878,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3935,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3935,
											"end": 3955,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 3955,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3935,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3969,
											"end": 3989,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3969,
											"end": 3989,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3969,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3998,
											"end": 4033,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4033,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3998,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4043,
											"end": 4057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4043,
											"end": 4057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 4063,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 4063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 4063,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4069,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4069,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4153,
											"end": 4158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4165,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4171,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4205,
											"end": 4212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4254,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4255,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4261,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4267,
											"end": 4393,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4267,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4386,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4393,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4399,
											"end": 4476,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4399,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4476,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4668,
											"end": 4848,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4668,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4793,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4713,
											"end": 4714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4794,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 4810,
											"end": 4811,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4841,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4834,
											"end": 4835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4842,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4977,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5086,
											"end": 5087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5088,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5325,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5100,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5274,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5236,
											"end": 5237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5317,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5304,
											"end": 5306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5296,
											"end": 5302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5285,
											"end": 5318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5325,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5331,
											"end": 5513,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5331,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5471,
											"end": 5505,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5467,
											"end": 5468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5465,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5455,
											"end": 5469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5513,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5519,
											"end": 5641,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5519,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5610,
											"end": 5615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5592,
											"end": 5616,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5592,
											"end": 5616,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5592,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5617,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5631,
											"end": 5632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5572,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5641,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 5738,
											"end": 5743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5720,
											"end": 5744,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5720,
											"end": 5744,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 5720,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5745,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5700,
											"end": 5763,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5761,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5763,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5700,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"LiquidPool()": "36c3b4e2",
							"Treasury()": "563df32f",
							"getMINPrice()": "ea156f44",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setLiquidPool(address)": "a888a93a",
							"setTreasury(address)": "f0f44260",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_LiquidPool\",\"type\":\"address\"}],\"name\":\"changeLiquidPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_Treasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LiquidPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMINPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LiquidPool\",\"type\":\"address\"}],\"name\":\"setLiquidPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"marketplace.sol\":\"marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]},\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]},\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]},\"marketplace.sol\":{\"keccak256\":\"0xeac3a24f7194923f5864b375b09e955bb3769d9696df0d4a3b03634179a574c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abba38e3e8fed0652f3af9796b659b4f46b5f31f73e48edb8783fe82cd268f3e\",\"dweb:/ipfs/QmT4eQE6rhmnsgUYbc7ypF1e5kZ8rG8M2nJjyBbX7jPMhY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "marketplace.sol:marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 540,
								"contract": "marketplace.sol:marketplace",
								"label": "Treasury",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 542,
								"contract": "marketplace.sol:marketplace",
								"label": "LiquidPool",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1226:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1450:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1450:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1443:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1169:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1220:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:6:0"
									},
									"scope": 294,
									"src": "1160:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2468:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2494:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2486:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2486:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2486:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2511:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2478:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2568:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2563:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2581:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2581:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2581:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2624:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1486:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2406:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2432:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2416:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:0"
									},
									"scope": 294,
									"src": "2397:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3540:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3550:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2715:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3460:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3489:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:14:0"
									},
									"scope": 294,
									"src": "3451:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3993:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4049:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4010:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4003:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3630:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3855:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3885:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3877:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3901:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3942:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3928:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3979:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:14:0"
									},
									"scope": 294,
									"src": "3846:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4574:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4591:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4584:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4075:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4440:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4560:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:14:0"
									},
									"scope": 294,
									"src": "4431:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5112:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5138:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5130:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5130:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5130:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5155:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5130:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5122:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5232:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5221:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5213:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5290:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5285:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5312:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5299:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5326:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5326:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5345:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5326:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5400:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5412:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5374:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5367:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4691:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4981:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4997:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5047:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5098:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5097:14:0"
									},
									"scope": 294,
									"src": "4933:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5709:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5745:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5726:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5719:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5438:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5618:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5666:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5653:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5695:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:14:0"
									},
									"scope": 294,
									"src": "5609:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6148:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6186:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6158:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6242:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6237:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6264:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6251:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6251:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6278:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6236:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6318:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6318:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6311:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5812:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5999:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6027:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6064:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6051:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6051:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6092:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6078:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6017:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6134:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:14:0"
									},
									"scope": 294,
									"src": "5990:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6652:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6704:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6669:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6662:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6382:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6564:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6601:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6638:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6637:14:0"
									},
									"scope": 294,
									"src": "6555:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7094:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7112:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7132:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7104:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7190:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7185:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7212:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7199:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7226:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7268:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7261:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6759:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7002:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7002:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7029:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7080:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:14:0"
									},
									"scope": 294,
									"src": "6939:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7706:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7777:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7861:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7861:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7861:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8169:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8194:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8187:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8187:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8187:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7857:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7884:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8004:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8026:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8055:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8049:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8049:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8030:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8098:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8102:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8094:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8094:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8115:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8087:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8087:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8087:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8055:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8102:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "7995:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7716:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7729:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7750:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7743:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7332:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7555:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7616:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7603:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7650:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7636:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7691:14:0"
									},
									"scope": 294,
									"src": "7546:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "179:8061:0",
							"usedErrors": []
						}
					],
					"src": "86:8154:0"
				},
				"id": 0
			},
			"BEPContext.sol": {
				"ast": {
					"absolutePath": "BEPContext.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "BEPContext",
							"nameLocation": "575:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "754:2:1",
										"statements": []
									},
									"id": 300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:2:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 324,
									"src": "740:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "822:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "843:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 304,
												"id": 310,
												"nodeType": "Return",
												"src": "828:26:1"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "769:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:17:1"
									},
									"scope": 324,
									"src": "760:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "920:36:1",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_BEPContext_$324",
														"typeString": "contract BEPContext"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "926:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 319,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "943:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "943:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 316,
												"id": 321,
												"nodeType": "Return",
												"src": "936:15:1"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "872:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "906:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:14:1"
									},
									"scope": 324,
									"src": "863:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 325,
							"src": "557:401:1",
							"usedErrors": []
						}
					],
					"src": "32:926:1"
				},
				"id": 1
			},
			"BEPOwnable.sol": {
				"ast": {
					"absolutePath": "BEPOwnable.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "BEPContext.sol",
							"file": "./BEPContext.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 325,
							"src": "56:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 329,
										"name": "BEPContext",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "476:10:2"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "476:10:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "83:360:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								324
							],
							"name": "BEPOwnable",
							"nameLocation": "462:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "507:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "491:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 338,
									"name": "OwnershipTransferred",
									"nameLocation": "524:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "561:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "545:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "592:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "576:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:57:2"
									},
									"src": "518:84:2"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "710:121:2",
										"statements": [
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "724:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "716:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "716:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "736:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "716:32:2"
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 347,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "754:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 348,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "763:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "754:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "754:18:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "812:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "804:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "804:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "816:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 351,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "783:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "EmitStatement",
												"src": "778:48:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "606:87:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 360,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:2"
									},
									"scope": 454,
									"src": "696:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "946:24:2",
										"statements": [
											{
												"expression": {
													"id": 366,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "959:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "952:13:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "835:61:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "908:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "937:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:2"
									},
									"scope": 454,
									"src": "899:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1071:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 373,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1085:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1085:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1096:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1077:54:2"
											},
											{
												"id": 378,
												"nodeType": "PlaceholderStatement",
												"src": "1137:1:2"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "974:73:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 380,
									"name": "onlyOwner",
									"nameLocation": "1059:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:2:2"
									},
									"src": "1050:93:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1264:40:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 386,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1277:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1277:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1293:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1277:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 390,
												"nodeType": "Return",
												"src": "1270:29:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1147:68:2",
										"text": " @dev Returns true if the caller is the current owner."
									},
									"functionSelector": "8f32d59b",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "1227:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:2"
									},
									"scope": 454,
									"src": "1218:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1676:81:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1708:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1687:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1687:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "EmitStatement",
												"src": "1682:45:2"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1733:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1750:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1742:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 407,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1742:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1733:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1733:19:2"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1308:319:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1666:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1666:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1639:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:0:2"
									},
									"scope": 454,
									"src": "1630:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1958:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1983:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "1964:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1964:28:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1761:132:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 419,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1948:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1905:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1931:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1923:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:18:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:0:2"
									},
									"scope": 454,
									"src": "1896:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2145:156:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2159:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2179:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2171:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 435,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2171:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2171:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2159:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2151:73:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "2256:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "2264:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2235:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2230:43:2"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2279:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2288:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2279:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2279:17:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2001:86:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2099:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2126:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2118:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:18:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2145:0:2"
									},
									"scope": 454,
									"src": "2090:211:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "444:1859:2",
							"usedErrors": []
						}
					],
					"src": "32:2271:2"
				},
				"id": 2
			},
			"IBEP20.sol": {
				"ast": {
					"absolutePath": "IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							531
						]
					},
					"id": 532,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "IBEP20",
							"nameLocation": "67:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "78:62:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "152:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "189:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:3"
									},
									"scope": 531,
									"src": "143:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "202:68:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "282:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "300:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "292:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:17:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "332:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:3"
									},
									"scope": 531,
									"src": "273:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "345:197:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "554:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "571:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "563:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "590:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "582:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:35:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "616:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:6:3"
									},
									"scope": 531,
									"src": "545:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "626:252:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "890:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "900:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:32:3"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "955:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:3"
									},
									"scope": 531,
									"src": "881:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "968:514:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1494:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1510:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1502:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1527:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1519:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:33:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1553:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1553:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:6:3"
									},
									"scope": 531,
									"src": "1485:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1563:280:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1855:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1881:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1873:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1901:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1893:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1924:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1916:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:67:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1953:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:3"
									},
									"scope": 531,
									"src": "1846:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1963:148:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 521,
									"name": "Transfer",
									"nameLocation": "2120:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2145:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2129:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2167:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2151:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:57:3"
									},
									"src": "2114:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2190:142:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 530,
									"name": "Approval",
									"nameLocation": "2341:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2350:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2389:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2373:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2406:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2398:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:63:3"
									},
									"src": "2335:78:3"
								}
							],
							"scope": 532,
							"src": "57:2358:3",
							"usedErrors": []
						}
					],
					"src": "32:2383:3"
				},
				"id": 3
			},
			"marketplace.sol": {
				"ast": {
					"absolutePath": "marketplace.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						],
						"IBEP20": [
							531
						],
						"marketplace": [
							627
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:4"
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 295,
							"src": "119:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEPOwnable.sol",
							"file": "./BEPOwnable.sol",
							"id": 535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 455,
							"src": "143:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 532,
							"src": "170:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 537,
										"name": "BEPOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "218:10:4"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "218:10:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 627,
							"linearizedBaseContracts": [
								627,
								454,
								324
							],
							"name": "marketplace",
							"nameLocation": "203:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "563df32f",
									"id": 540,
									"mutability": "mutable",
									"name": "Treasury",
									"nameLocation": "251:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 627,
									"src": "236:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 539,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "236:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36c3b4e2",
									"id": 542,
									"mutability": "mutable",
									"name": "LiquidPool",
									"nameLocation": "280:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 627,
									"src": "265:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 541,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "265:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 546,
									"name": "changeTreasury",
									"nameLocation": "302:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"indexed": false,
												"mutability": "mutable",
												"name": "_Treasury",
												"nameLocation": "325:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "317:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:19:4"
									},
									"src": "296:40:4"
								},
								{
									"anonymous": false,
									"id": 550,
									"name": "changeLiquidPool",
									"nameLocation": "347:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"indexed": false,
												"mutability": "mutable",
												"name": "_LiquidPool",
												"nameLocation": "372:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "364:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:21:4"
									},
									"src": "341:44:4"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "405:136:4",
										"statements": [
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "416:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307863623337343533373932373532353246346265423564313039346246316138413039463336386237",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "427:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xcb3745379275252F4beB5d1094bF1a8A09F368b7"
													},
													"src": "416:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "416:53:4"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 557,
														"name": "LiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "479:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307864323935634635443835394239456433333163644636396334394138314566663565314265653833",
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "492:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83"
													},
													"src": "479:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "479:55:4"
											}
										]
									},
									"id": 562,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:2:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:0:4"
									},
									"scope": 627,
									"src": "391:150:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "606:76:4",
										"statements": [
											{
												"expression": {
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 569,
														"name": "Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "616:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 570,
														"name": "_Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "627:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "616:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "616:20:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 574,
															"name": "Treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "666:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 573,
														"name": "changeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "651:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "646:29:4"
											}
										]
									},
									"functionSelector": "f0f44260",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 566,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "596:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "596:9:4"
										}
									],
									"name": "setTreasury",
									"nameLocation": "556:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "_Treasury",
												"nameLocation": "576:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "568:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:19:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:0:4"
									},
									"scope": 627,
									"src": "547:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "752:84:4",
										"statements": [
											{
												"expression": {
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 585,
														"name": "LiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "762:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 586,
														"name": "_LiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "775:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "762:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "762:24:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 590,
															"name": "LiquidPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "818:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 589,
														"name": "changeLiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "801:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "EmitStatement",
												"src": "796:33:4"
											}
										]
									},
									"functionSelector": "a888a93a",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 583,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 582,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "742:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "742:9:4"
										}
									],
									"name": "setLiquidPool",
									"nameLocation": "698:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "_LiquidPool",
												"nameLocation": "720:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "712:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:21:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:0:4"
									},
									"scope": 627,
									"src": "689:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "903:290:4",
										"statements": [
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "wbnbbalance",
														"nameLocation": "921:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "913:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "913:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"arguments": [
														{
															"id": 605,
															"name": "LiquidPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "996:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "942:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 601,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "935:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "935:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$531",
																"typeString": "contract IBEP20"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "935:60:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "913:94:4"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "vimbalance",
														"nameLocation": "1025:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "1017:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1017:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"arguments": [
														{
															"id": 614,
															"name": "LiquidPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "1099:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307835626364393143373334643636354665343236413544373135366632614437643337623736653330",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 610,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "1038:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1038:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$531",
																"typeString": "contract IBEP20"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "1038:60:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1017:93:4"
											},
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "minprice",
														"nameLocation": "1128:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "1120:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1120:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "vimbalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "1139:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 620,
														"name": "wbnbbalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "1150:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1139:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1120:41:4"
											},
											{
												"expression": {
													"id": 623,
													"name": "minprice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 618,
													"src": "1178:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 624,
												"nodeType": "Return",
												"src": "1171:15:4"
											}
										]
									},
									"functionSelector": "ea156f44",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMINPrice",
									"nameLocation": "851:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:4"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:9:4"
									},
									"scope": 627,
									"src": "842:351:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 628,
							"src": "194:1006:4",
							"usedErrors": []
						}
					],
					"src": "93:1107:4"
				},
				"id": 4
			}
		}
	}
}