{
	"id": "150ed254ea259107603b358fb7c8098e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (finance/VestingWallet.sol)\npragma solidity ^0.8.0;\n\n\nimport \"./Address.sol\";\nimport \"./BEPPausable.sol\";\nimport \"./IBEP20.sol\";\nimport \"./IERC721Enumerable.sol\";\n\ncontract marketplace is BEPPausable {\n\n    address public Treasury;\n    address public LiquidPool;\n    address public ShoseNFTContract;\n    address public VIMContract;\n    address public WBNBContract;\n    uint256 public MinBnB;\n    mapping(uint256 => address) private shoseTranfer;\n\n    mapping(uint256 => uint256) private shoseShell;\n    uint256[] private allTokensSell;\n\n    event changeTreasury(address _Treasury);\n    event changeLiquidPool(address _LiquidPool);\n    event changeShoseNFTContract(address _ShoseNFTContract);\n    event changeVIMContract(address _VIMContract);\n    event changeMinBnB(uint256 _MinBnB);\n\n    constructor() { \n        Treasury = 0xcb3745379275252F4beB5d1094bF1a8A09F368b7;\n        LiquidPool = 0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83;\n        ShoseNFTContract = 0xC184af52Ca4E1B1f085aA8236Ff8508F52dc6eA7;\n        VIMContract = 0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30;\n        WBNBContract = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\n        MinBnB = 6;\n    }\n\n    function setTreasury(address _Treasury) external onlyOwner {\n        Treasury = _Treasury;\n        emit changeTreasury(Treasury);\n    }  \n    function setLiquidPool(address _LiquidPool) external onlyOwner {\n        LiquidPool = _LiquidPool;\n        emit changeLiquidPool(LiquidPool);\n    } \n    function setShoseNFTContract(address _ShoseNFTContract) external onlyOwner {\n        ShoseNFTContract = _ShoseNFTContract;\n        emit changeShoseNFTContract(ShoseNFTContract);\n    } \n    function setVIMContract(address _VIMContract) external onlyOwner {\n        VIMContract = _VIMContract;\n        emit changeVIMContract(VIMContract);\n    } \n    function setMinBNB(uint256  _MinBnB) external onlyOwner {\n        MinBnB = _MinBnB;\n        emit changeMinBnB(MinBnB);\n    } \n\n    function getMINPrice() public view virtual returns (uint256) {\n        uint256 wbnbbalance = IBEP20(WBNBContract).balanceOf(LiquidPool);\n        uint256 vimbalance = IBEP20(VIMContract).balanceOf(LiquidPool);\n        uint256 bnbprice = vimbalance/wbnbbalance;\n        uint256 minprice = bnbprice * MinBnB / 10;\n        return minprice;\n    }\n\n    function transferVicShose(address to,uint256 tokenId) external whenNotPaused {\n        address from = msg.sender;\n        require(IERC721Enumerable(ShoseNFTContract).isApprovedForAll(from,address(this)),\"You need Approve For All to this contact\");\n        require(to != address(0),\"Address can not zero\");\n        require(to != from,\"From and To can not same\");\n        IERC721Enumerable(ShoseNFTContract).safeTransferFrom(from, to,tokenId);\n        shoseTranfer[tokenId] = to;\n    }\n    function checkShoseTranfer(uint256 tokenId) public view virtual returns (address) {\n        return shoseTranfer[tokenId];\n    }\n\n    function SellVicShose(uint256 tokenId,uint256 price) external whenNotPaused {\n        address seller = msg.sender;\n        require(IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller,\"seller need have this tokenid\");\n        require(IERC721Enumerable(ShoseNFTContract).isApprovedForAll(seller,address(this)),\"You need Approve For All to this contact\");\n        require(price > 0, \"Price > 0\");\n        shoseShell[tokenId] = price;\n        allTokensSell.push(tokenId);\n    }\n\n    function CancelSellVicShose(uint256 tokenId) external whenNotPaused {\n        address seller = msg.sender;\n        require(IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller,\"seller need have this tokenid\");\n        delete shoseShell[tokenId];\n        for(uint256 i = 0; i < allTokensSell.length; i++){\n            if(allTokensSell[i] == tokenId){\n                delete allTokensSell[i];\n                return;\n            }\n        }\n    }\n\n    function getSellingShose() external view returns (uint256[] memory _tokenID, uint256[] memory _Price) {\n        uint256 shoseShellCount = allTokensSell.length;\n        uint256[] memory Price = new uint256[](shoseShellCount);\n        for (uint256 i = 0; i < shoseShellCount; i++) {\n            Price[i] = shoseShell[allTokensSell[i]];\n        }\n        return (allTokensSell,Price);\n    }\n}"
			},
			"IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}"
			},
			"IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"BEPPausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./BEPOwnable.sol\";\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract BEPPausable is BEPOwnable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n  /**\n   * @dev modifier to allow actions only when the contract IS paused\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev modifier to allow actions only when the contract IS NOT paused\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() public onlyOwner whenNotPaused returns (bool) {\n    paused = true;\n    emit Pause();\n    return true;\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() public onlyOwner whenPaused returns (bool) {\n    paused = false;\n    emit Unpause();\n    return true;\n  }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}"
			},
			"BEPOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./BEPContext.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract BEPOwnable is BEPContext {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Returns true if the caller is the current owner.\n   */\n  function isOwner() public view returns (bool) {\n    return _msgSender() == _owner;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}"
			},
			"IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			},
			"BEPContext.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract BEPContext {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor() {}\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this;\n    return msg.data;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:8240  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:8240  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPContext.sol": {
				"BEPContext": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPContext.sol\":\"BEPContext\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPOwnable.sol": {
				"BEPOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPOwnable.sol\":\"BEPOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "BEPOwnable.sol:BEPOwnable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPPausable.sol": {
				"BEPPausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Base contract which allows children to implement an emergency stop mechanism.",
						"kind": "dev",
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"title": "Pausable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEPPausable.sol\":196:996  contract BEPPausable is BEPOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"BEPPausable.sol\":293:298  false */\n  0x00\n    /* \"BEPPausable.sol\":272:298  bool public paused = false */\n  dup1\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEPPausable.sol\":196:996  contract BEPPausable is BEPOwnable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"BEPOwnable.sol\":716:733  address msgSender */\n  0x00\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  tag_6\n    /* \"BEPOwnable.sol\":736:746  _msgSender */\n  shl(0x20, tag_7)\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"BEPOwnable.sol\":716:748  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEPOwnable.sol\":763:772  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":754:760  _owner */\n  0x00\n  dup1\n    /* \"BEPOwnable.sol\":754:772  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEPOwnable.sol\":816:825  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEPOwnable.sol\":812:813  0 */\n  0x00\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEPOwnable.sol\":710:831  {... */\n  pop\n    /* \"BEPPausable.sol\":196:996  contract BEPPausable is BEPOwnable {... */\n  jump(tag_8)\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\ntag_7:\n    /* \"BEPContext.sol\":805:820  address payable */\n  0x00\n    /* \"BEPContext.sol\":843:853  msg.sender */\n  caller\n    /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"BEPPausable.sol\":196:996  contract BEPPausable is BEPOwnable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEPPausable.sol\":196:996  contract BEPPausable is BEPOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BEPPausable.sol\":870:994  function unpause() public onlyOwner whenPaused returns (bool) {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPPausable.sol\":272:298  bool public paused = false */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"BEPPausable.sol\":666:788  function pause() public onlyOwner whenNotPaused returns (bool) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_8:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"BEPPausable.sol\":870:994  function unpause() public onlyOwner whenPaused returns (bool) {... */\n    tag_12:\n        /* \"BEPPausable.sol\":926:930  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_35\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_28\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_35:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"BEPPausable.sol\":568:574  paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEPPausable.sol\":560:575  require(paused) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"BEPPausable.sol\":947:952  false */\n      0x00\n        /* \"BEPPausable.sol\":938:944  paused */\n      dup1\n      0x14\n        /* \"BEPPausable.sol\":938:952  paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPPausable.sol\":963:972  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BEPPausable.sol\":985:989  true */\n      0x01\n        /* \"BEPPausable.sol\":978:989  return true */\n      swap1\n      pop\n        /* \"BEPPausable.sol\":870:994  function unpause() public onlyOwner whenPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"BEPPausable.sol\":272:298  bool public paused = false */\n    tag_16:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_19:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_43\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_28\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_43:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_38\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"BEPOwnable.sol\":1724:1725  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1708:1714  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":1750:1751  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1733:1739  _owner */\n      dup1\n      0x00\n        /* \"BEPOwnable.sol\":1733:1752  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"BEPPausable.sol\":666:788  function pause() public onlyOwner whenNotPaused returns (bool) {... */\n    tag_21:\n        /* \"BEPPausable.sol\":723:727  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_48\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_28\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_48:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_38\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"BEPPausable.sol\":424:430  paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEPPausable.sol\":423:430  !paused */\n      iszero\n        /* \"BEPPausable.sol\":415:431  require(!paused) */\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n        /* \"BEPPausable.sol\":744:748  true */\n      0x01\n        /* \"BEPPausable.sol\":735:741  paused */\n      0x00\n      0x14\n        /* \"BEPPausable.sol\":735:748  paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPPausable.sol\":759:766  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BEPPausable.sol\":779:783  true */\n      0x01\n        /* \"BEPPausable.sol\":772:783  return true */\n      swap1\n      pop\n        /* \"BEPPausable.sol\":666:788  function pause() public onlyOwner whenNotPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_24:\n        /* \"BEPOwnable.sol\":937:944  address */\n      0x00\n        /* \"BEPOwnable.sol\":959:965  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":952:965  return _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_28:\n        /* \"BEPOwnable.sol\":1258:1262  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1293:1299  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      tag_56\n        /* \"BEPOwnable.sol\":1277:1287  _msgSender */\n      tag_57\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      jump\t// in\n    tag_56:\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEPOwnable.sol\":1270:1299  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_33:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_59\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_28\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_59:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_38\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      tag_63\n        /* \"BEPOwnable.sol\":1983:1991  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":1964:1982  _transferOwnership */\n      tag_64\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_63:\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n    tag_57:\n        /* \"BEPContext.sol\":805:820  address payable */\n      0x00\n        /* \"BEPContext.sol\":843:853  msg.sender */\n      caller\n        /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n    tag_64:\n        /* \"BEPOwnable.sol\":2179:2180  0 */\n      0x00\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2159:2167  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEPOwnable.sol\":2151:2224  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"BEPOwnable.sol\":2264:2272  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2256:2262  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":2288:2296  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2279:2285  _owner */\n      0x00\n      dup1\n        /* \"BEPOwnable.sol\":2279:2296  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_71:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_73\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_32:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":228:347   */\n    tag_76:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_79\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_71\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_80:\n        /* \"#utility.yul\":574:598   */\n      tag_82\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:720   */\n    tag_84:\n        /* \"#utility.yul\":692:713   */\n      tag_86\n        /* \"#utility.yul\":707:712   */\n      dup2\n        /* \"#utility.yul\":692:713   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":687:690   */\n      dup3\n        /* \"#utility.yul\":680:714   */\n      mstore\n        /* \"#utility.yul\":611:720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:1092   */\n    tag_88:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":889:956   */\n      tag_90\n        /* \"#utility.yul\":953:955   */\n      0x26\n        /* \"#utility.yul\":948:951   */\n      dup4\n        /* \"#utility.yul\":889:956   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":882:956   */\n      swap2\n      pop\n        /* \"#utility.yul\":965:1058   */\n      tag_92\n        /* \"#utility.yul\":1054:1057   */\n      dup3\n        /* \"#utility.yul\":965:1058   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1083:1085   */\n      0x40\n        /* \"#utility.yul\":1078:1081   */\n      dup3\n        /* \"#utility.yul\":1074:1086   */\n      add\n        /* \"#utility.yul\":1067:1086   */\n      swap1\n      pop\n        /* \"#utility.yul\":726:1092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1098:1464   */\n    tag_94:\n        /* \"#utility.yul\":1240:1243   */\n      0x00\n        /* \"#utility.yul\":1261:1328   */\n      tag_96\n        /* \"#utility.yul\":1325:1327   */\n      0x20\n        /* \"#utility.yul\":1320:1323   */\n      dup4\n        /* \"#utility.yul\":1261:1328   */\n      tag_91\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1254:1328   */\n      swap2\n      pop\n        /* \"#utility.yul\":1337:1430   */\n      tag_97\n        /* \"#utility.yul\":1426:1429   */\n      dup3\n        /* \"#utility.yul\":1337:1430   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1446:1458   */\n      add\n        /* \"#utility.yul\":1439:1458   */\n      swap1\n      pop\n        /* \"#utility.yul\":1098:1464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1692   */\n    tag_26:\n        /* \"#utility.yul\":1563:1567   */\n      0x00\n        /* \"#utility.yul\":1601:1603   */\n      0x20\n        /* \"#utility.yul\":1590:1599   */\n      dup3\n        /* \"#utility.yul\":1586:1604   */\n      add\n        /* \"#utility.yul\":1578:1604   */\n      swap1\n      pop\n        /* \"#utility.yul\":1614:1685   */\n      tag_100\n        /* \"#utility.yul\":1682:1683   */\n      0x00\n        /* \"#utility.yul\":1671:1680   */\n      dup4\n        /* \"#utility.yul\":1667:1684   */\n      add\n        /* \"#utility.yul\":1658:1664   */\n      dup5\n        /* \"#utility.yul\":1614:1685   */\n      tag_80\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1470:1692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1698:1908   */\n    tag_14:\n        /* \"#utility.yul\":1785:1789   */\n      0x00\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1812:1821   */\n      dup3\n        /* \"#utility.yul\":1808:1826   */\n      add\n        /* \"#utility.yul\":1800:1826   */\n      swap1\n      pop\n        /* \"#utility.yul\":1836:1901   */\n      tag_102\n        /* \"#utility.yul\":1898:1899   */\n      0x00\n        /* \"#utility.yul\":1887:1896   */\n      dup4\n        /* \"#utility.yul\":1883:1900   */\n      add\n        /* \"#utility.yul\":1874:1880   */\n      dup5\n        /* \"#utility.yul\":1836:1901   */\n      tag_84\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1698:1908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2333   */\n    tag_69:\n        /* \"#utility.yul\":2080:2084   */\n      0x00\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2107:2116   */\n      dup3\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2095:2121   */\n      swap1\n      pop\n        /* \"#utility.yul\":2167:2176   */\n      dup2\n        /* \"#utility.yul\":2161:2165   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      sub\n        /* \"#utility.yul\":2153:2154   */\n      0x00\n        /* \"#utility.yul\":2142:2151   */\n      dup4\n        /* \"#utility.yul\":2138:2155   */\n      add\n        /* \"#utility.yul\":2131:2178   */\n      mstore\n        /* \"#utility.yul\":2195:2326   */\n      tag_104\n        /* \"#utility.yul\":2321:2325   */\n      dup2\n        /* \"#utility.yul\":2195:2326   */\n      tag_88\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2187:2326   */\n      swap1\n      pop\n        /* \"#utility.yul\":1914:2333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:2758   */\n    tag_38:\n        /* \"#utility.yul\":2505:2509   */\n      0x00\n        /* \"#utility.yul\":2543:2545   */\n      0x20\n        /* \"#utility.yul\":2532:2541   */\n      dup3\n        /* \"#utility.yul\":2528:2546   */\n      add\n        /* \"#utility.yul\":2520:2546   */\n      swap1\n      pop\n        /* \"#utility.yul\":2592:2601   */\n      dup2\n        /* \"#utility.yul\":2586:2590   */\n      dup2\n        /* \"#utility.yul\":2582:2602   */\n      sub\n        /* \"#utility.yul\":2578:2579   */\n      0x00\n        /* \"#utility.yul\":2567:2576   */\n      dup4\n        /* \"#utility.yul\":2563:2580   */\n      add\n        /* \"#utility.yul\":2556:2603   */\n      mstore\n        /* \"#utility.yul\":2620:2751   */\n      tag_106\n        /* \"#utility.yul\":2746:2750   */\n      dup2\n        /* \"#utility.yul\":2620:2751   */\n      tag_94\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2612:2751   */\n      swap1\n      pop\n        /* \"#utility.yul\":2339:2758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2845:3014   */\n    tag_91:\n        /* \"#utility.yul\":2929:2940   */\n      0x00\n        /* \"#utility.yul\":2963:2969   */\n      dup3\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2970   */\n      mstore\n        /* \"#utility.yul\":3003:3007   */\n      0x20\n        /* \"#utility.yul\":2998:3001   */\n      dup3\n        /* \"#utility.yul\":2994:3008   */\n      add\n        /* \"#utility.yul\":2979:3008   */\n      swap1\n      pop\n        /* \"#utility.yul\":2845:3014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3020:3116   */\n    tag_83:\n        /* \"#utility.yul\":3057:3064   */\n      0x00\n        /* \"#utility.yul\":3086:3110   */\n      tag_111\n        /* \"#utility.yul\":3104:3109   */\n      dup3\n        /* \"#utility.yul\":3086:3110   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3075:3110   */\n      swap1\n      pop\n        /* \"#utility.yul\":3020:3116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3122:3212   */\n    tag_87:\n        /* \"#utility.yul\":3156:3163   */\n      0x00\n        /* \"#utility.yul\":3199:3204   */\n      dup2\n        /* \"#utility.yul\":3192:3205   */\n      iszero\n        /* \"#utility.yul\":3185:3206   */\n      iszero\n        /* \"#utility.yul\":3174:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3122:3212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3218:3344   */\n    tag_112:\n        /* \"#utility.yul\":3255:3262   */\n      0x00\n        /* \"#utility.yul\":3295:3337   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3288:3293   */\n      dup3\n        /* \"#utility.yul\":3284:3338   */\n      and\n        /* \"#utility.yul\":3273:3338   */\n      swap1\n      pop\n        /* \"#utility.yul\":3218:3344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3590   */\n    tag_78:\n        /* \"#utility.yul\":3582:3583   */\n      0x00\n        /* \"#utility.yul\":3579:3580   */\n      dup1\n        /* \"#utility.yul\":3572:3584   */\n      revert\n        /* \"#utility.yul\":3596:3821   */\n    tag_93:\n        /* \"#utility.yul\":3736:3770   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3732:3733   */\n      0x00\n        /* \"#utility.yul\":3724:3730   */\n      dup3\n        /* \"#utility.yul\":3720:3734   */\n      add\n        /* \"#utility.yul\":3713:3771   */\n      mstore\n        /* \"#utility.yul\":3805:3813   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3800:3802   */\n      0x20\n        /* \"#utility.yul\":3792:3798   */\n      dup3\n        /* \"#utility.yul\":3788:3803   */\n      add\n        /* \"#utility.yul\":3781:3814   */\n      mstore\n        /* \"#utility.yul\":3596:3821   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3827:4009   */\n    tag_98:\n        /* \"#utility.yul\":3967:4001   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3963:3964   */\n      0x00\n        /* \"#utility.yul\":3955:3961   */\n      dup3\n        /* \"#utility.yul\":3951:3965   */\n      add\n        /* \"#utility.yul\":3944:4002   */\n      mstore\n        /* \"#utility.yul\":3827:4009   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4015:4137   */\n    tag_74:\n        /* \"#utility.yul\":4088:4112   */\n      tag_121\n        /* \"#utility.yul\":4106:4111   */\n      dup2\n        /* \"#utility.yul\":4088:4112   */\n      tag_83\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4081:4086   */\n      dup2\n        /* \"#utility.yul\":4078:4113   */\n      eq\n        /* \"#utility.yul\":4068:4131   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":4127:4128   */\n      0x00\n        /* \"#utility.yul\":4124:4125   */\n      dup1\n        /* \"#utility.yul\":4117:4129   */\n      revert\n        /* \"#utility.yul\":4068:4131   */\n    tag_122:\n        /* \"#utility.yul\":4015:4137   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122092c36792a7422790591fe212d82d631c6464f4a84b805cc5b09d6aded26dc9e764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_360": {
									"entryPoint": null,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 222,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060146101000a81548160ff02191690831515021790555034801561002a57600080fd5b50600061003b6100de60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100e6565b600033905090565b6107fa806100f56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638456cb591161005b5780638456cb59146100c85780638da5cb5b146100e65780638f32d59b14610104578063f2fde38b146101225761007d565b80633f4ba83a146100825780635c975abb146100a0578063715018a6146100be575b600080fd5b61008a61013e565b6040516100979190610686565b60405180910390f35b6100a86101ed565b6040516100b59190610686565b60405180910390f35b6100c6610200565b005b6100d0610305565b6040516100dd9190610686565b60405180910390f35b6100ee6103b6565b6040516100fb919061066b565b60405180910390f35b61010c6103df565b6040516101199190610686565b60405180910390f35b61013c600480360381019061013791906105da565b61043d565b005b60006101486103df565b610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017e906106c1565b60405180910390fd5b600060149054906101000a900460ff166101a057600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a16001905090565b600060149054906101000a900460ff1681565b6102086103df565b610247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023e906106c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061030f6103df565b61034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906106c1565b60405180910390fd5b600060149054906101000a900460ff161561036857600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a16001905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610421610490565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6104456103df565b610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906106c1565b60405180910390fd5b61048d81610498565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff906106a1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506105d4816107ad565b92915050565b6000602082840312156105f0576105ef610730565b5b60006105fe848285016105c5565b91505092915050565b610610816106f2565b82525050565b61061f81610704565b82525050565b60006106326026836106e1565b915061063d82610735565b604082019050919050565b60006106556020836106e1565b915061066082610784565b602082019050919050565b60006020820190506106806000830184610607565b92915050565b600060208201905061069b6000830184610616565b92915050565b600060208201905081810360008301526106ba81610625565b9050919050565b600060208201905081810360008301526106da81610648565b9050919050565b600082825260208201905092915050565b60006106fd82610710565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6107b6816106f2565b81146107c157600080fd5b5056fea264697066735822122092c36792a7422790591fe212d82d631c6464f4a84b805cc5b09d6aded26dc9e764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x3B PUSH2 0xDE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7FA DUP1 PUSH2 0xF5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x122 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x148 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x247 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x421 PUSH2 0x490 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48D DUP2 PUSH2 0x498 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FF SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D4 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5FE DUP5 DUP3 DUP6 ADD PUSH2 0x5C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x6F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x704 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 PUSH1 0x26 DUP4 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x63D DUP3 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 PUSH1 0x20 DUP4 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x660 DUP3 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x680 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6BA DUP2 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DA DUP2 PUSH2 0x648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD DUP3 PUSH2 0x710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0x6F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xC3 PUSH8 0x92A7422790591FE2 SLT 0xD8 0x2D PUSH4 0x1C6464F4 0xA8 0x4B DUP1 0x5C 0xC5 0xB0 SWAP14 PUSH11 0xDED26DC9E764736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "196:800:3:-:0;;;293:5;272:26;;;;;;;;;;;;;;;;;;;;196:800;;;;;;;;;;716:17:2;736:12;:10;;;:12;;:::i;:::-;716:32;;763:9;754:6;;:18;;;;;;;;;;;;;;;;;;816:9;783:43;;812:1;783:43;;;;;;;;;;;;710:121;196:800:3;;760:99:1;805:15;843:10;828:26;;760:99;:::o;196:800:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_312": {
									"entryPoint": 1168,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_453": {
									"entryPoint": 1176,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_392": {
									"entryPoint": 991,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_369": {
									"entryPoint": 950,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_506": {
									"entryPoint": 773,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_467": {
									"entryPoint": 493,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_414": {
									"entryPoint": 512,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_427": {
									"entryPoint": 1085,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_526": {
									"entryPoint": 318,
									"id": 526,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4140:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "7:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:9"
															},
															"nodeType": "YulIf",
															"src": "228:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:9",
														"type": ""
													}
												],
												"src": "152:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:9",
														"type": ""
													}
												],
												"src": "487:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "687:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "707:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "692:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "692:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "680:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "680:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "665:3:9",
														"type": ""
													}
												],
												"src": "611:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "948:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "953:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "889:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1054:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "965:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "965:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1067:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1078:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1067:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "860:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "868:3:9",
														"type": ""
													}
												],
												"src": "726:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1254:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1320:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1261:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1261:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1254:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1426:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1337:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1439:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1450:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1232:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1240:3:9",
														"type": ""
													}
												],
												"src": "1098:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1568:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1578:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1590:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1601:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1586:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1658:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1671:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1682:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1667:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1667:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1614:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1614:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1540:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1552:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1563:4:9",
														"type": ""
													}
												],
												"src": "1470:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1812:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1823:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1800:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1874:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1887:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1898:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1836:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1762:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1774:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1785:4:9",
														"type": ""
													}
												],
												"src": "1698:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2085:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2095:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2107:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2095:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2142:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2153:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2161:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2157:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2187:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2321:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2195:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2187:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2080:4:9",
														"type": ""
													}
												],
												"src": "1914:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2510:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2520:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2532:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2543:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2520:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2567:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2578:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2563:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2563:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2586:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2592:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2582:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2556:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2556:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2746:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2620:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2612:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2490:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2505:4:9",
														"type": ""
													}
												],
												"src": "2339:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2830:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2824:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2797:6:9",
														"type": ""
													}
												],
												"src": "2764:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2963:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2979:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2998:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3003:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2994:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2979:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2913:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2918:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2929:11:9",
														"type": ""
													}
												],
												"src": "2845:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3075:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3104:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3086:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3075:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3047:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3057:7:9",
														"type": ""
													}
												],
												"src": "3020:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3164:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3174:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3199:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3192:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3192:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3185:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3174:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3146:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3156:7:9",
														"type": ""
													}
												],
												"src": "3122:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3273:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3288:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3295:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3284:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3273:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3245:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3255:7:9",
														"type": ""
													}
												],
												"src": "3218:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3439:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3459:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3449:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3350:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3562:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3582:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3473:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3702:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3724:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3732:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3720:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3720:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3736:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3713:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3792:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3800:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3805:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3781:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3694:6:9",
														"type": ""
													}
												],
												"src": "3596:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3933:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3955:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3963:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3967:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3944:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3944:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3944:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3925:6:9",
														"type": ""
													}
												],
												"src": "3827:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4058:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4115:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4124:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4127:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4117:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4117:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4117:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4081:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4106:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4088:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4088:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4078:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4078:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4071:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4071:43:9"
															},
															"nodeType": "YulIf",
															"src": "4068:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4051:5:9",
														"type": ""
													}
												],
												"src": "4015:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638456cb591161005b5780638456cb59146100c85780638da5cb5b146100e65780638f32d59b14610104578063f2fde38b146101225761007d565b80633f4ba83a146100825780635c975abb146100a0578063715018a6146100be575b600080fd5b61008a61013e565b6040516100979190610686565b60405180910390f35b6100a86101ed565b6040516100b59190610686565b60405180910390f35b6100c6610200565b005b6100d0610305565b6040516100dd9190610686565b60405180910390f35b6100ee6103b6565b6040516100fb919061066b565b60405180910390f35b61010c6103df565b6040516101199190610686565b60405180910390f35b61013c600480360381019061013791906105da565b61043d565b005b60006101486103df565b610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017e906106c1565b60405180910390fd5b600060149054906101000a900460ff166101a057600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a16001905090565b600060149054906101000a900460ff1681565b6102086103df565b610247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023e906106c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061030f6103df565b61034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906106c1565b60405180910390fd5b600060149054906101000a900460ff161561036857600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a16001905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610421610490565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6104456103df565b610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906106c1565b60405180910390fd5b61048d81610498565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff906106a1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506105d4816107ad565b92915050565b6000602082840312156105f0576105ef610730565b5b60006105fe848285016105c5565b91505092915050565b610610816106f2565b82525050565b61061f81610704565b82525050565b60006106326026836106e1565b915061063d82610735565b604082019050919050565b60006106556020836106e1565b915061066082610784565b602082019050919050565b60006020820190506106806000830184610607565b92915050565b600060208201905061069b6000830184610616565b92915050565b600060208201905081810360008301526106ba81610625565b9050919050565b600060208201905081810360008301526106da81610648565b9050919050565b600082825260208201905092915050565b60006106fd82610710565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6107b6816106f2565b81146107c157600080fd5b5056fea264697066735822122092c36792a7422790591fe212d82d631c6464f4a84b805cc5b09d6aded26dc9e764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x122 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x148 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x247 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x421 PUSH2 0x490 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48D DUP2 PUSH2 0x498 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FF SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D4 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5FE DUP5 DUP3 DUP6 ADD PUSH2 0x5C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x6F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x704 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 PUSH1 0x26 DUP4 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x63D DUP3 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 PUSH1 0x20 DUP4 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x660 DUP3 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x680 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6BA DUP2 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DA DUP2 PUSH2 0x648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD DUP3 PUSH2 0x710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0x6F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xC3 PUSH8 0x92A7422790591FE2 SLT 0xD8 0x2D PUSH4 0x1C6464F4 0xA8 0x4B DUP1 0x5C 0xC5 0xB0 SWAP14 PUSH11 0xDED26DC9E764736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "196:800:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:124;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;272:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1630:127:2;;;:::i;:::-;;666:122:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;899:71:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1218:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1896:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;870:124:3;926:4;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;568:6:3::1;;;;;;;;;;;560:15;;;::::0;::::1;;947:5:::2;938:6:::0;::::2;:14;;;;;;;;;;;;;;;;;;963:9;;;;;;;;;;985:4;978:11;;870:124:::0;:::o;272:26::-;;;;;;;;;;;;;:::o;1630:127:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:1:::1;1687:40;;1708:6;::::0;::::1;;;;;;;;1687:40;;;;;;;;;;;;1750:1;1733:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1630:127::o:0;666:122:3:-;723:4;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;424:6:3::1;;;;;;;;;;;423:7;415:16;;;::::0;::::1;;744:4:::2;735:6;;:13;;;;;;;;;;;;;;;;;;759:7;;;;;;;;;;779:4;772:11;;666:122:::0;:::o;899:71:2:-;937:7;959:6;;;;;;;;;;;952:13;;899:71;:::o;1218:86::-;1258:4;1293:6;;;;;;;;;;;1277:22;;:12;:10;:12::i;:::-;:22;;;1270:29;;1218:86;:::o;1896:101::-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1964:28:::1;1983:8;1964:18;:28::i;:::-;1896:101:::0;:::o;760:99:1:-;805:15;843:10;828:26;;760:99;:::o;2090:211:2:-;2179:1;2159:22;;:8;:22;;;;2151:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:8;2235:38;;2256:6;;;;;;;;;;2235:38;;;;;;;;;;;;2288:8;2279:6;;:17;;;;;;;;;;;;;;;;;;2090:211;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:109::-;692:21;707:5;692:21;:::i;:::-;687:3;680:34;611:109;;:::o;726:366::-;868:3;889:67;953:2;948:3;889:67;:::i;:::-;882:74;;965:93;1054:3;965:93;:::i;:::-;1083:2;1078:3;1074:12;1067:19;;726:366;;;:::o;1098:::-;1240:3;1261:67;1325:2;1320:3;1261:67;:::i;:::-;1254:74;;1337:93;1426:3;1337:93;:::i;:::-;1455:2;1450:3;1446:12;1439:19;;1098:366;;;:::o;1470:222::-;1563:4;1601:2;1590:9;1586:18;1578:26;;1614:71;1682:1;1671:9;1667:17;1658:6;1614:71;:::i;:::-;1470:222;;;;:::o;1698:210::-;1785:4;1823:2;1812:9;1808:18;1800:26;;1836:65;1898:1;1887:9;1883:17;1874:6;1836:65;:::i;:::-;1698:210;;;;:::o;1914:419::-;2080:4;2118:2;2107:9;2103:18;2095:26;;2167:9;2161:4;2157:20;2153:1;2142:9;2138:17;2131:47;2195:131;2321:4;2195:131;:::i;:::-;2187:139;;1914:419;;;:::o;2339:::-;2505:4;2543:2;2532:9;2528:18;2520:26;;2592:9;2586:4;2582:20;2578:1;2567:9;2563:17;2556:47;2620:131;2746:4;2620:131;:::i;:::-;2612:139;;2339:419;;;:::o;2845:169::-;2929:11;2963:6;2958:3;2951:19;3003:4;2998:3;2994:14;2979:29;;2845:169;;;;:::o;3020:96::-;3057:7;3086:24;3104:5;3086:24;:::i;:::-;3075:35;;3020:96;;;:::o;3122:90::-;3156:7;3199:5;3192:13;3185:21;3174:32;;3122:90;;;:::o;3218:126::-;3255:7;3295:42;3288:5;3284:54;3273:65;;3218:126;;;:::o;3473:117::-;3582:1;3579;3572:12;3596:225;3736:34;3732:1;3724:6;3720:14;3713:58;3805:8;3800:2;3792:6;3788:15;3781:33;3596:225;:::o;3827:182::-;3967:34;3963:1;3955:6;3951:14;3944:58;3827:182;:::o;4015:122::-;4088:24;4106:5;4088:24;:::i;:::-;4081:5;4078:35;4068:63;;4127:1;4124;4117:12;4068:63;4015:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "408400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isOwner()": "2575",
								"owner()": "2544",
								"pause()": "29883",
								"paused()": "2544",
								"renounceOwnership()": "30374",
								"transferOwnership(address)": "30773",
								"unpause()": "29881"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 716,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 772,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 816,
									"end": 825,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 812,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 710,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 760,
									"end": 859,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 805,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 853,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 196,
									"end": 996,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 996,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092c36792a7422790591fe212d82d631c6464f4a84b805cc5b09d6aded26dc9e764736f6c63430008070033",
									".code": [
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "8456CB59"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "8456CB59"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "8F32D59B"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "3F4BA83A"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "5C975ABB"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 926,
											"end": 930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 989,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 978,
											"end": 989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 423,
											"end": 430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 744,
											"end": 748,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 735,
											"end": 748,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 735,
											"end": 748,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 735,
											"end": 748,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 779,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 772,
											"end": 783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 772,
											"end": 783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1983,
											"end": 1991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 853,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 687,
											"end": 690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 680,
											"end": 714,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 948,
											"end": 951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 889,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 882,
											"end": 956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1426,
											"end": 1429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1692,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1470,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1614,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1614,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1614,
											"end": 1685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1614,
											"end": 1685,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1692,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1692,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2333,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1914,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2195,
											"end": 2326,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2195,
											"end": 2326,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2195,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 2333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 2333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 2333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 2333,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 2758,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2339,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2601,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 2590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2602,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2620,
											"end": 2751,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2620,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2620,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2758,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2969,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2970,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3003,
											"end": 3007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3020,
											"end": 3116,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3020,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3064,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3116,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3212,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 3122,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3204,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3192,
											"end": 3205,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3206,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3212,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3212,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3212,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3218,
											"end": 3344,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3218,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3338,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3344,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3473,
											"end": 3590,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3473,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3580,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3821,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3596,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3770,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3732,
											"end": 3733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3713,
											"end": 3771,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3800,
											"end": 3802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3781,
											"end": 3814,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3821,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3827,
											"end": 4009,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3827,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 4001,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3944,
											"end": 4002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3827,
											"end": 4009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3827,
											"end": 4009,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4015,
											"end": 4137,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4015,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4088,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4106,
											"end": 4111,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4088,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4088,
											"end": 4112,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4088,
											"end": 4112,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4088,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4113,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4068,
											"end": 4131,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4125,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4129,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4131,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4068,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4015,
											"end": 4137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4015,
											"end": 4137,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base contract which allows children to implement an emergency stop mechanism.\",\"kind\":\"dev\",\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPPausable.sol\":\"BEPPausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]},\"BEPPausable.sol\":{\"keccak256\":\"0xdc7bd108ed2ea05955015cff10f6113eb1db5259f7405f36476821173a2d7bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a491c43afcfa989c9425444a4a62c8e29f09578e8374423f8873453adc4f77\",\"dweb:/ipfs/QmS3p82uSwtSazrM7qSqWv7pqWt1t9mLyyuX2G97JF8uxa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "BEPPausable.sol:BEPPausable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 467,
								"contract": "BEPPausable.sol:BEPPausable",
								"label": "paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3e155bd6a1e1f2d4af3e7f7650a310f21d2fea4565fd77e8f49009f3c9fc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://051c68ec851c18ef923f2a193f4523fec959a029939ef5b39f65ea7402bb5767\",\"dweb:/ipfs/QmehiN2F7CwuJZZvsxtS6uDyQKxfuXKPb8GacNxtVHPHXK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"marketplace.sol": {
				"marketplace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_LiquidPool",
									"type": "address"
								}
							],
							"name": "changeLiquidPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_MinBnB",
									"type": "uint256"
								}
							],
							"name": "changeMinBnB",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_ShoseNFTContract",
									"type": "address"
								}
							],
							"name": "changeShoseNFTContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_Treasury",
									"type": "address"
								}
							],
							"name": "changeTreasury",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_VIMContract",
									"type": "address"
								}
							],
							"name": "changeVIMContract",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "CancelSellVicShose",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LiquidPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MinBnB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "SellVicShose",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ShoseNFTContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VIMContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNBContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "checkShoseTranfer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMINPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSellingShose",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_tokenID",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_Price",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LiquidPool",
									"type": "address"
								}
							],
							"name": "setLiquidPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_MinBnB",
									"type": "uint256"
								}
							],
							"name": "setMinBNB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ShoseNFTContract",
									"type": "address"
								}
							],
							"name": "setShoseNFTContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_VIMContract",
									"type": "address"
								}
							],
							"name": "setVIMContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferVicShose",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"marketplace.sol\":229:4315  contract marketplace is BEPPausable {... */\n  mstore(0x40, 0x80)\n    /* \"BEPPausable.sol\":293:298  false */\n  0x00\n    /* \"BEPPausable.sol\":272:298  bool public paused = false */\n  dup1\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":854:1228  constructor() { ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"BEPOwnable.sol\":716:733  address msgSender */\n  0x00\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  tag_7\n    /* \"BEPOwnable.sol\":736:746  _msgSender */\n  shl(0x20, tag_8)\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"BEPOwnable.sol\":716:748  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEPOwnable.sol\":763:772  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":754:760  _owner */\n  0x00\n  dup1\n    /* \"BEPOwnable.sol\":754:772  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEPOwnable.sol\":816:825  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEPOwnable.sol\":812:813  0 */\n  0x00\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEPOwnable.sol\":710:831  {... */\n  pop\n    /* \"marketplace.sol\":890:932  0xcb3745379275252F4beB5d1094bF1a8A09F368b7 */\n  0xcb3745379275252f4beb5d1094bf1a8a09f368b7\n    /* \"marketplace.sol\":879:887  Treasury */\n  0x01\n  0x00\n    /* \"marketplace.sol\":879:932  Treasury = 0xcb3745379275252F4beB5d1094bF1a8A09F368b7 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":955:997  0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83 */\n  0xd295cf5d859b9ed331cdf69c49a81eff5e1bee83\n    /* \"marketplace.sol\":942:952  LiquidPool */\n  0x02\n  0x00\n    /* \"marketplace.sol\":942:997  LiquidPool = 0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":1026:1068  0xC184af52Ca4E1B1f085aA8236Ff8508F52dc6eA7 */\n  0xc184af52ca4e1b1f085aa8236ff8508f52dc6ea7\n    /* \"marketplace.sol\":1007:1023  ShoseNFTContract */\n  0x03\n  0x00\n    /* \"marketplace.sol\":1007:1068  ShoseNFTContract = 0xC184af52Ca4E1B1f085aA8236Ff8508F52dc6eA7 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":1092:1134  0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30 */\n  0x5bcd91c734d665fe426a5d7156f2ad7d37b76e30\n    /* \"marketplace.sol\":1078:1089  VIMContract */\n  0x04\n  0x00\n    /* \"marketplace.sol\":1078:1134  VIMContract = 0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":1159:1201  0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n  0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\n    /* \"marketplace.sol\":1144:1156  WBNBContract */\n  0x05\n  0x00\n    /* \"marketplace.sol\":1144:1201  WBNBContract = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":1220:1221  6 */\n  0x06\n    /* \"marketplace.sol\":1211:1217  MinBnB */\n  dup1\n    /* \"marketplace.sol\":1211:1221  MinBnB = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"marketplace.sol\":229:4315  contract marketplace is BEPPausable {... */\n  jump(tag_10)\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"BEPContext.sol\":805:820  address payable */\n  0x00\n    /* \"BEPContext.sol\":843:853  msg.sender */\n  caller\n    /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"marketplace.sol\":229:4315  contract marketplace is BEPPausable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"marketplace.sol\":229:4315  contract marketplace is BEPPausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xbcfcba76\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xbcfcba76\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd8882779\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xde281e28\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xea156f44\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x99bc1bfb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa888a93a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb5620229\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x563df32f\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x563df32f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x59464217\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c9e0d10\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x83d58215\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x0ff32839\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ecff38e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36c3b4e2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x458a635a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4dd79f10\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"marketplace.sol\":401:428  address public WBNBContract */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":1718:1871  function setVIMContract(address _VIMContract) external onlyOwner {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"marketplace.sol\":301:326  address public LiquidPool */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPPausable.sol\":870:994  function unpause() public onlyOwner whenPaused returns (bool) {... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":1529:1712  function setShoseNFTContract(address _ShoseNFTContract) external onlyOwner {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"marketplace.sol\":3466:3920  function CancelSellVicShose(uint256 tokenId) external whenNotPaused {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"marketplace.sol\":272:295  address public Treasury */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":2843:2970  function checkShoseTranfer(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPPausable.sol\":272:298  bool public paused = false */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":2355:2838  function transferVicShose(address to,uint256 tokenId) external whenNotPaused {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"marketplace.sol\":2976:3460  function SellVicShose(uint256 tokenId,uint256 price) external whenNotPaused {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"BEPPausable.sol\":666:788  function pause() public onlyOwner whenNotPaused returns (bool) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":3926:4313  function getSellingShose() external view returns (uint256[] memory _tokenID, uint256[] memory _Price) {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":1376:1523  function setLiquidPool(address _LiquidPool) external onlyOwner {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"marketplace.sol\":369:395  address public VIMContract */\n    tag_20:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":434:455  uint256 public MinBnB */\n    tag_21:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":332:363  address public ShoseNFTContract */\n    tag_22:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":1877:2001  function setMinBNB(uint256  _MinBnB) external onlyOwner {... */\n    tag_23:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"marketplace.sol\":2008:2349  function getMINPrice() public view virtual returns (uint256) {... */\n    tag_24:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"marketplace.sol\":1234:1369  function setTreasury(address _Treasury) external onlyOwner {... */\n    tag_25:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_26:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"marketplace.sol\":401:428  address public WBNBContract */\n    tag_31:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"marketplace.sol\":1718:1871  function setVIMContract(address _VIMContract) external onlyOwner {... */\n    tag_37:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_111\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_111:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"marketplace.sol\":1807:1819  _VIMContract */\n      dup1\n        /* \"marketplace.sol\":1793:1804  VIMContract */\n      0x04\n      0x00\n        /* \"marketplace.sol\":1793:1819  VIMContract = _VIMContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":1834:1864  changeVIMContract(VIMContract) */\n      0x136742181ff5fc7d13f647a125112ec36500105a024ce2dbbb7f28fa375eebfa\n        /* \"marketplace.sol\":1852:1863  VIMContract */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":1834:1864  changeVIMContract(VIMContract) */\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"marketplace.sol\":1718:1871  function setVIMContract(address _VIMContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"marketplace.sol\":301:326  address public LiquidPool */\n    tag_39:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BEPPausable.sol\":870:994  function unpause() public onlyOwner whenPaused returns (bool) {... */\n    tag_42:\n        /* \"BEPPausable.sol\":926:930  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_118\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_118:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_114\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"BEPPausable.sol\":568:574  paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEPPausable.sol\":560:575  require(paused) */\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n        /* \"BEPPausable.sol\":947:952  false */\n      0x00\n        /* \"BEPPausable.sol\":938:944  paused */\n      dup1\n      0x14\n        /* \"BEPPausable.sol\":938:952  paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPPausable.sol\":963:972  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BEPPausable.sol\":985:989  true */\n      0x01\n        /* \"BEPPausable.sol\":978:989  return true */\n      swap1\n      pop\n        /* \"BEPPausable.sol\":870:994  function unpause() public onlyOwner whenPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"marketplace.sol\":1529:1712  function setShoseNFTContract(address _ShoseNFTContract) external onlyOwner {... */\n    tag_47:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_125\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_125:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_114\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"marketplace.sol\":1633:1650  _ShoseNFTContract */\n      dup1\n        /* \"marketplace.sol\":1614:1630  ShoseNFTContract */\n      0x03\n      0x00\n        /* \"marketplace.sol\":1614:1650  ShoseNFTContract = _ShoseNFTContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":1665:1705  changeShoseNFTContract(ShoseNFTContract) */\n      0xb01e01d90e1da4079495db07c84276ef34a0ea39cd9be9c3844874eb35616e44\n        /* \"marketplace.sol\":1688:1704  ShoseNFTContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":1665:1705  changeShoseNFTContract(ShoseNFTContract) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"marketplace.sol\":1529:1712  function setShoseNFTContract(address _ShoseNFTContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"marketplace.sol\":3466:3920  function CancelSellVicShose(uint256 tokenId) external whenNotPaused {... */\n    tag_51:\n        /* \"BEPPausable.sol\":424:430  paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEPPausable.sol\":423:430  !paused */\n      iszero\n        /* \"BEPPausable.sol\":415:431  require(!paused) */\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n        /* \"marketplace.sol\":3544:3558  address seller */\n      0x00\n        /* \"marketplace.sol\":3561:3571  msg.sender */\n      caller\n        /* \"marketplace.sol\":3544:3571  address seller = msg.sender */\n      swap1\n      pop\n        /* \"marketplace.sol\":3645:3651  seller */\n      dup1\n        /* \"marketplace.sol\":3589:3651  IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":3607:3623  ShoseNFTContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":3589:3632  IERC721Enumerable(ShoseNFTContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"marketplace.sol\":3633:3640  tokenId */\n      dup5\n        /* \"marketplace.sol\":3589:3641  IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"marketplace.sol\":3589:3651  IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"marketplace.sol\":3581:3684  require(IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller,\"seller need have this tokenid\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"marketplace.sol\":3701:3711  shoseShell */\n      0x08\n        /* \"marketplace.sol\":3701:3720  shoseShell[tokenId] */\n      0x00\n        /* \"marketplace.sol\":3712:3719  tokenId */\n      dup4\n        /* \"marketplace.sol\":3701:3720  shoseShell[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"marketplace.sol\":3694:3720  delete shoseShell[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"marketplace.sol\":3734:3743  uint256 i */\n      0x00\n        /* \"marketplace.sol\":3730:3914  for(uint256 i = 0; i < allTokensSell.length; i++){... */\n    tag_142:\n        /* \"marketplace.sol\":3753:3766  allTokensSell */\n      0x09\n        /* \"marketplace.sol\":3753:3773  allTokensSell.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"marketplace.sol\":3749:3750  i */\n      dup2\n        /* \"marketplace.sol\":3749:3773  i < allTokensSell.length */\n      lt\n        /* \"marketplace.sol\":3730:3914  for(uint256 i = 0; i < allTokensSell.length; i++){... */\n      iszero\n      tag_143\n      jumpi\n        /* \"marketplace.sol\":3816:3823  tokenId */\n      dup3\n        /* \"marketplace.sol\":3796:3809  allTokensSell */\n      0x09\n        /* \"marketplace.sol\":3810:3811  i */\n      dup3\n        /* \"marketplace.sol\":3796:3812  allTokensSell[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n    tag_145:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"marketplace.sol\":3796:3823  allTokensSell[i] == tokenId */\n      eq\n        /* \"marketplace.sol\":3793:3904  if(allTokensSell[i] == tokenId){... */\n      iszero\n      tag_149\n      jumpi\n        /* \"marketplace.sol\":3849:3862  allTokensSell */\n      0x09\n        /* \"marketplace.sol\":3863:3864  i */\n      dup2\n        /* \"marketplace.sol\":3849:3865  allTokensSell[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_150\n      jumpi\n      tag_151\n      tag_147\n      jump\t// in\n    tag_151:\n    tag_150:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"marketplace.sol\":3842:3865  delete allTokensSell[i] */\n      0x00\n      swap1\n      sstore\n        /* \"marketplace.sol\":3883:3890  return; */\n      pop\n      pop\n      jump(tag_132)\n        /* \"marketplace.sol\":3793:3904  if(allTokensSell[i] == tokenId){... */\n    tag_149:\n        /* \"marketplace.sol\":3775:3778  i++ */\n      dup1\n      dup1\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      swap2\n      pop\n      pop\n        /* \"marketplace.sol\":3730:3914  for(uint256 i = 0; i < allTokensSell.length; i++){... */\n      jump(tag_142)\n    tag_143:\n      pop\n        /* \"marketplace.sol\":3534:3920  {... */\n      pop\n        /* \"BEPPausable.sol\":437:438  _ */\n    tag_132:\n        /* \"marketplace.sol\":3466:3920  function CancelSellVicShose(uint256 tokenId) external whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"marketplace.sol\":272:295  address public Treasury */\n    tag_53:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"marketplace.sol\":2843:2970  function checkShoseTranfer(uint256 tokenId) public view virtual returns (address) {... */\n    tag_57:\n        /* \"marketplace.sol\":2916:2923  address */\n      0x00\n        /* \"marketplace.sol\":2942:2954  shoseTranfer */\n      0x07\n        /* \"marketplace.sol\":2942:2963  shoseTranfer[tokenId] */\n      0x00\n        /* \"marketplace.sol\":2955:2962  tokenId */\n      dup4\n        /* \"marketplace.sol\":2942:2963  shoseTranfer[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2935:2963  return shoseTranfer[tokenId] */\n      swap1\n      pop\n        /* \"marketplace.sol\":2843:2970  function checkShoseTranfer(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEPPausable.sol\":272:298  bool public paused = false */\n    tag_60:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"marketplace.sol\":2355:2838  function transferVicShose(address to,uint256 tokenId) external whenNotPaused {... */\n    tag_65:\n        /* \"BEPPausable.sol\":424:430  paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEPPausable.sol\":423:430  !paused */\n      iszero\n        /* \"BEPPausable.sol\":415:431  require(!paused) */\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n        /* \"marketplace.sol\":2442:2454  address from */\n      0x00\n        /* \"marketplace.sol\":2457:2467  msg.sender */\n      caller\n        /* \"marketplace.sol\":2442:2467  address from = msg.sender */\n      swap1\n      pop\n        /* \"marketplace.sol\":2503:2519  ShoseNFTContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2485:2537  IERC721Enumerable(ShoseNFTContract).isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"marketplace.sol\":2538:2542  from */\n      dup3\n        /* \"marketplace.sol\":2551:2555  this */\n      address\n        /* \"marketplace.sol\":2485:2557  IERC721Enumerable(ShoseNFTContract).isApprovedForAll(from,address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"marketplace.sol\":2477:2601  require(IERC721Enumerable(ShoseNFTContract).isApprovedForAll(from,address(this)),\"You need Approve For All to this contact\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"marketplace.sol\":2633:2634  0 */\n      0x00\n        /* \"marketplace.sol\":2619:2635  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2619:2621  to */\n      dup4\n        /* \"marketplace.sol\":2619:2635  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"marketplace.sol\":2611:2659  require(to != address(0),\"Address can not zero\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"marketplace.sol\":2683:2687  from */\n      dup1\n        /* \"marketplace.sol\":2677:2687  to != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2677:2679  to */\n      dup4\n        /* \"marketplace.sol\":2677:2687  to != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"marketplace.sol\":2669:2715  require(to != from,\"From and To can not same\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"marketplace.sol\":2743:2759  ShoseNFTContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2725:2777  IERC721Enumerable(ShoseNFTContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"marketplace.sol\":2778:2782  from */\n      dup3\n        /* \"marketplace.sol\":2784:2786  to */\n      dup6\n        /* \"marketplace.sol\":2787:2794  tokenId */\n      dup6\n        /* \"marketplace.sol\":2725:2795  IERC721Enumerable(ShoseNFTContract).safeTransferFrom(from, to,tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n        /* \"marketplace.sol\":2829:2831  to */\n      dup3\n        /* \"marketplace.sol\":2805:2817  shoseTranfer */\n      0x07\n        /* \"marketplace.sol\":2805:2826  shoseTranfer[tokenId] */\n      0x00\n        /* \"marketplace.sol\":2818:2825  tokenId */\n      dup5\n        /* \"marketplace.sol\":2805:2826  shoseTranfer[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"marketplace.sol\":2805:2831  shoseTranfer[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":2432:2838  {... */\n      pop\n        /* \"marketplace.sol\":2355:2838  function transferVicShose(address to,uint256 tokenId) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_67:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_181\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_181:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_114\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"BEPOwnable.sol\":1724:1725  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1708:1714  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":1750:1751  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1733:1739  _owner */\n      dup1\n      0x00\n        /* \"BEPOwnable.sol\":1733:1752  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"marketplace.sol\":2976:3460  function SellVicShose(uint256 tokenId,uint256 price) external whenNotPaused {... */\n    tag_71:\n        /* \"BEPPausable.sol\":424:430  paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEPPausable.sol\":423:430  !paused */\n      iszero\n        /* \"BEPPausable.sol\":415:431  require(!paused) */\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n        /* \"marketplace.sol\":3062:3076  address seller */\n      0x00\n        /* \"marketplace.sol\":3079:3089  msg.sender */\n      caller\n        /* \"marketplace.sol\":3062:3089  address seller = msg.sender */\n      swap1\n      pop\n        /* \"marketplace.sol\":3163:3169  seller */\n      dup1\n        /* \"marketplace.sol\":3107:3169  IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":3125:3141  ShoseNFTContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":3107:3150  IERC721Enumerable(ShoseNFTContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"marketplace.sol\":3151:3158  tokenId */\n      dup6\n        /* \"marketplace.sol\":3107:3159  IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_192:\n        /* \"marketplace.sol\":3107:3169  IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"marketplace.sol\":3099:3202  require(IERC721Enumerable(ShoseNFTContract).ownerOf(tokenId) == seller,\"seller need have this tokenid\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_141\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"marketplace.sol\":3238:3254  ShoseNFTContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":3220:3272  IERC721Enumerable(ShoseNFTContract).isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"marketplace.sol\":3273:3279  seller */\n      dup3\n        /* \"marketplace.sol\":3288:3292  this */\n      address\n        /* \"marketplace.sol\":3220:3294  IERC721Enumerable(ShoseNFTContract).isApprovedForAll(seller,address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_199:\n        /* \"marketplace.sol\":3212:3338  require(IERC721Enumerable(ShoseNFTContract).isApprovedForAll(seller,address(this)),\"You need Approve For All to this contact\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_168\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"marketplace.sol\":3364:3365  0 */\n      0x00\n        /* \"marketplace.sol\":3356:3361  price */\n      dup3\n        /* \"marketplace.sol\":3356:3365  price > 0 */\n      gt\n        /* \"marketplace.sol\":3348:3379  require(price > 0, \"Price > 0\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"marketplace.sol\":3411:3416  price */\n      dup2\n        /* \"marketplace.sol\":3389:3399  shoseShell */\n      0x08\n        /* \"marketplace.sol\":3389:3408  shoseShell[tokenId] */\n      0x00\n        /* \"marketplace.sol\":3400:3407  tokenId */\n      dup6\n        /* \"marketplace.sol\":3389:3408  shoseShell[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"marketplace.sol\":3389:3416  shoseShell[tokenId] = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":3426:3439  allTokensSell */\n      0x09\n        /* \"marketplace.sol\":3445:3452  tokenId */\n      dup4\n        /* \"marketplace.sol\":3426:3453  allTokensSell.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"marketplace.sol\":3052:3460  {... */\n      pop\n        /* \"marketplace.sol\":2976:3460  function SellVicShose(uint256 tokenId,uint256 price) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BEPPausable.sol\":666:788  function pause() public onlyOwner whenNotPaused returns (bool) {... */\n    tag_73:\n        /* \"BEPPausable.sol\":723:727  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_207\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_207:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_114\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"BEPPausable.sol\":424:430  paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEPPausable.sol\":423:430  !paused */\n      iszero\n        /* \"BEPPausable.sol\":415:431  require(!paused) */\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n        /* \"BEPPausable.sol\":744:748  true */\n      0x01\n        /* \"BEPPausable.sol\":735:741  paused */\n      0x00\n      0x14\n        /* \"BEPPausable.sol\":735:748  paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPPausable.sol\":759:766  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BEPPausable.sol\":779:783  true */\n      0x01\n        /* \"BEPPausable.sol\":772:783  return true */\n      swap1\n      pop\n        /* \"BEPPausable.sol\":666:788  function pause() public onlyOwner whenNotPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_76:\n        /* \"BEPOwnable.sol\":937:944  address */\n      0x00\n        /* \"BEPOwnable.sol\":959:965  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":952:965  return _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_79:\n        /* \"BEPOwnable.sol\":1258:1262  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1293:1299  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      tag_215\n        /* \"BEPOwnable.sol\":1277:1287  _msgSender */\n      tag_216\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEPOwnable.sol\":1270:1299  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"marketplace.sol\":3926:4313  function getSellingShose() external view returns (uint256[] memory _tokenID, uint256[] memory _Price) {... */\n    tag_82:\n        /* \"marketplace.sol\":3976:4001  uint256[] memory _tokenID */\n      0x60\n        /* \"marketplace.sol\":4003:4026  uint256[] memory _Price */\n      dup1\n        /* \"marketplace.sol\":4038:4061  uint256 shoseShellCount */\n      0x00\n        /* \"marketplace.sol\":4064:4077  allTokensSell */\n      0x09\n        /* \"marketplace.sol\":4064:4084  allTokensSell.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"marketplace.sol\":4038:4084  uint256 shoseShellCount = allTokensSell.length */\n      swap1\n      pop\n        /* \"marketplace.sol\":4094:4116  uint256[] memory Price */\n      0x00\n        /* \"marketplace.sol\":4133:4148  shoseShellCount */\n      dup2\n        /* \"marketplace.sol\":4119:4149  new uint256[](shoseShellCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_218\n      jumpi\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n    tag_218:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_221\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_221:\n      pop\n        /* \"marketplace.sol\":4094:4149  uint256[] memory Price = new uint256[](shoseShellCount) */\n      swap1\n      pop\n        /* \"marketplace.sol\":4164:4173  uint256 i */\n      0x00\n        /* \"marketplace.sol\":4159:4269  for (uint256 i = 0; i < shoseShellCount; i++) {... */\n    tag_222:\n        /* \"marketplace.sol\":4183:4198  shoseShellCount */\n      dup3\n        /* \"marketplace.sol\":4179:4180  i */\n      dup2\n        /* \"marketplace.sol\":4179:4198  i < shoseShellCount */\n      lt\n        /* \"marketplace.sol\":4159:4269  for (uint256 i = 0; i < shoseShellCount; i++) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"marketplace.sol\":4230:4240  shoseShell */\n      0x08\n        /* \"marketplace.sol\":4230:4258  shoseShell[allTokensSell[i]] */\n      0x00\n        /* \"marketplace.sol\":4241:4254  allTokensSell */\n      0x09\n        /* \"marketplace.sol\":4255:4256  i */\n      dup4\n        /* \"marketplace.sol\":4241:4257  allTokensSell[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_226\n      tag_147\n      jump\t// in\n    tag_226:\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"marketplace.sol\":4230:4258  shoseShell[allTokensSell[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"marketplace.sol\":4219:4224  Price */\n      dup3\n        /* \"marketplace.sol\":4225:4226  i */\n      dup3\n        /* \"marketplace.sol\":4219:4227  Price[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_229\n      tag_147\n      jump\t// in\n    tag_229:\n    tag_228:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"marketplace.sol\":4219:4258  Price[i] = shoseShell[allTokensSell[i]] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"marketplace.sol\":4200:4203  i++ */\n      dup1\n      dup1\n      tag_230\n      swap1\n      tag_154\n      jump\t// in\n    tag_230:\n      swap2\n      pop\n      pop\n        /* \"marketplace.sol\":4159:4269  for (uint256 i = 0; i < shoseShellCount; i++) {... */\n      jump(tag_222)\n    tag_223:\n      pop\n        /* \"marketplace.sol\":4286:4299  allTokensSell */\n      0x09\n        /* \"marketplace.sol\":4300:4305  Price */\n      dup2\n        /* \"marketplace.sol\":4278:4306  return (allTokensSell,Price) */\n      dup2\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_232:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_232\n      jumpi\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"marketplace.sol\":3926:4313  function getSellingShose() external view returns (uint256[] memory _tokenID, uint256[] memory _Price) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"marketplace.sol\":1376:1523  function setLiquidPool(address _LiquidPool) external onlyOwner {... */\n    tag_87:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_234\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_234:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_114\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"marketplace.sol\":1462:1473  _LiquidPool */\n      dup1\n        /* \"marketplace.sol\":1449:1459  LiquidPool */\n      0x02\n      0x00\n        /* \"marketplace.sol\":1449:1473  LiquidPool = _LiquidPool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":1488:1516  changeLiquidPool(LiquidPool) */\n      0xacdd85d235b5b49226c2c4f2b72cb01fa1cc3ae64bb843a6def27788d05b1b60\n        /* \"marketplace.sol\":1505:1515  LiquidPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":1488:1516  changeLiquidPool(LiquidPool) */\n      mload(0x40)\n      tag_238\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"marketplace.sol\":1376:1523  function setLiquidPool(address _LiquidPool) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"marketplace.sol\":369:395  address public VIMContract */\n    tag_89:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"marketplace.sol\":434:455  uint256 public MinBnB */\n    tag_92:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"marketplace.sol\":332:363  address public ShoseNFTContract */\n    tag_96:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"marketplace.sol\":1877:2001  function setMinBNB(uint256  _MinBnB) external onlyOwner {... */\n    tag_100:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_240\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_240:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_114\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"marketplace.sol\":1952:1959  _MinBnB */\n      dup1\n        /* \"marketplace.sol\":1943:1949  MinBnB */\n      0x06\n        /* \"marketplace.sol\":1943:1959  MinBnB = _MinBnB */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":1974:1994  changeMinBnB(MinBnB) */\n      0x4d8e30ff458bebdd848488669e63d632954487ca1bc64c28f3c920f74a5f8594\n        /* \"marketplace.sol\":1987:1993  MinBnB */\n      sload(0x06)\n        /* \"marketplace.sol\":1974:1994  changeMinBnB(MinBnB) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"marketplace.sol\":1877:2001  function setMinBNB(uint256  _MinBnB) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"marketplace.sol\":2008:2349  function getMINPrice() public view virtual returns (uint256) {... */\n    tag_102:\n        /* \"marketplace.sol\":2060:2067  uint256 */\n      0x00\n        /* \"marketplace.sol\":2079:2098  uint256 wbnbbalance */\n      dup1\n        /* \"marketplace.sol\":2108:2120  WBNBContract */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2101:2131  IBEP20(WBNBContract).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"marketplace.sol\":2132:2142  LiquidPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2101:2143  IBEP20(WBNBContract).balanceOf(LiquidPool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_246:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"marketplace.sol\":2079:2143  uint256 wbnbbalance = IBEP20(WBNBContract).balanceOf(LiquidPool) */\n      swap1\n      pop\n        /* \"marketplace.sol\":2153:2171  uint256 vimbalance */\n      0x00\n        /* \"marketplace.sol\":2181:2192  VIMContract */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2174:2203  IBEP20(VIMContract).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"marketplace.sol\":2204:2214  LiquidPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":2174:2215  IBEP20(VIMContract).balanceOf(LiquidPool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_252:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_256:\n        /* \"marketplace.sol\":2153:2215  uint256 vimbalance = IBEP20(VIMContract).balanceOf(LiquidPool) */\n      swap1\n      pop\n        /* \"marketplace.sol\":2225:2241  uint256 bnbprice */\n      0x00\n        /* \"marketplace.sol\":2255:2266  wbnbbalance */\n      dup3\n        /* \"marketplace.sol\":2244:2254  vimbalance */\n      dup3\n        /* \"marketplace.sol\":2244:2266  vimbalance/wbnbbalance */\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"marketplace.sol\":2225:2266  uint256 bnbprice = vimbalance/wbnbbalance */\n      swap1\n      pop\n        /* \"marketplace.sol\":2276:2292  uint256 minprice */\n      0x00\n        /* \"marketplace.sol\":2315:2317  10 */\n      0x0a\n        /* \"marketplace.sol\":2306:2312  MinBnB */\n      sload(0x06)\n        /* \"marketplace.sol\":2295:2303  bnbprice */\n      dup4\n        /* \"marketplace.sol\":2295:2312  bnbprice * MinBnB */\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"marketplace.sol\":2295:2317  bnbprice * MinBnB / 10 */\n      tag_261\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_261:\n        /* \"marketplace.sol\":2276:2317  uint256 minprice = bnbprice * MinBnB / 10 */\n      swap1\n      pop\n        /* \"marketplace.sol\":2334:2342  minprice */\n      dup1\n        /* \"marketplace.sol\":2327:2342  return minprice */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"marketplace.sol\":2008:2349  function getMINPrice() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"marketplace.sol\":1234:1369  function setTreasury(address _Treasury) external onlyOwner {... */\n    tag_106:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_263\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_263:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_114\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"marketplace.sol\":1314:1323  _Treasury */\n      dup1\n        /* \"marketplace.sol\":1303:1311  Treasury */\n      0x01\n      0x00\n        /* \"marketplace.sol\":1303:1323  Treasury = _Treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"marketplace.sol\":1338:1362  changeTreasury(Treasury) */\n      0xb14f2a39bb21fda32827bbdb4be629c94036e10a3f6055a6454f884ca1b33fa1\n        /* \"marketplace.sol\":1353:1361  Treasury */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"marketplace.sol\":1338:1362  changeTreasury(Treasury) */\n      mload(0x40)\n      tag_267\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"marketplace.sol\":1234:1369  function setTreasury(address _Treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_109:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_269\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_79\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_269:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_114\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      tag_273\n        /* \"BEPOwnable.sol\":1983:1991  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":1964:1982  _transferOwnership */\n      tag_274\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_273:\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n    tag_216:\n        /* \"BEPContext.sol\":805:820  address payable */\n      0x00\n        /* \"BEPContext.sol\":843:853  msg.sender */\n      caller\n        /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n    tag_274:\n        /* \"BEPOwnable.sol\":2179:2180  0 */\n      0x00\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2159:2167  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEPOwnable.sol\":2151:2224  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"BEPOwnable.sol\":2264:2272  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2256:2262  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":2288:2296  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2279:2285  _owner */\n      0x00\n      dup1\n        /* \"BEPOwnable.sol\":2279:2296  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_281:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_283\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_285:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_287\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_284\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":301:438   */\n    tag_288:\n        /* \"#utility.yul\":355:360   */\n      0x00\n        /* \"#utility.yul\":386:392   */\n      dup2\n        /* \"#utility.yul\":380:393   */\n      mload\n        /* \"#utility.yul\":371:393   */\n      swap1\n      pop\n        /* \"#utility.yul\":402:432   */\n      tag_290\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":402:432   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":301:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:583   */\n    tag_292:\n        /* \"#utility.yul\":490:495   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":515:535   */\n      calldataload\n        /* \"#utility.yul\":506:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_294\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":444:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:732   */\n    tag_296:\n        /* \"#utility.yul\":646:651   */\n      0x00\n        /* \"#utility.yul\":677:683   */\n      dup2\n        /* \"#utility.yul\":671:684   */\n      mload\n        /* \"#utility.yul\":662:684   */\n      swap1\n      pop\n        /* \"#utility.yul\":693:726   */\n      tag_298\n        /* \"#utility.yul\":720:725   */\n      dup2\n        /* \"#utility.yul\":693:726   */\n      tag_295\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":589:732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":738:1067   */\n    tag_36:\n        /* \"#utility.yul\":797:803   */\n      0x00\n        /* \"#utility.yul\":846:848   */\n      0x20\n        /* \"#utility.yul\":834:843   */\n      dup3\n        /* \"#utility.yul\":825:832   */\n      dup5\n        /* \"#utility.yul\":821:844   */\n      sub\n        /* \"#utility.yul\":817:849   */\n      slt\n        /* \"#utility.yul\":814:933   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":852:931   */\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":814:933   */\n    tag_300:\n        /* \"#utility.yul\":972:973   */\n      0x00\n        /* \"#utility.yul\":997:1050   */\n      tag_303\n        /* \"#utility.yul\":1042:1049   */\n      dup5\n        /* \"#utility.yul\":1033:1039   */\n      dup3\n        /* \"#utility.yul\":1022:1031   */\n      dup6\n        /* \"#utility.yul\":1018:1040   */\n      add\n        /* \"#utility.yul\":997:1050   */\n      tag_281\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":987:1050   */\n      swap2\n      pop\n        /* \"#utility.yul\":943:1060   */\n      pop\n        /* \"#utility.yul\":738:1067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1073:1424   */\n    tag_138:\n        /* \"#utility.yul\":1143:1149   */\n      0x00\n        /* \"#utility.yul\":1192:1194   */\n      0x20\n        /* \"#utility.yul\":1180:1189   */\n      dup3\n        /* \"#utility.yul\":1171:1178   */\n      dup5\n        /* \"#utility.yul\":1167:1190   */\n      sub\n        /* \"#utility.yul\":1163:1195   */\n      slt\n        /* \"#utility.yul\":1160:1279   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":1198:1277   */\n      tag_306\n      tag_302\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":1160:1279   */\n    tag_305:\n        /* \"#utility.yul\":1318:1319   */\n      0x00\n        /* \"#utility.yul\":1343:1407   */\n      tag_307\n        /* \"#utility.yul\":1399:1406   */\n      dup5\n        /* \"#utility.yul\":1390:1396   */\n      dup3\n        /* \"#utility.yul\":1379:1388   */\n      dup6\n        /* \"#utility.yul\":1375:1397   */\n      add\n        /* \"#utility.yul\":1343:1407   */\n      tag_285\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1333:1407   */\n      swap2\n      pop\n        /* \"#utility.yul\":1289:1417   */\n      pop\n        /* \"#utility.yul\":1073:1424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1904   */\n    tag_64:\n        /* \"#utility.yul\":1498:1504   */\n      0x00\n        /* \"#utility.yul\":1506:1512   */\n      dup1\n        /* \"#utility.yul\":1555:1557   */\n      0x40\n        /* \"#utility.yul\":1543:1552   */\n      dup4\n        /* \"#utility.yul\":1534:1541   */\n      dup6\n        /* \"#utility.yul\":1530:1553   */\n      sub\n        /* \"#utility.yul\":1526:1558   */\n      slt\n        /* \"#utility.yul\":1523:1642   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1561:1640   */\n      tag_310\n      tag_302\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1523:1642   */\n    tag_309:\n        /* \"#utility.yul\":1681:1682   */\n      0x00\n        /* \"#utility.yul\":1706:1759   */\n      tag_311\n        /* \"#utility.yul\":1751:1758   */\n      dup6\n        /* \"#utility.yul\":1742:1748   */\n      dup3\n        /* \"#utility.yul\":1731:1740   */\n      dup7\n        /* \"#utility.yul\":1727:1749   */\n      add\n        /* \"#utility.yul\":1706:1759   */\n      tag_281\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1696:1759   */\n      swap3\n      pop\n        /* \"#utility.yul\":1652:1769   */\n      pop\n        /* \"#utility.yul\":1808:1810   */\n      0x20\n        /* \"#utility.yul\":1834:1887   */\n      tag_312\n        /* \"#utility.yul\":1879:1886   */\n      dup6\n        /* \"#utility.yul\":1870:1876   */\n      dup3\n        /* \"#utility.yul\":1859:1868   */\n      dup7\n        /* \"#utility.yul\":1855:1877   */\n      add\n        /* \"#utility.yul\":1834:1887   */\n      tag_292\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1824:1887   */\n      swap2\n      pop\n        /* \"#utility.yul\":1779:1897   */\n      pop\n        /* \"#utility.yul\":1430:1904   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2255   */\n    tag_165:\n        /* \"#utility.yul\":1977:1983   */\n      0x00\n        /* \"#utility.yul\":2026:2028   */\n      0x20\n        /* \"#utility.yul\":2014:2023   */\n      dup3\n        /* \"#utility.yul\":2005:2012   */\n      dup5\n        /* \"#utility.yul\":2001:2024   */\n      sub\n        /* \"#utility.yul\":1997:2029   */\n      slt\n        /* \"#utility.yul\":1994:2113   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":2032:2111   */\n      tag_315\n      tag_302\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1994:2113   */\n    tag_314:\n        /* \"#utility.yul\":2152:2153   */\n      0x00\n        /* \"#utility.yul\":2177:2238   */\n      tag_316\n        /* \"#utility.yul\":2230:2237   */\n      dup5\n        /* \"#utility.yul\":2221:2227   */\n      dup3\n        /* \"#utility.yul\":2210:2219   */\n      dup6\n        /* \"#utility.yul\":2206:2228   */\n      add\n        /* \"#utility.yul\":2177:2238   */\n      tag_288\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2167:2238   */\n      swap2\n      pop\n        /* \"#utility.yul\":2123:2248   */\n      pop\n        /* \"#utility.yul\":1910:2255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2590   */\n    tag_50:\n        /* \"#utility.yul\":2320:2326   */\n      0x00\n        /* \"#utility.yul\":2369:2371   */\n      0x20\n        /* \"#utility.yul\":2357:2366   */\n      dup3\n        /* \"#utility.yul\":2348:2355   */\n      dup5\n        /* \"#utility.yul\":2344:2367   */\n      sub\n        /* \"#utility.yul\":2340:2372   */\n      slt\n        /* \"#utility.yul\":2337:2456   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":2375:2454   */\n      tag_319\n      tag_302\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2337:2456   */\n    tag_318:\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2520:2573   */\n      tag_320\n        /* \"#utility.yul\":2565:2572   */\n      dup5\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2545:2554   */\n      dup6\n        /* \"#utility.yul\":2541:2563   */\n      add\n        /* \"#utility.yul\":2520:2573   */\n      tag_292\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2510:2573   */\n      swap2\n      pop\n        /* \"#utility.yul\":2466:2583   */\n      pop\n        /* \"#utility.yul\":2261:2590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2596:2947   */\n    tag_251:\n        /* \"#utility.yul\":2666:2672   */\n      0x00\n        /* \"#utility.yul\":2715:2717   */\n      0x20\n        /* \"#utility.yul\":2703:2712   */\n      dup3\n        /* \"#utility.yul\":2694:2701   */\n      dup5\n        /* \"#utility.yul\":2690:2713   */\n      sub\n        /* \"#utility.yul\":2686:2718   */\n      slt\n        /* \"#utility.yul\":2683:2802   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2721:2800   */\n      tag_323\n      tag_302\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2683:2802   */\n    tag_322:\n        /* \"#utility.yul\":2841:2842   */\n      0x00\n        /* \"#utility.yul\":2866:2930   */\n      tag_324\n        /* \"#utility.yul\":2922:2929   */\n      dup5\n        /* \"#utility.yul\":2913:2919   */\n      dup3\n        /* \"#utility.yul\":2902:2911   */\n      dup6\n        /* \"#utility.yul\":2898:2920   */\n      add\n        /* \"#utility.yul\":2866:2930   */\n      tag_296\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2856:2930   */\n      swap2\n      pop\n        /* \"#utility.yul\":2812:2940   */\n      pop\n        /* \"#utility.yul\":2596:2947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2953:3427   */\n    tag_70:\n        /* \"#utility.yul\":3021:3027   */\n      0x00\n        /* \"#utility.yul\":3029:3035   */\n      dup1\n        /* \"#utility.yul\":3078:3080   */\n      0x40\n        /* \"#utility.yul\":3066:3075   */\n      dup4\n        /* \"#utility.yul\":3057:3064   */\n      dup6\n        /* \"#utility.yul\":3053:3076   */\n      sub\n        /* \"#utility.yul\":3049:3081   */\n      slt\n        /* \"#utility.yul\":3046:3165   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3084:3163   */\n      tag_327\n      tag_302\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3046:3165   */\n    tag_326:\n        /* \"#utility.yul\":3204:3205   */\n      0x00\n        /* \"#utility.yul\":3229:3282   */\n      tag_328\n        /* \"#utility.yul\":3274:3281   */\n      dup6\n        /* \"#utility.yul\":3265:3271   */\n      dup3\n        /* \"#utility.yul\":3254:3263   */\n      dup7\n        /* \"#utility.yul\":3250:3272   */\n      add\n        /* \"#utility.yul\":3229:3282   */\n      tag_292\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3219:3282   */\n      swap3\n      pop\n        /* \"#utility.yul\":3175:3292   */\n      pop\n        /* \"#utility.yul\":3331:3333   */\n      0x20\n        /* \"#utility.yul\":3357:3410   */\n      tag_329\n        /* \"#utility.yul\":3402:3409   */\n      dup6\n        /* \"#utility.yul\":3393:3399   */\n      dup3\n        /* \"#utility.yul\":3382:3391   */\n      dup7\n        /* \"#utility.yul\":3378:3400   */\n      add\n        /* \"#utility.yul\":3357:3410   */\n      tag_292\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3347:3410   */\n      swap2\n      pop\n        /* \"#utility.yul\":3302:3420   */\n      pop\n        /* \"#utility.yul\":2953:3427   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3433:3612   */\n    tag_330:\n        /* \"#utility.yul\":3502:3512   */\n      0x00\n        /* \"#utility.yul\":3523:3569   */\n      tag_332\n        /* \"#utility.yul\":3565:3568   */\n      dup4\n        /* \"#utility.yul\":3557:3563   */\n      dup4\n        /* \"#utility.yul\":3523:3569   */\n      tag_333\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3601:3605   */\n      0x20\n        /* \"#utility.yul\":3596:3599   */\n      dup4\n        /* \"#utility.yul\":3592:3606   */\n      add\n        /* \"#utility.yul\":3578:3606   */\n      swap1\n      pop\n        /* \"#utility.yul\":3433:3612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3736   */\n    tag_334:\n        /* \"#utility.yul\":3705:3729   */\n      tag_336\n        /* \"#utility.yul\":3723:3728   */\n      dup2\n        /* \"#utility.yul\":3705:3729   */\n      tag_337\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3700:3703   */\n      dup3\n        /* \"#utility.yul\":3693:3730   */\n      mstore\n        /* \"#utility.yul\":3618:3736   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3772:4504   */\n    tag_338:\n        /* \"#utility.yul\":3891:3894   */\n      0x00\n        /* \"#utility.yul\":3920:3974   */\n      tag_340\n        /* \"#utility.yul\":3968:3973   */\n      dup3\n        /* \"#utility.yul\":3920:3974   */\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3990:4076   */\n      tag_342\n        /* \"#utility.yul\":4069:4075   */\n      dup2\n        /* \"#utility.yul\":4064:4067   */\n      dup6\n        /* \"#utility.yul\":3990:4076   */\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3983:4076   */\n      swap4\n      pop\n        /* \"#utility.yul\":4100:4156   */\n      tag_344\n        /* \"#utility.yul\":4150:4155   */\n      dup4\n        /* \"#utility.yul\":4100:4156   */\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4179:4186   */\n      dup1\n        /* \"#utility.yul\":4210:4211   */\n      0x00\n        /* \"#utility.yul\":4195:4479   */\n    tag_346:\n        /* \"#utility.yul\":4220:4226   */\n      dup4\n        /* \"#utility.yul\":4217:4218   */\n      dup2\n        /* \"#utility.yul\":4214:4227   */\n      lt\n        /* \"#utility.yul\":4195:4479   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4296:4302   */\n      dup2\n        /* \"#utility.yul\":4290:4303   */\n      mload\n        /* \"#utility.yul\":4323:4386   */\n      tag_349\n        /* \"#utility.yul\":4382:4385   */\n      dup9\n        /* \"#utility.yul\":4367:4380   */\n      dup3\n        /* \"#utility.yul\":4323:4386   */\n      tag_330\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4316:4386   */\n      swap8\n      pop\n        /* \"#utility.yul\":4409:4469   */\n      tag_350\n        /* \"#utility.yul\":4462:4468   */\n      dup4\n        /* \"#utility.yul\":4409:4469   */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4399:4469   */\n      swap3\n      pop\n        /* \"#utility.yul\":4255:4479   */\n      pop\n        /* \"#utility.yul\":4242:4243   */\n      0x01\n        /* \"#utility.yul\":4239:4240   */\n      dup2\n        /* \"#utility.yul\":4235:4244   */\n      add\n        /* \"#utility.yul\":4230:4244   */\n      swap1\n      pop\n        /* \"#utility.yul\":4195:4479   */\n      jump(tag_346)\n    tag_348:\n        /* \"#utility.yul\":4199:4213   */\n      pop\n        /* \"#utility.yul\":4495:4498   */\n      dup6\n        /* \"#utility.yul\":4488:4498   */\n      swap4\n      pop\n        /* \"#utility.yul\":3896:4504   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3772:4504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4510:4619   */\n    tag_352:\n        /* \"#utility.yul\":4591:4612   */\n      tag_354\n        /* \"#utility.yul\":4606:4611   */\n      dup2\n        /* \"#utility.yul\":4591:4612   */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4586:4589   */\n      dup3\n        /* \"#utility.yul\":4579:4613   */\n      mstore\n        /* \"#utility.yul\":4510:4619   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4625:4991   */\n    tag_356:\n        /* \"#utility.yul\":4767:4770   */\n      0x00\n        /* \"#utility.yul\":4788:4855   */\n      tag_358\n        /* \"#utility.yul\":4852:4854   */\n      0x1d\n        /* \"#utility.yul\":4847:4850   */\n      dup4\n        /* \"#utility.yul\":4788:4855   */\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4781:4855   */\n      swap2\n      pop\n        /* \"#utility.yul\":4864:4957   */\n      tag_360\n        /* \"#utility.yul\":4953:4956   */\n      dup3\n        /* \"#utility.yul\":4864:4957   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4982:4984   */\n      0x20\n        /* \"#utility.yul\":4977:4980   */\n      dup3\n        /* \"#utility.yul\":4973:4985   */\n      add\n        /* \"#utility.yul\":4966:4985   */\n      swap1\n      pop\n        /* \"#utility.yul\":4625:4991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4997:5363   */\n    tag_362:\n        /* \"#utility.yul\":5139:5142   */\n      0x00\n        /* \"#utility.yul\":5160:5227   */\n      tag_364\n        /* \"#utility.yul\":5224:5226   */\n      0x26\n        /* \"#utility.yul\":5219:5222   */\n      dup4\n        /* \"#utility.yul\":5160:5227   */\n      tag_359\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5153:5227   */\n      swap2\n      pop\n        /* \"#utility.yul\":5236:5329   */\n      tag_365\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5236:5329   */\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5354:5356   */\n      0x40\n        /* \"#utility.yul\":5349:5352   */\n      dup3\n        /* \"#utility.yul\":5345:5357   */\n      add\n        /* \"#utility.yul\":5338:5357   */\n      swap1\n      pop\n        /* \"#utility.yul\":4997:5363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5735   */\n    tag_367:\n        /* \"#utility.yul\":5511:5514   */\n      0x00\n        /* \"#utility.yul\":5532:5599   */\n      tag_369\n        /* \"#utility.yul\":5596:5598   */\n      0x18\n        /* \"#utility.yul\":5591:5594   */\n      dup4\n        /* \"#utility.yul\":5532:5599   */\n      tag_359\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5525:5599   */\n      swap2\n      pop\n        /* \"#utility.yul\":5608:5701   */\n      tag_370\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5608:5701   */\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5726:5728   */\n      0x20\n        /* \"#utility.yul\":5721:5724   */\n      dup3\n        /* \"#utility.yul\":5717:5729   */\n      add\n        /* \"#utility.yul\":5710:5729   */\n      swap1\n      pop\n        /* \"#utility.yul\":5369:5735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5741:6106   */\n    tag_372:\n        /* \"#utility.yul\":5883:5886   */\n      0x00\n        /* \"#utility.yul\":5904:5970   */\n      tag_374\n        /* \"#utility.yul\":5968:5969   */\n      0x09\n        /* \"#utility.yul\":5963:5966   */\n      dup4\n        /* \"#utility.yul\":5904:5970   */\n      tag_359\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5897:5970   */\n      swap2\n      pop\n        /* \"#utility.yul\":5979:6072   */\n      tag_375\n        /* \"#utility.yul\":6068:6071   */\n      dup3\n        /* \"#utility.yul\":5979:6072   */\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6097:6099   */\n      0x20\n        /* \"#utility.yul\":6092:6095   */\n      dup3\n        /* \"#utility.yul\":6088:6100   */\n      add\n        /* \"#utility.yul\":6081:6100   */\n      swap1\n      pop\n        /* \"#utility.yul\":5741:6106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6112:6478   */\n    tag_377:\n        /* \"#utility.yul\":6254:6257   */\n      0x00\n        /* \"#utility.yul\":6275:6342   */\n      tag_379\n        /* \"#utility.yul\":6339:6341   */\n      0x28\n        /* \"#utility.yul\":6334:6337   */\n      dup4\n        /* \"#utility.yul\":6275:6342   */\n      tag_359\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6268:6342   */\n      swap2\n      pop\n        /* \"#utility.yul\":6351:6444   */\n      tag_380\n        /* \"#utility.yul\":6440:6443   */\n      dup3\n        /* \"#utility.yul\":6351:6444   */\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6469:6471   */\n      0x40\n        /* \"#utility.yul\":6464:6467   */\n      dup3\n        /* \"#utility.yul\":6460:6472   */\n      add\n        /* \"#utility.yul\":6453:6472   */\n      swap1\n      pop\n        /* \"#utility.yul\":6112:6478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6484:6850   */\n    tag_382:\n        /* \"#utility.yul\":6626:6629   */\n      0x00\n        /* \"#utility.yul\":6647:6714   */\n      tag_384\n        /* \"#utility.yul\":6711:6713   */\n      0x14\n        /* \"#utility.yul\":6706:6709   */\n      dup4\n        /* \"#utility.yul\":6647:6714   */\n      tag_359\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6640:6714   */\n      swap2\n      pop\n        /* \"#utility.yul\":6723:6816   */\n      tag_385\n        /* \"#utility.yul\":6812:6815   */\n      dup3\n        /* \"#utility.yul\":6723:6816   */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6841:6843   */\n      0x20\n        /* \"#utility.yul\":6836:6839   */\n      dup3\n        /* \"#utility.yul\":6832:6844   */\n      add\n        /* \"#utility.yul\":6825:6844   */\n      swap1\n      pop\n        /* \"#utility.yul\":6484:6850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6856:7222   */\n    tag_387:\n        /* \"#utility.yul\":6998:7001   */\n      0x00\n        /* \"#utility.yul\":7019:7086   */\n      tag_389\n        /* \"#utility.yul\":7083:7085   */\n      0x20\n        /* \"#utility.yul\":7078:7081   */\n      dup4\n        /* \"#utility.yul\":7019:7086   */\n      tag_359\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7012:7086   */\n      swap2\n      pop\n        /* \"#utility.yul\":7095:7188   */\n      tag_390\n        /* \"#utility.yul\":7184:7187   */\n      dup3\n        /* \"#utility.yul\":7095:7188   */\n      tag_391\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7213:7215   */\n      0x20\n        /* \"#utility.yul\":7208:7211   */\n      dup3\n        /* \"#utility.yul\":7204:7216   */\n      add\n        /* \"#utility.yul\":7197:7216   */\n      swap1\n      pop\n        /* \"#utility.yul\":6856:7222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7228:7336   */\n    tag_333:\n        /* \"#utility.yul\":7305:7329   */\n      tag_393\n        /* \"#utility.yul\":7323:7328   */\n      dup2\n        /* \"#utility.yul\":7305:7329   */\n      tag_394\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7300:7303   */\n      dup3\n        /* \"#utility.yul\":7293:7330   */\n      mstore\n        /* \"#utility.yul\":7228:7336   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7342:7460   */\n    tag_395:\n        /* \"#utility.yul\":7429:7453   */\n      tag_397\n        /* \"#utility.yul\":7447:7452   */\n      dup2\n        /* \"#utility.yul\":7429:7453   */\n      tag_394\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7424:7427   */\n      dup3\n        /* \"#utility.yul\":7417:7454   */\n      mstore\n        /* \"#utility.yul\":7342:7460   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7466:7688   */\n    tag_33:\n        /* \"#utility.yul\":7559:7563   */\n      0x00\n        /* \"#utility.yul\":7597:7599   */\n      0x20\n        /* \"#utility.yul\":7586:7595   */\n      dup3\n        /* \"#utility.yul\":7582:7600   */\n      add\n        /* \"#utility.yul\":7574:7600   */\n      swap1\n      pop\n        /* \"#utility.yul\":7610:7681   */\n      tag_399\n        /* \"#utility.yul\":7678:7679   */\n      0x00\n        /* \"#utility.yul\":7667:7676   */\n      dup4\n        /* \"#utility.yul\":7663:7680   */\n      add\n        /* \"#utility.yul\":7654:7660   */\n      dup5\n        /* \"#utility.yul\":7610:7681   */\n      tag_334\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7466:7688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7694:8026   */\n    tag_160:\n        /* \"#utility.yul\":7815:7819   */\n      0x00\n        /* \"#utility.yul\":7853:7855   */\n      0x40\n        /* \"#utility.yul\":7842:7851   */\n      dup3\n        /* \"#utility.yul\":7838:7856   */\n      add\n        /* \"#utility.yul\":7830:7856   */\n      swap1\n      pop\n        /* \"#utility.yul\":7866:7937   */\n      tag_401\n        /* \"#utility.yul\":7934:7935   */\n      0x00\n        /* \"#utility.yul\":7923:7932   */\n      dup4\n        /* \"#utility.yul\":7919:7936   */\n      add\n        /* \"#utility.yul\":7910:7916   */\n      dup6\n        /* \"#utility.yul\":7866:7937   */\n      tag_334\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7947:8019   */\n      tag_402\n        /* \"#utility.yul\":8015:8017   */\n      0x20\n        /* \"#utility.yul\":8004:8013   */\n      dup4\n        /* \"#utility.yul\":8000:8018   */\n      add\n        /* \"#utility.yul\":7991:7997   */\n      dup5\n        /* \"#utility.yul\":7947:8019   */\n      tag_334\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7694:8026   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8032:8474   */\n    tag_176:\n        /* \"#utility.yul\":8181:8185   */\n      0x00\n        /* \"#utility.yul\":8219:8221   */\n      0x60\n        /* \"#utility.yul\":8208:8217   */\n      dup3\n        /* \"#utility.yul\":8204:8222   */\n      add\n        /* \"#utility.yul\":8196:8222   */\n      swap1\n      pop\n        /* \"#utility.yul\":8232:8303   */\n      tag_404\n        /* \"#utility.yul\":8300:8301   */\n      0x00\n        /* \"#utility.yul\":8289:8298   */\n      dup4\n        /* \"#utility.yul\":8285:8302   */\n      add\n        /* \"#utility.yul\":8276:8282   */\n      dup7\n        /* \"#utility.yul\":8232:8303   */\n      tag_334\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8313:8385   */\n      tag_405\n        /* \"#utility.yul\":8381:8383   */\n      0x20\n        /* \"#utility.yul\":8370:8379   */\n      dup4\n        /* \"#utility.yul\":8366:8384   */\n      add\n        /* \"#utility.yul\":8357:8363   */\n      dup6\n        /* \"#utility.yul\":8313:8385   */\n      tag_334\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8395:8467   */\n      tag_406\n        /* \"#utility.yul\":8463:8465   */\n      0x40\n        /* \"#utility.yul\":8452:8461   */\n      dup4\n        /* \"#utility.yul\":8448:8466   */\n      add\n        /* \"#utility.yul\":8439:8445   */\n      dup5\n        /* \"#utility.yul\":8395:8467   */\n      tag_395\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8032:8474   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8480:9114   */\n    tag_84:\n        /* \"#utility.yul\":8701:8705   */\n      0x00\n        /* \"#utility.yul\":8739:8741   */\n      0x40\n        /* \"#utility.yul\":8728:8737   */\n      dup3\n        /* \"#utility.yul\":8724:8742   */\n      add\n        /* \"#utility.yul\":8716:8742   */\n      swap1\n      pop\n        /* \"#utility.yul\":8788:8797   */\n      dup2\n        /* \"#utility.yul\":8782:8786   */\n      dup2\n        /* \"#utility.yul\":8778:8798   */\n      sub\n        /* \"#utility.yul\":8774:8775   */\n      0x00\n        /* \"#utility.yul\":8763:8772   */\n      dup4\n        /* \"#utility.yul\":8759:8776   */\n      add\n        /* \"#utility.yul\":8752:8799   */\n      mstore\n        /* \"#utility.yul\":8816:8924   */\n      tag_408\n        /* \"#utility.yul\":8919:8923   */\n      dup2\n        /* \"#utility.yul\":8910:8916   */\n      dup6\n        /* \"#utility.yul\":8816:8924   */\n      tag_338\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8808:8924   */\n      swap1\n      pop\n        /* \"#utility.yul\":8971:8980   */\n      dup2\n        /* \"#utility.yul\":8965:8969   */\n      dup2\n        /* \"#utility.yul\":8961:8981   */\n      sub\n        /* \"#utility.yul\":8956:8958   */\n      0x20\n        /* \"#utility.yul\":8945:8954   */\n      dup4\n        /* \"#utility.yul\":8941:8959   */\n      add\n        /* \"#utility.yul\":8934:8982   */\n      mstore\n        /* \"#utility.yul\":8999:9107   */\n      tag_409\n        /* \"#utility.yul\":9102:9106   */\n      dup2\n        /* \"#utility.yul\":9093:9099   */\n      dup5\n        /* \"#utility.yul\":8999:9107   */\n      tag_338\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8991:9107   */\n      swap1\n      pop\n        /* \"#utility.yul\":8480:9114   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9120:9330   */\n    tag_44:\n        /* \"#utility.yul\":9207:9211   */\n      0x00\n        /* \"#utility.yul\":9245:9247   */\n      0x20\n        /* \"#utility.yul\":9234:9243   */\n      dup3\n        /* \"#utility.yul\":9230:9248   */\n      add\n        /* \"#utility.yul\":9222:9248   */\n      swap1\n      pop\n        /* \"#utility.yul\":9258:9323   */\n      tag_411\n        /* \"#utility.yul\":9320:9321   */\n      0x00\n        /* \"#utility.yul\":9309:9318   */\n      dup4\n        /* \"#utility.yul\":9305:9322   */\n      add\n        /* \"#utility.yul\":9296:9302   */\n      dup5\n        /* \"#utility.yul\":9258:9323   */\n      tag_352\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9120:9330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9336:9755   */\n    tag_141:\n        /* \"#utility.yul\":9502:9506   */\n      0x00\n        /* \"#utility.yul\":9540:9542   */\n      0x20\n        /* \"#utility.yul\":9529:9538   */\n      dup3\n        /* \"#utility.yul\":9525:9543   */\n      add\n        /* \"#utility.yul\":9517:9543   */\n      swap1\n      pop\n        /* \"#utility.yul\":9589:9598   */\n      dup2\n        /* \"#utility.yul\":9583:9587   */\n      dup2\n        /* \"#utility.yul\":9579:9599   */\n      sub\n        /* \"#utility.yul\":9575:9576   */\n      0x00\n        /* \"#utility.yul\":9564:9573   */\n      dup4\n        /* \"#utility.yul\":9560:9577   */\n      add\n        /* \"#utility.yul\":9553:9600   */\n      mstore\n        /* \"#utility.yul\":9617:9748   */\n      tag_413\n        /* \"#utility.yul\":9743:9747   */\n      dup2\n        /* \"#utility.yul\":9617:9748   */\n      tag_356\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9609:9748   */\n      swap1\n      pop\n        /* \"#utility.yul\":9336:9755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9761:10180   */\n    tag_279:\n        /* \"#utility.yul\":9927:9931   */\n      0x00\n        /* \"#utility.yul\":9965:9967   */\n      0x20\n        /* \"#utility.yul\":9954:9963   */\n      dup3\n        /* \"#utility.yul\":9950:9968   */\n      add\n        /* \"#utility.yul\":9942:9968   */\n      swap1\n      pop\n        /* \"#utility.yul\":10014:10023   */\n      dup2\n        /* \"#utility.yul\":10008:10012   */\n      dup2\n        /* \"#utility.yul\":10004:10024   */\n      sub\n        /* \"#utility.yul\":10000:10001   */\n      0x00\n        /* \"#utility.yul\":9989:9998   */\n      dup4\n        /* \"#utility.yul\":9985:10002   */\n      add\n        /* \"#utility.yul\":9978:10025   */\n      mstore\n        /* \"#utility.yul\":10042:10173   */\n      tag_415\n        /* \"#utility.yul\":10168:10172   */\n      dup2\n        /* \"#utility.yul\":10042:10173   */\n      tag_362\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10034:10173   */\n      swap1\n      pop\n        /* \"#utility.yul\":9761:10180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10186:10605   */\n    tag_174:\n        /* \"#utility.yul\":10352:10356   */\n      0x00\n        /* \"#utility.yul\":10390:10392   */\n      0x20\n        /* \"#utility.yul\":10379:10388   */\n      dup3\n        /* \"#utility.yul\":10375:10393   */\n      add\n        /* \"#utility.yul\":10367:10393   */\n      swap1\n      pop\n        /* \"#utility.yul\":10439:10448   */\n      dup2\n        /* \"#utility.yul\":10433:10437   */\n      dup2\n        /* \"#utility.yul\":10429:10449   */\n      sub\n        /* \"#utility.yul\":10425:10426   */\n      0x00\n        /* \"#utility.yul\":10414:10423   */\n      dup4\n        /* \"#utility.yul\":10410:10427   */\n      add\n        /* \"#utility.yul\":10403:10450   */\n      mstore\n        /* \"#utility.yul\":10467:10598   */\n      tag_417\n        /* \"#utility.yul\":10593:10597   */\n      dup2\n        /* \"#utility.yul\":10467:10598   */\n      tag_367\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10459:10598   */\n      swap1\n      pop\n        /* \"#utility.yul\":10186:10605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10611:11030   */\n    tag_204:\n        /* \"#utility.yul\":10777:10781   */\n      0x00\n        /* \"#utility.yul\":10815:10817   */\n      0x20\n        /* \"#utility.yul\":10804:10813   */\n      dup3\n        /* \"#utility.yul\":10800:10818   */\n      add\n        /* \"#utility.yul\":10792:10818   */\n      swap1\n      pop\n        /* \"#utility.yul\":10864:10873   */\n      dup2\n        /* \"#utility.yul\":10858:10862   */\n      dup2\n        /* \"#utility.yul\":10854:10874   */\n      sub\n        /* \"#utility.yul\":10850:10851   */\n      0x00\n        /* \"#utility.yul\":10839:10848   */\n      dup4\n        /* \"#utility.yul\":10835:10852   */\n      add\n        /* \"#utility.yul\":10828:10875   */\n      mstore\n        /* \"#utility.yul\":10892:11023   */\n      tag_419\n        /* \"#utility.yul\":11018:11022   */\n      dup2\n        /* \"#utility.yul\":10892:11023   */\n      tag_372\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10884:11023   */\n      swap1\n      pop\n        /* \"#utility.yul\":10611:11030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11036:11455   */\n    tag_168:\n        /* \"#utility.yul\":11202:11206   */\n      0x00\n        /* \"#utility.yul\":11240:11242   */\n      0x20\n        /* \"#utility.yul\":11229:11238   */\n      dup3\n        /* \"#utility.yul\":11225:11243   */\n      add\n        /* \"#utility.yul\":11217:11243   */\n      swap1\n      pop\n        /* \"#utility.yul\":11289:11298   */\n      dup2\n        /* \"#utility.yul\":11283:11287   */\n      dup2\n        /* \"#utility.yul\":11279:11299   */\n      sub\n        /* \"#utility.yul\":11275:11276   */\n      0x00\n        /* \"#utility.yul\":11264:11273   */\n      dup4\n        /* \"#utility.yul\":11260:11277   */\n      add\n        /* \"#utility.yul\":11253:11300   */\n      mstore\n        /* \"#utility.yul\":11317:11448   */\n      tag_421\n        /* \"#utility.yul\":11443:11447   */\n      dup2\n        /* \"#utility.yul\":11317:11448   */\n      tag_377\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11309:11448   */\n      swap1\n      pop\n        /* \"#utility.yul\":11036:11455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11461:11880   */\n    tag_171:\n        /* \"#utility.yul\":11627:11631   */\n      0x00\n        /* \"#utility.yul\":11665:11667   */\n      0x20\n        /* \"#utility.yul\":11654:11663   */\n      dup3\n        /* \"#utility.yul\":11650:11668   */\n      add\n        /* \"#utility.yul\":11642:11668   */\n      swap1\n      pop\n        /* \"#utility.yul\":11714:11723   */\n      dup2\n        /* \"#utility.yul\":11708:11712   */\n      dup2\n        /* \"#utility.yul\":11704:11724   */\n      sub\n        /* \"#utility.yul\":11700:11701   */\n      0x00\n        /* \"#utility.yul\":11689:11698   */\n      dup4\n        /* \"#utility.yul\":11685:11702   */\n      add\n        /* \"#utility.yul\":11678:11725   */\n      mstore\n        /* \"#utility.yul\":11742:11873   */\n      tag_423\n        /* \"#utility.yul\":11868:11872   */\n      dup2\n        /* \"#utility.yul\":11742:11873   */\n      tag_382\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11734:11873   */\n      swap1\n      pop\n        /* \"#utility.yul\":11461:11880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11886:12305   */\n    tag_114:\n        /* \"#utility.yul\":12052:12056   */\n      0x00\n        /* \"#utility.yul\":12090:12092   */\n      0x20\n        /* \"#utility.yul\":12079:12088   */\n      dup3\n        /* \"#utility.yul\":12075:12093   */\n      add\n        /* \"#utility.yul\":12067:12093   */\n      swap1\n      pop\n        /* \"#utility.yul\":12139:12148   */\n      dup2\n        /* \"#utility.yul\":12133:12137   */\n      dup2\n        /* \"#utility.yul\":12129:12149   */\n      sub\n        /* \"#utility.yul\":12125:12126   */\n      0x00\n        /* \"#utility.yul\":12114:12123   */\n      dup4\n        /* \"#utility.yul\":12110:12127   */\n      add\n        /* \"#utility.yul\":12103:12150   */\n      mstore\n        /* \"#utility.yul\":12167:12298   */\n      tag_425\n        /* \"#utility.yul\":12293:12297   */\n      dup2\n        /* \"#utility.yul\":12167:12298   */\n      tag_387\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":12159:12298   */\n      swap1\n      pop\n        /* \"#utility.yul\":11886:12305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12311:12533   */\n    tag_94:\n        /* \"#utility.yul\":12404:12408   */\n      0x00\n        /* \"#utility.yul\":12442:12444   */\n      0x20\n        /* \"#utility.yul\":12431:12440   */\n      dup3\n        /* \"#utility.yul\":12427:12445   */\n      add\n        /* \"#utility.yul\":12419:12445   */\n      swap1\n      pop\n        /* \"#utility.yul\":12455:12526   */\n      tag_427\n        /* \"#utility.yul\":12523:12524   */\n      0x00\n        /* \"#utility.yul\":12512:12521   */\n      dup4\n        /* \"#utility.yul\":12508:12525   */\n      add\n        /* \"#utility.yul\":12499:12505   */\n      dup5\n        /* \"#utility.yul\":12455:12526   */\n      tag_395\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12311:12533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12620:12752   */\n    tag_345:\n        /* \"#utility.yul\":12687:12691   */\n      0x00\n        /* \"#utility.yul\":12710:12713   */\n      dup2\n        /* \"#utility.yul\":12702:12713   */\n      swap1\n      pop\n        /* \"#utility.yul\":12740:12744   */\n      0x20\n        /* \"#utility.yul\":12735:12738   */\n      dup3\n        /* \"#utility.yul\":12731:12745   */\n      add\n        /* \"#utility.yul\":12723:12745   */\n      swap1\n      pop\n        /* \"#utility.yul\":12620:12752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12758:12872   */\n    tag_341:\n        /* \"#utility.yul\":12825:12831   */\n      0x00\n        /* \"#utility.yul\":12859:12864   */\n      dup2\n        /* \"#utility.yul\":12853:12865   */\n      mload\n        /* \"#utility.yul\":12843:12865   */\n      swap1\n      pop\n        /* \"#utility.yul\":12758:12872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12878:12991   */\n    tag_351:\n        /* \"#utility.yul\":12948:12952   */\n      0x00\n        /* \"#utility.yul\":12980:12984   */\n      0x20\n        /* \"#utility.yul\":12975:12978   */\n      dup3\n        /* \"#utility.yul\":12971:12985   */\n      add\n        /* \"#utility.yul\":12963:12985   */\n      swap1\n      pop\n        /* \"#utility.yul\":12878:12991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12997:13181   */\n    tag_343:\n        /* \"#utility.yul\":13096:13107   */\n      0x00\n        /* \"#utility.yul\":13130:13136   */\n      dup3\n        /* \"#utility.yul\":13125:13128   */\n      dup3\n        /* \"#utility.yul\":13118:13137   */\n      mstore\n        /* \"#utility.yul\":13170:13174   */\n      0x20\n        /* \"#utility.yul\":13165:13168   */\n      dup3\n        /* \"#utility.yul\":13161:13175   */\n      add\n        /* \"#utility.yul\":13146:13175   */\n      swap1\n      pop\n        /* \"#utility.yul\":12997:13181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13187:13356   */\n    tag_359:\n        /* \"#utility.yul\":13271:13282   */\n      0x00\n        /* \"#utility.yul\":13305:13311   */\n      dup3\n        /* \"#utility.yul\":13300:13303   */\n      dup3\n        /* \"#utility.yul\":13293:13312   */\n      mstore\n        /* \"#utility.yul\":13345:13349   */\n      0x20\n        /* \"#utility.yul\":13340:13343   */\n      dup3\n        /* \"#utility.yul\":13336:13350   */\n      add\n        /* \"#utility.yul\":13321:13350   */\n      swap1\n      pop\n        /* \"#utility.yul\":13187:13356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13362:13547   */\n    tag_258:\n        /* \"#utility.yul\":13402:13403   */\n      0x00\n        /* \"#utility.yul\":13419:13439   */\n      tag_436\n        /* \"#utility.yul\":13437:13438   */\n      dup3\n        /* \"#utility.yul\":13419:13439   */\n      tag_394\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13414:13439   */\n      swap2\n      pop\n        /* \"#utility.yul\":13453:13473   */\n      tag_437\n        /* \"#utility.yul\":13471:13472   */\n      dup4\n        /* \"#utility.yul\":13453:13473   */\n      tag_394\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":13448:13473   */\n      swap3\n      pop\n        /* \"#utility.yul\":13492:13493   */\n      dup3\n        /* \"#utility.yul\":13482:13517   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":13497:13515   */\n      tag_439\n      tag_440\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13482:13517   */\n    tag_438:\n        /* \"#utility.yul\":13539:13540   */\n      dup3\n        /* \"#utility.yul\":13536:13537   */\n      dup3\n        /* \"#utility.yul\":13532:13541   */\n      div\n        /* \"#utility.yul\":13527:13541   */\n      swap1\n      pop\n        /* \"#utility.yul\":13362:13547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13553:13901   */\n    tag_260:\n        /* \"#utility.yul\":13593:13600   */\n      0x00\n        /* \"#utility.yul\":13616:13636   */\n      tag_442\n        /* \"#utility.yul\":13634:13635   */\n      dup3\n        /* \"#utility.yul\":13616:13636   */\n      tag_394\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13611:13636   */\n      swap2\n      pop\n        /* \"#utility.yul\":13650:13670   */\n      tag_443\n        /* \"#utility.yul\":13668:13669   */\n      dup4\n        /* \"#utility.yul\":13650:13670   */\n      tag_394\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13645:13670   */\n      swap3\n      pop\n        /* \"#utility.yul\":13838:13839   */\n      dup2\n        /* \"#utility.yul\":13770:13836   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13766:13840   */\n      div\n        /* \"#utility.yul\":13763:13764   */\n      dup4\n        /* \"#utility.yul\":13760:13841   */\n      gt\n        /* \"#utility.yul\":13755:13756   */\n      dup3\n        /* \"#utility.yul\":13748:13757   */\n      iszero\n        /* \"#utility.yul\":13741:13758   */\n      iszero\n        /* \"#utility.yul\":13737:13842   */\n      and\n        /* \"#utility.yul\":13734:13865   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":13845:13863   */\n      tag_445\n      tag_446\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13734:13865   */\n    tag_444:\n        /* \"#utility.yul\":13893:13894   */\n      dup3\n        /* \"#utility.yul\":13890:13891   */\n      dup3\n        /* \"#utility.yul\":13886:13895   */\n      mul\n        /* \"#utility.yul\":13875:13895   */\n      swap1\n      pop\n        /* \"#utility.yul\":13553:13901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13907:14003   */\n    tag_337:\n        /* \"#utility.yul\":13944:13951   */\n      0x00\n        /* \"#utility.yul\":13973:13997   */\n      tag_448\n        /* \"#utility.yul\":13991:13996   */\n      dup3\n        /* \"#utility.yul\":13973:13997   */\n      tag_449\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13962:13997   */\n      swap1\n      pop\n        /* \"#utility.yul\":13907:14003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14009:14099   */\n    tag_355:\n        /* \"#utility.yul\":14043:14050   */\n      0x00\n        /* \"#utility.yul\":14086:14091   */\n      dup2\n        /* \"#utility.yul\":14079:14092   */\n      iszero\n        /* \"#utility.yul\":14072:14093   */\n      iszero\n        /* \"#utility.yul\":14061:14093   */\n      swap1\n      pop\n        /* \"#utility.yul\":14009:14099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14105:14231   */\n    tag_449:\n        /* \"#utility.yul\":14142:14149   */\n      0x00\n        /* \"#utility.yul\":14182:14224   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14175:14180   */\n      dup3\n        /* \"#utility.yul\":14171:14225   */\n      and\n        /* \"#utility.yul\":14160:14225   */\n      swap1\n      pop\n        /* \"#utility.yul\":14105:14231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14237:14314   */\n    tag_394:\n        /* \"#utility.yul\":14274:14281   */\n      0x00\n        /* \"#utility.yul\":14303:14308   */\n      dup2\n        /* \"#utility.yul\":14292:14308   */\n      swap1\n      pop\n        /* \"#utility.yul\":14237:14314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14320:14553   */\n    tag_154:\n        /* \"#utility.yul\":14359:14362   */\n      0x00\n        /* \"#utility.yul\":14382:14406   */\n      tag_454\n        /* \"#utility.yul\":14400:14405   */\n      dup3\n        /* \"#utility.yul\":14382:14406   */\n      tag_394\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":14373:14406   */\n      swap2\n      pop\n        /* \"#utility.yul\":14428:14494   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14421:14426   */\n      dup3\n        /* \"#utility.yul\":14418:14495   */\n      eq\n        /* \"#utility.yul\":14415:14518   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":14498:14516   */\n      tag_456\n      tag_446\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14415:14518   */\n    tag_455:\n        /* \"#utility.yul\":14545:14546   */\n      0x01\n        /* \"#utility.yul\":14538:14543   */\n      dup3\n        /* \"#utility.yul\":14534:14547   */\n      add\n        /* \"#utility.yul\":14527:14547   */\n      swap1\n      pop\n        /* \"#utility.yul\":14320:14553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14559:14739   */\n    tag_446:\n        /* \"#utility.yul\":14607:14684   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14604:14605   */\n      0x00\n        /* \"#utility.yul\":14597:14685   */\n      mstore\n        /* \"#utility.yul\":14704:14708   */\n      0x11\n        /* \"#utility.yul\":14701:14702   */\n      0x04\n        /* \"#utility.yul\":14694:14709   */\n      mstore\n        /* \"#utility.yul\":14728:14732   */\n      0x24\n        /* \"#utility.yul\":14725:14726   */\n      0x00\n        /* \"#utility.yul\":14718:14733   */\n      revert\n        /* \"#utility.yul\":14745:14925   */\n    tag_440:\n        /* \"#utility.yul\":14793:14870   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14790:14791   */\n      0x00\n        /* \"#utility.yul\":14783:14871   */\n      mstore\n        /* \"#utility.yul\":14890:14894   */\n      0x12\n        /* \"#utility.yul\":14887:14888   */\n      0x04\n        /* \"#utility.yul\":14880:14895   */\n      mstore\n        /* \"#utility.yul\":14914:14918   */\n      0x24\n        /* \"#utility.yul\":14911:14912   */\n      0x00\n        /* \"#utility.yul\":14904:14919   */\n      revert\n        /* \"#utility.yul\":14931:15111   */\n    tag_147:\n        /* \"#utility.yul\":14979:15056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14976:14977   */\n      0x00\n        /* \"#utility.yul\":14969:15057   */\n      mstore\n        /* \"#utility.yul\":15076:15080   */\n      0x32\n        /* \"#utility.yul\":15073:15074   */\n      0x04\n        /* \"#utility.yul\":15066:15081   */\n      mstore\n        /* \"#utility.yul\":15100:15104   */\n      0x24\n        /* \"#utility.yul\":15097:15098   */\n      0x00\n        /* \"#utility.yul\":15090:15105   */\n      revert\n        /* \"#utility.yul\":15117:15297   */\n    tag_220:\n        /* \"#utility.yul\":15165:15242   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15162:15163   */\n      0x00\n        /* \"#utility.yul\":15155:15243   */\n      mstore\n        /* \"#utility.yul\":15262:15266   */\n      0x41\n        /* \"#utility.yul\":15259:15260   */\n      0x04\n        /* \"#utility.yul\":15252:15267   */\n      mstore\n        /* \"#utility.yul\":15286:15290   */\n      0x24\n        /* \"#utility.yul\":15283:15284   */\n      0x00\n        /* \"#utility.yul\":15276:15291   */\n      revert\n        /* \"#utility.yul\":15426:15543   */\n    tag_302:\n        /* \"#utility.yul\":15535:15536   */\n      0x00\n        /* \"#utility.yul\":15532:15533   */\n      dup1\n        /* \"#utility.yul\":15525:15537   */\n      revert\n        /* \"#utility.yul\":15549:15728   */\n    tag_361:\n        /* \"#utility.yul\":15689:15720   */\n      0x73656c6c6572206e6565642068617665207468697320746f6b656e6964000000\n        /* \"#utility.yul\":15685:15686   */\n      0x00\n        /* \"#utility.yul\":15677:15683   */\n      dup3\n        /* \"#utility.yul\":15673:15687   */\n      add\n        /* \"#utility.yul\":15666:15721   */\n      mstore\n        /* \"#utility.yul\":15549:15728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15734:15959   */\n    tag_366:\n        /* \"#utility.yul\":15874:15908   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15870:15871   */\n      0x00\n        /* \"#utility.yul\":15862:15868   */\n      dup3\n        /* \"#utility.yul\":15858:15872   */\n      add\n        /* \"#utility.yul\":15851:15909   */\n      mstore\n        /* \"#utility.yul\":15943:15951   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15938:15940   */\n      0x20\n        /* \"#utility.yul\":15930:15936   */\n      dup3\n        /* \"#utility.yul\":15926:15941   */\n      add\n        /* \"#utility.yul\":15919:15952   */\n      mstore\n        /* \"#utility.yul\":15734:15959   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15965:16139   */\n    tag_371:\n        /* \"#utility.yul\":16105:16131   */\n      0x46726f6d20616e6420546f2063616e206e6f742073616d650000000000000000\n        /* \"#utility.yul\":16101:16102   */\n      0x00\n        /* \"#utility.yul\":16093:16099   */\n      dup3\n        /* \"#utility.yul\":16089:16103   */\n      add\n        /* \"#utility.yul\":16082:16132   */\n      mstore\n        /* \"#utility.yul\":15965:16139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16145:16304   */\n    tag_376:\n        /* \"#utility.yul\":16285:16296   */\n      0x5072696365203e20300000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16281:16282   */\n      0x00\n        /* \"#utility.yul\":16273:16279   */\n      dup3\n        /* \"#utility.yul\":16269:16283   */\n      add\n        /* \"#utility.yul\":16262:16297   */\n      mstore\n        /* \"#utility.yul\":16145:16304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16310:16537   */\n    tag_381:\n        /* \"#utility.yul\":16450:16484   */\n      0x596f75206e65656420417070726f766520466f7220416c6c20746f2074686973\n        /* \"#utility.yul\":16446:16447   */\n      0x00\n        /* \"#utility.yul\":16438:16444   */\n      dup3\n        /* \"#utility.yul\":16434:16448   */\n      add\n        /* \"#utility.yul\":16427:16485   */\n      mstore\n        /* \"#utility.yul\":16519:16529   */\n      0x20636f6e74616374000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16514:16516   */\n      0x20\n        /* \"#utility.yul\":16506:16512   */\n      dup3\n        /* \"#utility.yul\":16502:16517   */\n      add\n        /* \"#utility.yul\":16495:16530   */\n      mstore\n        /* \"#utility.yul\":16310:16537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16543:16713   */\n    tag_386:\n        /* \"#utility.yul\":16683:16705   */\n      0x416464726573732063616e206e6f74207a65726f000000000000000000000000\n        /* \"#utility.yul\":16679:16680   */\n      0x00\n        /* \"#utility.yul\":16671:16677   */\n      dup3\n        /* \"#utility.yul\":16667:16681   */\n      add\n        /* \"#utility.yul\":16660:16706   */\n      mstore\n        /* \"#utility.yul\":16543:16713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16719:16901   */\n    tag_391:\n        /* \"#utility.yul\":16859:16893   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16855:16856   */\n      0x00\n        /* \"#utility.yul\":16847:16853   */\n      dup3\n        /* \"#utility.yul\":16843:16857   */\n      add\n        /* \"#utility.yul\":16836:16894   */\n      mstore\n        /* \"#utility.yul\":16719:16901   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16907:17029   */\n    tag_284:\n        /* \"#utility.yul\":16980:17004   */\n      tag_472\n        /* \"#utility.yul\":16998:17003   */\n      dup2\n        /* \"#utility.yul\":16980:17004   */\n      tag_337\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16973:16978   */\n      dup2\n        /* \"#utility.yul\":16970:17005   */\n      eq\n        /* \"#utility.yul\":16960:17023   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":17019:17020   */\n      0x00\n        /* \"#utility.yul\":17016:17017   */\n      dup1\n        /* \"#utility.yul\":17009:17021   */\n      revert\n        /* \"#utility.yul\":16960:17023   */\n    tag_473:\n        /* \"#utility.yul\":16907:17029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17035:17151   */\n    tag_291:\n        /* \"#utility.yul\":17105:17126   */\n      tag_475\n        /* \"#utility.yul\":17120:17125   */\n      dup2\n        /* \"#utility.yul\":17105:17126   */\n      tag_355\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":17098:17103   */\n      dup2\n        /* \"#utility.yul\":17095:17127   */\n      eq\n        /* \"#utility.yul\":17085:17145   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":17141:17142   */\n      0x00\n        /* \"#utility.yul\":17138:17139   */\n      dup1\n        /* \"#utility.yul\":17131:17143   */\n      revert\n        /* \"#utility.yul\":17085:17145   */\n    tag_476:\n        /* \"#utility.yul\":17035:17151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17157:17279   */\n    tag_295:\n        /* \"#utility.yul\":17230:17254   */\n      tag_478\n        /* \"#utility.yul\":17248:17253   */\n      dup2\n        /* \"#utility.yul\":17230:17254   */\n      tag_394\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17223:17228   */\n      dup2\n        /* \"#utility.yul\":17220:17255   */\n      eq\n        /* \"#utility.yul\":17210:17273   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":17269:17270   */\n      0x00\n        /* \"#utility.yul\":17266:17267   */\n      dup1\n        /* \"#utility.yul\":17259:17271   */\n      revert\n        /* \"#utility.yul\":17210:17273   */\n    tag_479:\n        /* \"#utility.yul\":17157:17279   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204b7841484b5ebc77760b1cbd2ff12b8676e12193383196d4f1073069d731b90564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_360": {
									"entryPoint": null,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_842": {
									"entryPoint": null,
									"id": 842,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 654,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060146101000a81548160ff02191690831515021790555034801561002a57600080fd5b50600061003b61028e60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35073cb3745379275252f4beb5d1094bf1a8a09f368b7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d295cf5d859b9ed331cdf69c49a81eff5e1bee83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c184af52ca4e1b1f085aa8236ff8508f52dc6ea7600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735bcd91c734d665fe426a5d7156f2ad7d37b76e30600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060068081905550610296565b600033905090565b61214a806102a56000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638456cb59116100c3578063bcfcba761161007c578063bcfcba761461036c578063d88827791461038a578063de281e28146103a8578063ea156f44146103c4578063f0f44260146103e2578063f2fde38b146103fe57610158565b80638456cb59146102b95780638da5cb5b146102d75780638f32d59b146102f557806399bc1bfb14610313578063a888a93a14610332578063b56202291461034e57610158565b8063563df32f11610115578063563df32f1461020b57806359464217146102295780635c975abb146102595780635c9e0d1014610277578063715018a61461029357806383d582151461029d57610158565b80630ff328391461015d5780631ecff38e1461017b57806336c3b4e2146101975780633f4ba83a146101b5578063458a635a146101d35780634dd79f10146101ef575b600080fd5b61016561041a565b6040516101729190611b75565b60405180910390f35b6101956004803603810190610190919061186d565b610440565b005b61019f610524565b6040516101ac9190611b75565b60405180910390f35b6101bd61054a565b6040516101ca9190611c27565b60405180910390f35b6101ed60048036038101906101e8919061186d565b6105f9565b005b61020960048036038101906102049190611934565b6106dd565b005b6102136108a3565b6040516102209190611b75565b60405180910390f35b610243600480360381019061023e9190611934565b6108c9565b6040516102509190611b75565b60405180910390f35b610261610906565b60405161026e9190611c27565b60405180910390f35b610291600480360381019061028c91906118c7565b610919565b005b61029b610beb565b005b6102b760048036038101906102b2919061198e565b610cf0565b005b6102c1610f9c565b6040516102ce9190611c27565b60405180910390f35b6102df61104d565b6040516102ec9190611b75565b60405180910390f35b6102fd611076565b60405161030a9190611c27565b60405180910390f35b61031b6110d4565b604051610329929190611bf0565b60405180910390f35b61034c6004803603810190610347919061186d565b6111fd565b005b6103566112e1565b6040516103639190611b75565b60405180910390f35b610374611307565b6040516103819190611d22565b60405180910390f35b61039261130d565b60405161039f9190611b75565b60405180910390f35b6103c260048036038101906103bd9190611934565b611333565b005b6103cc6113bd565b6040516103d99190611d22565b60405180910390f35b6103fc60048036038101906103f7919061186d565b611598565b005b6104186004803603810190610413919061186d565b61167c565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610448611076565b610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e90611d02565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f136742181ff5fc7d13f647a125112ec36500105a024ce2dbbb7f28fa375eebfa600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516105199190611b75565b60405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610554611076565b610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90611d02565b60405180910390fd5b600060149054906101000a900460ff166105ac57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a16001905090565b610601611076565b610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063790611d02565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb01e01d90e1da4079495db07c84276ef34a0ea39cd9be9c3844874eb35616e44600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516106d29190611b75565b60405180910390a150565b600060149054906101000a900460ff16156106f757600080fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161076e9190611d22565b60206040518083038186803b15801561078657600080fd5b505afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be919061189a565b73ffffffffffffffffffffffffffffffffffffffff1614610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90611c42565b60405180910390fd5b600860008381526020019081526020016000206000905560005b60098054905081101561089d5782600982815481106108505761084f611f01565b5b9060005260206000200154141561088a576009818154811061087557610874611f01565b5b906000526020600020016000905550506108a0565b808061089590611e5a565b91505061082e565b50505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060149054906101000a900460ff1681565b600060149054906101000a900460ff161561093357600080fd5b6000339050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582306040518363ffffffff1660e01b8152600401610995929190611b90565b60206040518083038186803b1580156109ad57600080fd5b505afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190611907565b610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b90611cc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611ce2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa90611c82565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8285856040518463ffffffff1660e01b8152600401610b6293929190611bb9565b600060405180830381600087803b158015610b7c57600080fd5b505af1158015610b90573d6000803e3d6000fd5b50505050826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b610bf3611076565b610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2990611d02565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610d0a57600080fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610d819190611d22565b60206040518083038186803b158015610d9957600080fd5b505afa158015610dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd1919061189a565b73ffffffffffffffffffffffffffffffffffffffff1614610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e90611c42565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582306040518363ffffffff1660e01b8152600401610e84929190611b90565b60206040518083038186803b158015610e9c57600080fd5b505afa158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed49190611907565b610f13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0a90611cc2565b60405180910390fd5b60008211610f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4d90611ca2565b60405180910390fd5b8160086000858152602001908152602001600020819055506009839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b6000610fa6611076565b610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc90611d02565b60405180910390fd5b600060149054906101000a900460ff1615610fff57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a16001905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110b86116cf565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6060806000600980549050905060008167ffffffffffffffff8111156110fd576110fc611f30565b5b60405190808252806020026020018201604052801561112b5781602001602082028036833780820191505090505b50905060005b8281101561119d57600860006009838154811061115157611150611f01565b5b906000526020600020015481526020019081526020016000205482828151811061117e5761117d611f01565b5b602002602001018181525050808061119590611e5a565b915050611131565b50600981818054806020026020016040519081016040528092919081815260200182805480156111ec57602002820191906000526020600020905b8154815260200190600101908083116111d8575b505050505091509350935050509091565b611205611076565b611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123b90611d02565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507facdd85d235b5b49226c2c4f2b72cb01fa1cc3ae64bb843a6def27788d05b1b60600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516112d69190611b75565b60405180910390a150565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61133b611076565b61137a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137190611d02565b60405180910390fd5b806006819055507f4d8e30ff458bebdd848488669e63d632954487ca1bc64c28f3c920f74a5f85946006546040516113b29190611d22565b60405180910390a150565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161143d9190611b75565b60206040518083038186803b15801561145557600080fd5b505afa158015611469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148d9190611961565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161150e9190611b75565b60206040518083038186803b15801561152657600080fd5b505afa15801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e9190611961565b90506000828261156e9190611d87565b90506000600a600654836115829190611db8565b61158c9190611d87565b90508094505050505090565b6115a0611076565b6115df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d690611d02565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb14f2a39bb21fda32827bbdb4be629c94036e10a3f6055a6454f884ca1b33fa1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516116719190611b75565b60405180910390a150565b611684611076565b6116c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ba90611d02565b60405180910390fd5b6116cc816116d7565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173e90611c62565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050611813816120cf565b92915050565b600081519050611828816120cf565b92915050565b60008151905061183d816120e6565b92915050565b600081359050611852816120fd565b92915050565b600081519050611867816120fd565b92915050565b60006020828403121561188357611882611f5f565b5b600061189184828501611804565b91505092915050565b6000602082840312156118b0576118af611f5f565b5b60006118be84828501611819565b91505092915050565b600080604083850312156118de576118dd611f5f565b5b60006118ec85828601611804565b92505060206118fd85828601611843565b9150509250929050565b60006020828403121561191d5761191c611f5f565b5b600061192b8482850161182e565b91505092915050565b60006020828403121561194a57611949611f5f565b5b600061195884828501611843565b91505092915050565b60006020828403121561197757611976611f5f565b5b600061198584828501611858565b91505092915050565b600080604083850312156119a5576119a4611f5f565b5b60006119b385828601611843565b92505060206119c485828601611843565b9150509250929050565b60006119da8383611b57565b60208301905092915050565b6119ef81611e12565b82525050565b6000611a0082611d4d565b611a0a8185611d65565b9350611a1583611d3d565b8060005b83811015611a46578151611a2d88826119ce565b9750611a3883611d58565b925050600181019050611a19565b5085935050505092915050565b611a5c81611e24565b82525050565b6000611a6f601d83611d76565b9150611a7a82611f64565b602082019050919050565b6000611a92602683611d76565b9150611a9d82611f8d565b604082019050919050565b6000611ab5601883611d76565b9150611ac082611fdc565b602082019050919050565b6000611ad8600983611d76565b9150611ae382612005565b602082019050919050565b6000611afb602883611d76565b9150611b068261202e565b604082019050919050565b6000611b1e601483611d76565b9150611b298261207d565b602082019050919050565b6000611b41602083611d76565b9150611b4c826120a6565b602082019050919050565b611b6081611e50565b82525050565b611b6f81611e50565b82525050565b6000602082019050611b8a60008301846119e6565b92915050565b6000604082019050611ba560008301856119e6565b611bb260208301846119e6565b9392505050565b6000606082019050611bce60008301866119e6565b611bdb60208301856119e6565b611be86040830184611b66565b949350505050565b60006040820190508181036000830152611c0a81856119f5565b90508181036020830152611c1e81846119f5565b90509392505050565b6000602082019050611c3c6000830184611a53565b92915050565b60006020820190508181036000830152611c5b81611a62565b9050919050565b60006020820190508181036000830152611c7b81611a85565b9050919050565b60006020820190508181036000830152611c9b81611aa8565b9050919050565b60006020820190508181036000830152611cbb81611acb565b9050919050565b60006020820190508181036000830152611cdb81611aee565b9050919050565b60006020820190508181036000830152611cfb81611b11565b9050919050565b60006020820190508181036000830152611d1b81611b34565b9050919050565b6000602082019050611d376000830184611b66565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611d9282611e50565b9150611d9d83611e50565b925082611dad57611dac611ed2565b5b828204905092915050565b6000611dc382611e50565b9150611dce83611e50565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e0757611e06611ea3565b5b828202905092915050565b6000611e1d82611e30565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611e6582611e50565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e9857611e97611ea3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f73656c6c6572206e6565642068617665207468697320746f6b656e6964000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f46726f6d20616e6420546f2063616e206e6f742073616d650000000000000000600082015250565b7f5072696365203e20300000000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420417070726f766520466f7220416c6c20746f207468697360008201527f20636f6e74616374000000000000000000000000000000000000000000000000602082015250565b7f416464726573732063616e206e6f74207a65726f000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6120d881611e12565b81146120e357600080fd5b50565b6120ef81611e24565b81146120fa57600080fd5b50565b61210681611e50565b811461211157600080fd5b5056fea26469706673582212204b7841484b5ebc77760b1cbd2ff12b8676e12193383196d4f1073069d731b90564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x3B PUSH2 0x28E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH20 0xCB3745379275252F4BEB5D1094BF1A8A09F368B7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD295CF5D859B9ED331CDF69C49A81EFF5E1BEE83 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xC184AF52CA4E1B1F085AA8236FF8508F52DC6EA7 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x5BCD91C734D665FE426A5D7156F2AD7D37B76E30 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x214A DUP1 PUSH2 0x2A5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xBCFCBA76 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBCFCBA76 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD8882779 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xDE281E28 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xEA156F44 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FE JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x99BC1BFB EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA888A93A EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xB5620229 EQ PUSH2 0x34E JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x563DF32F GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x563DF32F EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x59464217 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x5C9E0D10 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x83D58215 EQ PUSH2 0x29D JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0xFF32839 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x1ECFF38E EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x36C3B4E2 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x458A635A EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x4DD79F10 EQ PUSH2 0x1EF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0xBEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x11FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x1333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x167C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x136742181FF5FC7D13F647A125112EC36500105A024CE2DBBB7F28FA375EEBFA PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x601 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x637 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB01E01D90E1DA4079495DB07C84276EF34A0EA39CD9BE9C3844874EB35616E44 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x89D JUMPI DUP3 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x850 JUMPI PUSH2 0x84F PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0x8A0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x895 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x82E JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP3 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFA SWAP1 PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB62 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xBF3 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC29 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH2 0xF13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0A SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10B8 PUSH2 0x16CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FD JUMPI PUSH2 0x10FC PUSH2 0x1F30 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x112B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x119D JUMPI PUSH1 0x8 PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x117E JUMPI PUSH2 0x117D PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x1195 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1131 JUMP JUMPDEST POP PUSH1 0x9 DUP2 DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x11EC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x11D8 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123B SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xACDD85D235B5B49226C2C4F2B72CB01FA1CC3AE64BB843A6DEF27788D05B1B60 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x12D6 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x133B PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1371 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x4D8E30FF458BEBDD848488669E63D632954487CA1BC64C28F3C920F74A5F8594 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x13B2 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x156E SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x6 SLOAD DUP4 PUSH2 0x1582 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x15DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D6 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB14F2A39BB21FDA32827BBDB4BE629C94036E10A3F6055A6454F884CA1B33FA1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1684 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x16C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BA SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x16D7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173E SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1813 DUP2 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1828 DUP2 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x183D DUP2 PUSH2 0x20E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1852 DUP2 PUSH2 0x20FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1867 DUP2 PUSH2 0x20FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1891 DUP5 DUP3 DUP6 ADD PUSH2 0x1804 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B0 JUMPI PUSH2 0x18AF PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BE DUP5 DUP3 DUP6 ADD PUSH2 0x1819 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18EC DUP6 DUP3 DUP7 ADD PUSH2 0x1804 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18FD DUP6 DUP3 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194A JUMPI PUSH2 0x1949 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP5 DUP3 DUP6 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1977 JUMPI PUSH2 0x1976 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP5 DUP3 DUP6 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C4 DUP6 DUP3 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DA DUP4 DUP4 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EF DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A00 DUP3 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x1A0A DUP2 DUP6 PUSH2 0x1D65 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A15 DUP4 PUSH2 0x1D3D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A46 JUMPI DUP2 MLOAD PUSH2 0x1A2D DUP9 DUP3 PUSH2 0x19CE JUMP JUMPDEST SWAP8 POP PUSH2 0x1A38 DUP4 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A19 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6F PUSH1 0x1D DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7A DUP3 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A92 PUSH1 0x26 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9D DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB5 PUSH1 0x18 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC0 DUP3 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 PUSH1 0x9 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE3 DUP3 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFB PUSH1 0x28 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B06 DUP3 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E PUSH1 0x14 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B29 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B41 PUSH1 0x20 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4C DUP3 PUSH2 0x20A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B60 DUP2 PUSH2 0x1E50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B6F DUP2 PUSH2 0x1E50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BCE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1BDB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1BE8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C0A DUP2 DUP6 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C1E DUP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5B DUP2 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7B DUP2 PUSH2 0x1A85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9B DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBB DUP2 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CDB DUP2 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFB DUP2 PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D1B DUP2 PUSH2 0x1B34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 DUP3 PUSH2 0x1E50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9D DUP4 PUSH2 0x1E50 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DAD JUMPI PUSH2 0x1DAC PUSH2 0x1ED2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC3 DUP3 PUSH2 0x1E50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCE DUP4 PUSH2 0x1E50 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1EA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E65 DUP3 PUSH2 0x1E50 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1E98 JUMPI PUSH2 0x1E97 PUSH2 0x1EA3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x73656C6C6572206E6565642068617665207468697320746F6B656E6964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x46726F6D20616E6420546F2063616E206E6F742073616D650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365203E20300000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206E65656420417070726F766520466F7220416C6C20746F2074686973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636F6E74616374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573732063616E206E6F74207A65726F000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20EF DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP2 EQ PUSH2 0x20FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2106 DUP2 PUSH2 0x1E50 JUMP JUMPDEST DUP2 EQ PUSH2 0x2111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B PUSH25 0x41484B5EBC77760B1CBD2FF12B8676E12193383196D4F10730 PUSH10 0xD731B90564736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "229:4086:8:-:0;;;293:5:3;272:26;;;;;;;;;;;;;;;;;;;;854:374:8;;;;;;;;;;716:17:2;736:12;:10;;;:12;;:::i;:::-;716:32;;763:9;754:6;;:18;;;;;;;;;;;;;;;;;;816:9;783:43;;812:1;783:43;;;;;;;;;;;;710:121;890:42:8;879:8;;:53;;;;;;;;;;;;;;;;;;955:42;942:10;;:55;;;;;;;;;;;;;;;;;;1026:42;1007:16;;:61;;;;;;;;;;;;;;;;;;1092:42;1078:11;;:56;;;;;;;;;;;;;;;;;;1159:42;1144:12;;:57;;;;;;;;;;;;;;;;;;1220:1;1211:6;:10;;;;229:4086;;760:99:1;805:15;843:10;828:26;;760:99;:::o;229:4086:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CancelSellVicShose_1151": {
									"entryPoint": 1757,
									"id": 1151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@LiquidPool_775": {
									"entryPoint": 1316,
									"id": 775,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MinBnB_783": {
									"entryPoint": 4871,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SellVicShose_1095": {
									"entryPoint": 3312,
									"id": 1095,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@ShoseNFTContract_777": {
									"entryPoint": 4877,
									"id": 777,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Treasury_773": {
									"entryPoint": 2211,
									"id": 773,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VIMContract_779": {
									"entryPoint": 4833,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WBNBContract_781": {
									"entryPoint": 1050,
									"id": 781,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 5839,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_453": {
									"entryPoint": 5847,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkShoseTranfer_1035": {
									"entryPoint": 2249,
									"id": 1035,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMINPrice_962": {
									"entryPoint": 5053,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSellingShose_1203": {
									"entryPoint": 4308,
									"id": 1203,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@isOwner_392": {
									"entryPoint": 4214,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_369": {
									"entryPoint": 4173,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_506": {
									"entryPoint": 3996,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_467": {
									"entryPoint": 2310,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_414": {
									"entryPoint": 3051,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLiquidPool_874": {
									"entryPoint": 4605,
									"id": 874,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinBNB_922": {
									"entryPoint": 4915,
									"id": 922,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setShoseNFTContract_890": {
									"entryPoint": 1529,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasury_858": {
									"entryPoint": 5528,
									"id": 858,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVIMContract_906": {
									"entryPoint": 1088,
									"id": 906,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_427": {
									"entryPoint": 5756,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferVicShose_1023": {
									"entryPoint": 2329,
									"id": 1023,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@unpause_526": {
									"entryPoint": 1354,
									"id": 526,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5": {
									"entryPoint": 8238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17282:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "7:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:9",
														"type": ""
													}
												],
												"src": "152:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "361:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "371:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "380:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "371:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "402:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "402:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "339:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "347:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "355:5:9",
														"type": ""
													}
												],
												"src": "301:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "515:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "506:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "474:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "482:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "490:5:9",
														"type": ""
													}
												],
												"src": "444:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "652:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "662:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "677:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "671:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "662:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "720:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "693:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "693:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "693:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "630:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "638:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "646:5:9",
														"type": ""
													}
												],
												"src": "589:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "850:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "852:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "852:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "852:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "825:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "834:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "821:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "821:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "817:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:32:9"
															},
															"nodeType": "YulIf",
															"src": "814:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "943:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "958:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "972:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "962:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "987:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1022:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1033:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1018:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1018:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1042:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "997:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "987:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "774:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "785:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "797:6:9",
														"type": ""
													}
												],
												"src": "738:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1150:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1196:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1198:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1198:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1198:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1180:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:32:9"
															},
															"nodeType": "YulIf",
															"src": "1160:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1289:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1304:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1308:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1333:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1379:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1390:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1375:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1375:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1399:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1343:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1343:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1333:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1131:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1143:6:9",
														"type": ""
													}
												],
												"src": "1073:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1559:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1561:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1561:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1561:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1534:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1543:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1530:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1530:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1555:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:32:9"
															},
															"nodeType": "YulIf",
															"src": "1523:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1652:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1667:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1681:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1671:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1696:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1731:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1742:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1727:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1727:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1751:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1706:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1706:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1696:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1779:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1794:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1798:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1824:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1859:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1870:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1855:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1855:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1879:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1834:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1834:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1824:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1475:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1486:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1498:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1506:6:9",
														"type": ""
													}
												],
												"src": "1430:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2032:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2032:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2005:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2001:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:9"
															},
															"nodeType": "YulIf",
															"src": "1994:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2123:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2138:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2142:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2167:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2210:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2221:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2206:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2206:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2230:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2177:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2177:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2167:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1954:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1965:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1977:6:9",
														"type": ""
													}
												],
												"src": "1910:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2327:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2375:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2348:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2344:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2344:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2340:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:32:9"
															},
															"nodeType": "YulIf",
															"src": "2337:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2466:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2481:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2485:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2510:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2545:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2556:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2541:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2520:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2510:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2297:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2308:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2320:6:9",
														"type": ""
													}
												],
												"src": "2261:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2673:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2719:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2721:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2721:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2721:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2694:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2703:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2690:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2690:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2715:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:32:9"
															},
															"nodeType": "YulIf",
															"src": "2683:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2812:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2827:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2841:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2831:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2856:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2902:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2913:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2898:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2898:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2922:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2866:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2643:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2654:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2666:6:9",
														"type": ""
													}
												],
												"src": "2596:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3036:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3082:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3084:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3084:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3084:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3057:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3053:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3053:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3078:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:32:9"
															},
															"nodeType": "YulIf",
															"src": "3046:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3175:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3190:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3204:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3194:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3219:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3254:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3265:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3250:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3250:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3274:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3229:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3219:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3302:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3317:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3331:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3321:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3347:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3382:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3393:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3378:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3378:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3402:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3357:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3357:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3347:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2998:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3009:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3021:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3029:6:9",
														"type": ""
													}
												],
												"src": "2953:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3513:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3557:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3565:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3523:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3578:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3596:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3601:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3592:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3578:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3486:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3494:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3502:10:9",
														"type": ""
													}
												],
												"src": "3433:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3683:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3700:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3723:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3705:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3693:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3671:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3678:3:9",
														"type": ""
													}
												],
												"src": "3618:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3896:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3906:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3968:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3920:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3910:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3983:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4064:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4069:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3990:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3983:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4085:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4150:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4100:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4089:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4165:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4179:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4169:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4255:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4269:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4296:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4290:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4290:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4273:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4316:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4367:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4382:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4323:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4323:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4316:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4399:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4462:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4409:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4409:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4399:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4217:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4220:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4214:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4214:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4228:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4230:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4239:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4242:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4235:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4235:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4230:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4199:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4201:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4210:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4205:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4195:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4488:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4495:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4488:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3875:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3882:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3891:3:9",
														"type": ""
													}
												],
												"src": "3772:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4569:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4586:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4606:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4591:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4591:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4579:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4579:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4557:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4564:3:9",
														"type": ""
													}
												],
												"src": "4510:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4771:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4781:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4847:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4852:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4788:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4953:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407",
																	"nodeType": "YulIdentifier",
																	"src": "4864:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4966:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4977:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4966:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4759:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4767:3:9",
														"type": ""
													}
												],
												"src": "4625:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5143:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5153:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5219:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5224:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5160:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5153:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5236:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5236:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5338:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5349:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5354:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5131:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5139:3:9",
														"type": ""
													}
												],
												"src": "4997:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5515:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5525:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5591:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5596:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5532:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5525:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46",
																	"nodeType": "YulIdentifier",
																	"src": "5608:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5608:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5608:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5710:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5503:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5511:3:9",
														"type": ""
													}
												],
												"src": "5369:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5887:219:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5897:73:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5963:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5904:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5904:66:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5897:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6068:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f",
																	"nodeType": "YulIdentifier",
																	"src": "5979:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5979:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6081:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6092:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6081:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5875:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:9",
														"type": ""
													}
												],
												"src": "5741:365:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6258:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6268:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6334:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6339:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6275:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6275:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6440:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5",
																	"nodeType": "YulIdentifier",
																	"src": "6351:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6453:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6464:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6469:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6460:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6246:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6254:3:9",
														"type": ""
													}
												],
												"src": "6112:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6630:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6640:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6706:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6647:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6647:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6640:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6812:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd",
																	"nodeType": "YulIdentifier",
																	"src": "6723:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6825:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6836:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6832:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6832:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6618:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6626:3:9",
														"type": ""
													}
												],
												"src": "6484:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7002:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7012:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7078:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7083:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7019:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7012:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7184:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7095:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7095:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7095:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7208:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7213:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7197:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6990:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6998:3:9",
														"type": ""
													}
												],
												"src": "6856:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7283:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7300:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7323:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7305:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7305:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7293:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7271:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7278:3:9",
														"type": ""
													}
												],
												"src": "7228:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7407:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7424:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7447:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7429:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7429:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7417:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7417:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7395:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7402:3:9",
														"type": ""
													}
												],
												"src": "7342:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7564:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7574:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7586:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7597:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7582:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7574:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7654:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7667:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7678:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7663:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7610:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7610:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7536:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7548:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7559:4:9",
														"type": ""
													}
												],
												"src": "7466:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7820:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7830:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7842:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7838:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7838:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7830:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7910:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7923:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7934:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7919:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7866:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7866:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7991:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8004:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8015:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8000:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7947:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7947:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7784:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7796:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7804:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7815:4:9",
														"type": ""
													}
												],
												"src": "7694:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8186:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8196:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8208:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8219:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8204:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8204:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8196:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8276:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8289:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8300:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8285:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8285:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8232:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8232:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8357:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8370:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8381:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8366:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8366:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8313:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8313:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8313:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8439:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8452:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8463:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8448:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8448:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8395:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8395:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8395:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8142:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8154:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8162:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8170:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8181:4:9",
														"type": ""
													}
												],
												"src": "8032:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8706:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8716:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8728:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8739:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8724:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8716:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8763:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8774:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8759:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8759:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8782:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8788:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8778:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8778:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8752:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8752:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8808:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8910:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8919:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8816:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8816:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8808:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8945:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8956:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8941:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8965:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8971:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8961:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8961:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8934:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8934:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8934:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8991:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9093:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9102:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8999:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8999:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8991:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8670:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8682:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8690:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8701:4:9",
														"type": ""
													}
												],
												"src": "8480:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9212:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9222:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9234:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9245:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9230:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9230:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9222:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9296:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9309:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9320:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9305:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9305:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9258:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9258:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9258:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9184:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9196:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9207:4:9",
														"type": ""
													}
												],
												"src": "9120:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9507:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9517:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9529:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9540:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9525:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9517:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9564:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9575:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9560:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9560:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9583:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9589:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9579:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9553:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9553:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9553:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9609:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9743:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9617:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9617:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9609:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9487:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9502:4:9",
														"type": ""
													}
												],
												"src": "9336:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9932:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9942:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9954:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9965:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9950:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9950:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9942:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9989:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10000:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9985:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9985:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10008:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10014:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10004:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10004:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9978:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9978:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10034:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10168:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10042:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10042:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10034:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9912:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9927:4:9",
														"type": ""
													}
												],
												"src": "9761:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10357:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10367:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10379:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10390:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10375:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10375:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10367:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10414:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10425:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10410:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10410:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10433:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10439:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10429:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10429:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10403:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10403:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10459:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10593:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10467:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10467:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10459:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10337:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10352:4:9",
														"type": ""
													}
												],
												"src": "10186:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10782:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10792:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10804:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10815:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10800:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10800:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10792:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10839:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10850:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10835:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10835:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10858:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10864:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10854:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10854:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10828:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10828:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10828:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10884:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11018:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10892:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10892:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10884:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10762:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10777:4:9",
														"type": ""
													}
												],
												"src": "10611:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11207:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11217:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11229:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11240:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11225:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11225:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11217:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11264:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11275:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11260:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11260:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11283:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11289:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11279:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11279:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11253:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11253:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11253:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11309:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11443:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11317:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11317:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11309:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11187:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11202:4:9",
														"type": ""
													}
												],
												"src": "11036:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11632:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11642:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11654:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11665:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11650:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11650:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11642:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11689:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11700:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11685:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11685:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11708:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11714:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11704:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11704:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11678:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11678:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11678:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11734:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11868:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11742:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11742:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11734:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11612:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11627:4:9",
														"type": ""
													}
												],
												"src": "11461:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12057:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12067:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12079:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12090:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12075:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12075:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12067:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12114:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12125:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12110:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12110:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12133:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12139:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12129:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12103:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12103:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12103:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12159:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12293:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12167:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12167:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12159:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12037:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12052:4:9",
														"type": ""
													}
												],
												"src": "11886:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12409:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12419:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12431:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12442:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12427:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12427:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12419:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12499:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12512:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12523:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12508:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12508:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12455:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12381:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12393:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12404:4:9",
														"type": ""
													}
												],
												"src": "12311:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12579:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12589:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12605:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12599:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12599:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12589:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12572:6:9",
														"type": ""
													}
												],
												"src": "12539:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12692:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12702:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12710:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12702:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12723:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12735:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12740:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12731:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12731:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12723:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12679:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12687:4:9",
														"type": ""
													}
												],
												"src": "12620:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12832:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12843:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12859:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12853:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12853:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12843:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12815:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12825:6:9",
														"type": ""
													}
												],
												"src": "12758:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12953:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12963:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12975:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12980:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12971:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12971:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "12963:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12940:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "12948:4:9",
														"type": ""
													}
												],
												"src": "12878:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13108:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13125:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13130:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13118:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13118:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13118:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13146:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13165:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13170:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13161:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13161:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13146:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13080:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13085:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13096:11:9",
														"type": ""
													}
												],
												"src": "12997:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13283:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13300:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13305:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13293:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13293:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13321:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13340:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13345:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13336:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13321:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13255:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13260:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13271:11:9",
														"type": ""
													}
												],
												"src": "13187:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13404:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13414:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13437:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13419:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13419:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13414:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13448:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13471:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13453:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13453:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13448:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13495:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13497:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13497:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13497:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13492:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13485:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13485:9:9"
															},
															"nodeType": "YulIf",
															"src": "13482:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13527:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13536:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13539:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13532:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13532:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13527:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13393:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13396:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13402:1:9",
														"type": ""
													}
												],
												"src": "13362:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13601:300:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13611:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13634:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13616:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13616:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13611:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13645:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13668:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13650:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13650:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13645:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13843:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13845:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13845:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13845:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13755:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13748:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13748:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13741:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13741:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13763:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13770:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13838:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13766:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13766:74:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13760:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13760:81:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13737:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13737:105:9"
															},
															"nodeType": "YulIf",
															"src": "13734:131:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13875:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13890:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13893:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13886:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13886:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13875:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13584:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13587:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13593:7:9",
														"type": ""
													}
												],
												"src": "13553:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13952:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13962:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13991:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13973:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13973:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13962:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13934:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13944:7:9",
														"type": ""
													}
												],
												"src": "13907:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14051:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14061:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14086:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14079:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14079:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14072:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14072:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14061:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14033:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14043:7:9",
														"type": ""
													}
												],
												"src": "14009:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14150:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14160:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14175:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14182:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14171:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14171:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14160:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14132:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14142:7:9",
														"type": ""
													}
												],
												"src": "14105:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14282:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14292:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14303:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14292:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14264:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14274:7:9",
														"type": ""
													}
												],
												"src": "14237:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14363:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14373:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14400:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14382:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14382:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14373:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14496:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14498:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14498:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14498:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14421:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14428:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14418:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:77:9"
															},
															"nodeType": "YulIf",
															"src": "14415:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14527:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14538:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14545:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14534:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14534:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14527:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14349:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14359:3:9",
														"type": ""
													}
												],
												"src": "14320:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14587:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14607:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14597:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14597:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14701:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14704:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14694:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14694:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14694:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14725:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14728:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14718:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14718:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14718:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14559:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14790:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14793:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14783:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14783:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14887:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14890:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14880:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14880:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14880:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14911:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14914:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14904:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14904:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14904:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14745:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14959:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14976:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14979:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14969:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14969:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14969:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15073:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15076:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15066:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15066:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15066:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15097:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15100:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15090:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15090:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15090:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14931:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15145:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15162:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15165:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15155:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15155:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15259:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15262:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15252:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15252:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15283:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15286:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15276:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15276:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15276:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15117:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15392:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15409:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15412:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15402:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15402:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15402:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "15303:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15515:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15532:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15535:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15525:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15525:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15525:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15426:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15655:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15677:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15685:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15673:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15673:14:9"
																	},
																	{
																		"hexValue": "73656c6c6572206e6565642068617665207468697320746f6b656e6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15689:31:9",
																		"type": "",
																		"value": "seller need have this tokenid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15666:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15666:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15647:6:9",
														"type": ""
													}
												],
												"src": "15549:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15840:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15862:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15870:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15858:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15858:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15874:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15851:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15851:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15851:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15930:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15938:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15926:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15926:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15943:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15919:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15919:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15919:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15832:6:9",
														"type": ""
													}
												],
												"src": "15734:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16071:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16093:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16101:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16089:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16089:14:9"
																	},
																	{
																		"hexValue": "46726f6d20616e6420546f2063616e206e6f742073616d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16105:26:9",
																		"type": "",
																		"value": "From and To can not same"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16082:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16082:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16082:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16063:6:9",
														"type": ""
													}
												],
												"src": "15965:174:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16251:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16273:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16281:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16269:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16269:14:9"
																	},
																	{
																		"hexValue": "5072696365203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16285:11:9",
																		"type": "",
																		"value": "Price > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16262:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16262:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16262:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16243:6:9",
														"type": ""
													}
												],
												"src": "16145:159:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16416:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16438:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16446:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16434:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16434:14:9"
																	},
																	{
																		"hexValue": "596f75206e65656420417070726f766520466f7220416c6c20746f2074686973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16450:34:9",
																		"type": "",
																		"value": "You need Approve For All to this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16427:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16427:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16427:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16506:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16514:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16502:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16502:15:9"
																	},
																	{
																		"hexValue": "20636f6e74616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16519:10:9",
																		"type": "",
																		"value": " contact"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16495:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16495:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16495:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16408:6:9",
														"type": ""
													}
												],
												"src": "16310:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16649:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16671:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16679:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16667:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16667:14:9"
																	},
																	{
																		"hexValue": "416464726573732063616e206e6f74207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16683:22:9",
																		"type": "",
																		"value": "Address can not zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16660:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16660:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16660:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16641:6:9",
														"type": ""
													}
												],
												"src": "16543:170:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16825:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16847:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16855:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16843:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16843:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16859:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16836:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16836:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16836:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16817:6:9",
														"type": ""
													}
												],
												"src": "16719:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16950:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17007:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17016:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17019:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17009:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17009:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17009:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16973:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16998:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "16980:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16980:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16970:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16970:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16963:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16963:43:9"
															},
															"nodeType": "YulIf",
															"src": "16960:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16943:5:9",
														"type": ""
													}
												],
												"src": "16907:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17075:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17129:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17138:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17141:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17131:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17131:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17131:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17098:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17120:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17105:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17105:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17095:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17095:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17088:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17088:40:9"
															},
															"nodeType": "YulIf",
															"src": "17085:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17068:5:9",
														"type": ""
													}
												],
												"src": "17035:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17200:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17257:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17266:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17269:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17259:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17259:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17259:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17223:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17248:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17230:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17230:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17220:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17220:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17213:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17213:43:9"
															},
															"nodeType": "YulIf",
															"src": "17210:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17193:5:9",
														"type": ""
													}
												],
												"src": "17157:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407(memPtr) {\n\n        mstore(add(memPtr, 0), \"seller need have this tokenid\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46(memPtr) {\n\n        mstore(add(memPtr, 0), \"From and To can not same\")\n\n    }\n\n    function store_literal_in_memory_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price > 0\")\n\n    }\n\n    function store_literal_in_memory_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"You need Approve For All to this\")\n\n        mstore(add(memPtr, 32), \" contact\")\n\n    }\n\n    function store_literal_in_memory_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address can not zero\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101585760003560e01c80638456cb59116100c3578063bcfcba761161007c578063bcfcba761461036c578063d88827791461038a578063de281e28146103a8578063ea156f44146103c4578063f0f44260146103e2578063f2fde38b146103fe57610158565b80638456cb59146102b95780638da5cb5b146102d75780638f32d59b146102f557806399bc1bfb14610313578063a888a93a14610332578063b56202291461034e57610158565b8063563df32f11610115578063563df32f1461020b57806359464217146102295780635c975abb146102595780635c9e0d1014610277578063715018a61461029357806383d582151461029d57610158565b80630ff328391461015d5780631ecff38e1461017b57806336c3b4e2146101975780633f4ba83a146101b5578063458a635a146101d35780634dd79f10146101ef575b600080fd5b61016561041a565b6040516101729190611b75565b60405180910390f35b6101956004803603810190610190919061186d565b610440565b005b61019f610524565b6040516101ac9190611b75565b60405180910390f35b6101bd61054a565b6040516101ca9190611c27565b60405180910390f35b6101ed60048036038101906101e8919061186d565b6105f9565b005b61020960048036038101906102049190611934565b6106dd565b005b6102136108a3565b6040516102209190611b75565b60405180910390f35b610243600480360381019061023e9190611934565b6108c9565b6040516102509190611b75565b60405180910390f35b610261610906565b60405161026e9190611c27565b60405180910390f35b610291600480360381019061028c91906118c7565b610919565b005b61029b610beb565b005b6102b760048036038101906102b2919061198e565b610cf0565b005b6102c1610f9c565b6040516102ce9190611c27565b60405180910390f35b6102df61104d565b6040516102ec9190611b75565b60405180910390f35b6102fd611076565b60405161030a9190611c27565b60405180910390f35b61031b6110d4565b604051610329929190611bf0565b60405180910390f35b61034c6004803603810190610347919061186d565b6111fd565b005b6103566112e1565b6040516103639190611b75565b60405180910390f35b610374611307565b6040516103819190611d22565b60405180910390f35b61039261130d565b60405161039f9190611b75565b60405180910390f35b6103c260048036038101906103bd9190611934565b611333565b005b6103cc6113bd565b6040516103d99190611d22565b60405180910390f35b6103fc60048036038101906103f7919061186d565b611598565b005b6104186004803603810190610413919061186d565b61167c565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610448611076565b610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e90611d02565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f136742181ff5fc7d13f647a125112ec36500105a024ce2dbbb7f28fa375eebfa600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516105199190611b75565b60405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610554611076565b610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90611d02565b60405180910390fd5b600060149054906101000a900460ff166105ac57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a16001905090565b610601611076565b610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063790611d02565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb01e01d90e1da4079495db07c84276ef34a0ea39cd9be9c3844874eb35616e44600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516106d29190611b75565b60405180910390a150565b600060149054906101000a900460ff16156106f757600080fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161076e9190611d22565b60206040518083038186803b15801561078657600080fd5b505afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be919061189a565b73ffffffffffffffffffffffffffffffffffffffff1614610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90611c42565b60405180910390fd5b600860008381526020019081526020016000206000905560005b60098054905081101561089d5782600982815481106108505761084f611f01565b5b9060005260206000200154141561088a576009818154811061087557610874611f01565b5b906000526020600020016000905550506108a0565b808061089590611e5a565b91505061082e565b50505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060149054906101000a900460ff1681565b600060149054906101000a900460ff161561093357600080fd5b6000339050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582306040518363ffffffff1660e01b8152600401610995929190611b90565b60206040518083038186803b1580156109ad57600080fd5b505afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190611907565b610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b90611cc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611ce2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa90611c82565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8285856040518463ffffffff1660e01b8152600401610b6293929190611bb9565b600060405180830381600087803b158015610b7c57600080fd5b505af1158015610b90573d6000803e3d6000fd5b50505050826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b610bf3611076565b610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2990611d02565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610d0a57600080fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610d819190611d22565b60206040518083038186803b158015610d9957600080fd5b505afa158015610dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd1919061189a565b73ffffffffffffffffffffffffffffffffffffffff1614610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e90611c42565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582306040518363ffffffff1660e01b8152600401610e84929190611b90565b60206040518083038186803b158015610e9c57600080fd5b505afa158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed49190611907565b610f13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0a90611cc2565b60405180910390fd5b60008211610f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4d90611ca2565b60405180910390fd5b8160086000858152602001908152602001600020819055506009839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b6000610fa6611076565b610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc90611d02565b60405180910390fd5b600060149054906101000a900460ff1615610fff57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a16001905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110b86116cf565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6060806000600980549050905060008167ffffffffffffffff8111156110fd576110fc611f30565b5b60405190808252806020026020018201604052801561112b5781602001602082028036833780820191505090505b50905060005b8281101561119d57600860006009838154811061115157611150611f01565b5b906000526020600020015481526020019081526020016000205482828151811061117e5761117d611f01565b5b602002602001018181525050808061119590611e5a565b915050611131565b50600981818054806020026020016040519081016040528092919081815260200182805480156111ec57602002820191906000526020600020905b8154815260200190600101908083116111d8575b505050505091509350935050509091565b611205611076565b611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123b90611d02565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507facdd85d235b5b49226c2c4f2b72cb01fa1cc3ae64bb843a6def27788d05b1b60600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516112d69190611b75565b60405180910390a150565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61133b611076565b61137a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137190611d02565b60405180910390fd5b806006819055507f4d8e30ff458bebdd848488669e63d632954487ca1bc64c28f3c920f74a5f85946006546040516113b29190611d22565b60405180910390a150565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161143d9190611b75565b60206040518083038186803b15801561145557600080fd5b505afa158015611469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148d9190611961565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161150e9190611b75565b60206040518083038186803b15801561152657600080fd5b505afa15801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e9190611961565b90506000828261156e9190611d87565b90506000600a600654836115829190611db8565b61158c9190611d87565b90508094505050505090565b6115a0611076565b6115df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d690611d02565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb14f2a39bb21fda32827bbdb4be629c94036e10a3f6055a6454f884ca1b33fa1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516116719190611b75565b60405180910390a150565b611684611076565b6116c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ba90611d02565b60405180910390fd5b6116cc816116d7565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173e90611c62565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050611813816120cf565b92915050565b600081519050611828816120cf565b92915050565b60008151905061183d816120e6565b92915050565b600081359050611852816120fd565b92915050565b600081519050611867816120fd565b92915050565b60006020828403121561188357611882611f5f565b5b600061189184828501611804565b91505092915050565b6000602082840312156118b0576118af611f5f565b5b60006118be84828501611819565b91505092915050565b600080604083850312156118de576118dd611f5f565b5b60006118ec85828601611804565b92505060206118fd85828601611843565b9150509250929050565b60006020828403121561191d5761191c611f5f565b5b600061192b8482850161182e565b91505092915050565b60006020828403121561194a57611949611f5f565b5b600061195884828501611843565b91505092915050565b60006020828403121561197757611976611f5f565b5b600061198584828501611858565b91505092915050565b600080604083850312156119a5576119a4611f5f565b5b60006119b385828601611843565b92505060206119c485828601611843565b9150509250929050565b60006119da8383611b57565b60208301905092915050565b6119ef81611e12565b82525050565b6000611a0082611d4d565b611a0a8185611d65565b9350611a1583611d3d565b8060005b83811015611a46578151611a2d88826119ce565b9750611a3883611d58565b925050600181019050611a19565b5085935050505092915050565b611a5c81611e24565b82525050565b6000611a6f601d83611d76565b9150611a7a82611f64565b602082019050919050565b6000611a92602683611d76565b9150611a9d82611f8d565b604082019050919050565b6000611ab5601883611d76565b9150611ac082611fdc565b602082019050919050565b6000611ad8600983611d76565b9150611ae382612005565b602082019050919050565b6000611afb602883611d76565b9150611b068261202e565b604082019050919050565b6000611b1e601483611d76565b9150611b298261207d565b602082019050919050565b6000611b41602083611d76565b9150611b4c826120a6565b602082019050919050565b611b6081611e50565b82525050565b611b6f81611e50565b82525050565b6000602082019050611b8a60008301846119e6565b92915050565b6000604082019050611ba560008301856119e6565b611bb260208301846119e6565b9392505050565b6000606082019050611bce60008301866119e6565b611bdb60208301856119e6565b611be86040830184611b66565b949350505050565b60006040820190508181036000830152611c0a81856119f5565b90508181036020830152611c1e81846119f5565b90509392505050565b6000602082019050611c3c6000830184611a53565b92915050565b60006020820190508181036000830152611c5b81611a62565b9050919050565b60006020820190508181036000830152611c7b81611a85565b9050919050565b60006020820190508181036000830152611c9b81611aa8565b9050919050565b60006020820190508181036000830152611cbb81611acb565b9050919050565b60006020820190508181036000830152611cdb81611aee565b9050919050565b60006020820190508181036000830152611cfb81611b11565b9050919050565b60006020820190508181036000830152611d1b81611b34565b9050919050565b6000602082019050611d376000830184611b66565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611d9282611e50565b9150611d9d83611e50565b925082611dad57611dac611ed2565b5b828204905092915050565b6000611dc382611e50565b9150611dce83611e50565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e0757611e06611ea3565b5b828202905092915050565b6000611e1d82611e30565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611e6582611e50565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e9857611e97611ea3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f73656c6c6572206e6565642068617665207468697320746f6b656e6964000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f46726f6d20616e6420546f2063616e206e6f742073616d650000000000000000600082015250565b7f5072696365203e20300000000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420417070726f766520466f7220416c6c20746f207468697360008201527f20636f6e74616374000000000000000000000000000000000000000000000000602082015250565b7f416464726573732063616e206e6f74207a65726f000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6120d881611e12565b81146120e357600080fd5b50565b6120ef81611e24565b81146120fa57600080fd5b50565b61210681611e50565b811461211157600080fd5b5056fea26469706673582212204b7841484b5ebc77760b1cbd2ff12b8676e12193383196d4f1073069d731b90564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xBCFCBA76 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBCFCBA76 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD8882779 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xDE281E28 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xEA156F44 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FE JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x99BC1BFB EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA888A93A EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xB5620229 EQ PUSH2 0x34E JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x563DF32F GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x563DF32F EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x59464217 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x5C9E0D10 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x83D58215 EQ PUSH2 0x29D JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0xFF32839 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x1ECFF38E EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x36C3B4E2 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x458A635A EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x4DD79F10 EQ PUSH2 0x1EF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0xBEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x11FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x1333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x167C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x136742181FF5FC7D13F647A125112EC36500105A024CE2DBBB7F28FA375EEBFA PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x601 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x637 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB01E01D90E1DA4079495DB07C84276EF34A0EA39CD9BE9C3844874EB35616E44 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x89D JUMPI DUP3 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x850 JUMPI PUSH2 0x84F PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0x8A0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x895 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x82E JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP3 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFA SWAP1 PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB62 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xBF3 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC29 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH2 0xF13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0A SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10B8 PUSH2 0x16CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FD JUMPI PUSH2 0x10FC PUSH2 0x1F30 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x112B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x119D JUMPI PUSH1 0x8 PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x117E JUMPI PUSH2 0x117D PUSH2 0x1F01 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x1195 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1131 JUMP JUMPDEST POP PUSH1 0x9 DUP2 DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x11EC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x11D8 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123B SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xACDD85D235B5B49226C2C4F2B72CB01FA1CC3AE64BB843A6DEF27788D05B1B60 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x12D6 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x133B PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1371 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x4D8E30FF458BEBDD848488669E63D632954487CA1BC64C28F3C920F74A5F8594 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x13B2 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x156E SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x6 SLOAD DUP4 PUSH2 0x1582 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x15DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D6 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB14F2A39BB21FDA32827BBDB4BE629C94036E10A3F6055A6454F884CA1B33FA1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1684 PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x16C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BA SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x16D7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173E SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1813 DUP2 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1828 DUP2 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x183D DUP2 PUSH2 0x20E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1852 DUP2 PUSH2 0x20FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1867 DUP2 PUSH2 0x20FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1891 DUP5 DUP3 DUP6 ADD PUSH2 0x1804 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B0 JUMPI PUSH2 0x18AF PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BE DUP5 DUP3 DUP6 ADD PUSH2 0x1819 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18EC DUP6 DUP3 DUP7 ADD PUSH2 0x1804 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18FD DUP6 DUP3 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194A JUMPI PUSH2 0x1949 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP5 DUP3 DUP6 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1977 JUMPI PUSH2 0x1976 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP5 DUP3 DUP6 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C4 DUP6 DUP3 DUP7 ADD PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DA DUP4 DUP4 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EF DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A00 DUP3 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x1A0A DUP2 DUP6 PUSH2 0x1D65 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A15 DUP4 PUSH2 0x1D3D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A46 JUMPI DUP2 MLOAD PUSH2 0x1A2D DUP9 DUP3 PUSH2 0x19CE JUMP JUMPDEST SWAP8 POP PUSH2 0x1A38 DUP4 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A19 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6F PUSH1 0x1D DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7A DUP3 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A92 PUSH1 0x26 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9D DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB5 PUSH1 0x18 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC0 DUP3 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 PUSH1 0x9 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE3 DUP3 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFB PUSH1 0x28 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B06 DUP3 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E PUSH1 0x14 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B29 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B41 PUSH1 0x20 DUP4 PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4C DUP3 PUSH2 0x20A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B60 DUP2 PUSH2 0x1E50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B6F DUP2 PUSH2 0x1E50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BCE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1BDB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1BE8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C0A DUP2 DUP6 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C1E DUP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5B DUP2 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7B DUP2 PUSH2 0x1A85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9B DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBB DUP2 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CDB DUP2 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFB DUP2 PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D1B DUP2 PUSH2 0x1B34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 DUP3 PUSH2 0x1E50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9D DUP4 PUSH2 0x1E50 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DAD JUMPI PUSH2 0x1DAC PUSH2 0x1ED2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC3 DUP3 PUSH2 0x1E50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCE DUP4 PUSH2 0x1E50 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1EA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E65 DUP3 PUSH2 0x1E50 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1E98 JUMPI PUSH2 0x1E97 PUSH2 0x1EA3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x73656C6C6572206E6565642068617665207468697320746F6B656E6964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x46726F6D20616E6420546F2063616E206E6F742073616D650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365203E20300000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206E65656420417070726F766520466F7220416C6C20746F2074686973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636F6E74616374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573732063616E206E6F74207A65726F000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20EF DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP2 EQ PUSH2 0x20FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2106 DUP2 PUSH2 0x1E50 JUMP JUMPDEST DUP2 EQ PUSH2 0x2111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B PUSH25 0x41484B5EBC77760B1CBD2FF12B8676E12193383196D4F10730 PUSH10 0xD731B90564736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "229:4086:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1718:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;301:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:124:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1529:183:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3466:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;272:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2843:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;272:26:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2355:483:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1630:127:2;;;:::i;:::-;;2976:484:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;666:122:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;899:71:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1218:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3926:387:8;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1376:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;369:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;434:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;332:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1877:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2008:341;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1896:101:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;401:27:8;;;;;;;;;;;;;:::o;1718:153::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1807:12:8::1;1793:11;;:26;;;;;;;;;;;;;;;;;;1834:30;1852:11;;;;;;;;;;;1834:30;;;;;;:::i;:::-;;;;;;;;1718:153:::0;:::o;301:25::-;;;;;;;;;;;;;:::o;870:124:3:-;926:4;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;568:6:3::1;;;;;;;;;;;560:15;;;::::0;::::1;;947:5:::2;938:6:::0;::::2;:14;;;;;;;;;;;;;;;;;;963:9;;;;;;;;;;985:4;978:11;;870:124:::0;:::o;1529:183:8:-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1633:17:8::1;1614:16;;:36;;;;;;;;;;;;;;;;;;1665:40;1688:16;;;;;;;;;;;1665:40;;;;;;:::i;:::-;;;;;;;;1529:183:::0;:::o;3466:454::-;424:6:3;;;;;;;;;;;423:7;415:16;;;;;;3544:14:8::1;3561:10;3544:27;;3645:6;3589:62;;3607:16;;;;;;;;;;;3589:43;;;3633:7;3589:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;3581:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:10;:19;3712:7;3701:19;;;;;;;;;;;3694:26;;;3734:9;3730:184;3753:13;:20;;;;3749:1;:24;3730:184;;;3816:7;3796:13;3810:1;3796:16;;;;;;;;:::i;:::-;;;;;;;;;;:27;3793:111;;;3849:13;3863:1;3849:16;;;;;;;;:::i;:::-;;;;;;;;;3842:23;;;3883:7;;;;3793:111;3775:3;;;;;:::i;:::-;;;;3730:184;;;;3534:386;437:1:3;3466:454:8::0;:::o;272:23::-;;;;;;;;;;;;;:::o;2843:127::-;2916:7;2942:12;:21;2955:7;2942:21;;;;;;;;;;;;;;;;;;;;;2935:28;;2843:127;;;:::o;272:26:3:-;;;;;;;;;;;;;:::o;2355:483:8:-;424:6:3;;;;;;;;;;;423:7;415:16;;;;;;2442:12:8::1;2457:10;2442:25;;2503:16;;;;;;;;;;;2485:52;;;2538:4;2551;2485:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2477:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;2633:1;2619:16;;:2;:16;;;;2611:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2683:4;2677:10;;:2;:10;;;;2669:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2743:16;;;;;;;;;;;2725:52;;;2778:4;2784:2;2787:7;2725:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2829:2;2805:12;:21;2818:7;2805:21;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2432:406;2355:483:::0;;:::o;1630:127:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:1:::1;1687:40;;1708:6;::::0;::::1;;;;;;;;1687:40;;;;;;;;;;;;1750:1;1733:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1630:127::o:0;2976:484:8:-;424:6:3;;;;;;;;;;;423:7;415:16;;;;;;3062:14:8::1;3079:10;3062:27;;3163:6;3107:62;;3125:16;;;;;;;;;;;3107:43;;;3151:7;3107:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;3099:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;3238:16;;;;;;;;;;;3220:52;;;3273:6;3288:4;3220:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3212:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;3364:1;3356:5;:9;3348:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;3411:5;3389:10;:19;3400:7;3389:19;;;;;;;;;;;:27;;;;3426:13;3445:7;3426:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3052:408;2976:484:::0;;:::o;666:122:3:-;723:4;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;424:6:3::1;;;;;;;;;;;423:7;415:16;;;::::0;::::1;;744:4:::2;735:6;;:13;;;;;;;;;;;;;;;;;;759:7;;;;;;;;;;779:4;772:11;;666:122:::0;:::o;899:71:2:-;937:7;959:6;;;;;;;;;;;952:13;;899:71;:::o;1218:86::-;1258:4;1293:6;;;;;;;;;;;1277:22;;:12;:10;:12::i;:::-;:22;;;1270:29;;1218:86;:::o;3926:387:8:-;3976:25;4003:23;4038;4064:13;:20;;;;4038:46;;4094:22;4133:15;4119:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4094:55;;4164:9;4159:110;4183:15;4179:1;:19;4159:110;;;4230:10;:28;4241:13;4255:1;4241:16;;;;;;;;:::i;:::-;;;;;;;;;;4230:28;;;;;;;;;;;;4219:5;4225:1;4219:8;;;;;;;;:::i;:::-;;;;;;;:39;;;;;4200:3;;;;;:::i;:::-;;;;4159:110;;;;4286:13;4300:5;4278:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3926:387;;:::o;1376:147::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1462:11:8::1;1449:10;;:24;;;;;;;;;;;;;;;;;;1488:28;1505:10;;;;;;;;;;;1488:28;;;;;;:::i;:::-;;;;;;;;1376:147:::0;:::o;369:26::-;;;;;;;;;;;;;:::o;434:21::-;;;;:::o;332:31::-;;;;;;;;;;;;;:::o;1877:124::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1952:7:8::1;1943:6;:16;;;;1974:20;1987:6;;1974:20;;;;;;:::i;:::-;;;;;;;;1877:124:::0;:::o;2008:341::-;2060:7;2079:19;2108:12;;;;;;;;;;;2101:30;;;2132:10;;;;;;;;;;;2101:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2079:64;;2153:18;2181:11;;;;;;;;;;;2174:29;;;2204:10;;;;;;;;;;;2174:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2153:62;;2225:16;2255:11;2244:10;:22;;;;:::i;:::-;2225:41;;2276:16;2315:2;2306:6;;2295:8;:17;;;;:::i;:::-;:22;;;;:::i;:::-;2276:41;;2334:8;2327:15;;;;;;2008:341;:::o;1234:135::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1314:9:8::1;1303:8;;:20;;;;;;;;;;;;;;;;;;1338:24;1353:8;;;;;;;;;;;1338:24;;;;;;:::i;:::-;;;;;;;;1234:135:::0;:::o;1896:101:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1964:28:::1;1983:8;1964:18;:28::i;:::-;1896:101:::0;:::o;760:99:1:-;805:15;843:10;828:26;;760:99;:::o;2090:211:2:-;2179:1;2159:22;;:8;:22;;;;2151:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:8;2235:38;;2256:6;;;;;;;;;;2235:38;;;;;;;;;;;;2288:8;2279:6;;:17;;;;;;;;;;;;;;;;;;2090:211;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:137::-;355:5;386:6;380:13;371:22;;402:30;426:5;402:30;:::i;:::-;301:137;;;;:::o;444:139::-;490:5;528:6;515:20;506:29;;544:33;571:5;544:33;:::i;:::-;444:139;;;;:::o;589:143::-;646:5;677:6;671:13;662:22;;693:33;720:5;693:33;:::i;:::-;589:143;;;;:::o;738:329::-;797:6;846:2;834:9;825:7;821:23;817:32;814:119;;;852:79;;:::i;:::-;814:119;972:1;997:53;1042:7;1033:6;1022:9;1018:22;997:53;:::i;:::-;987:63;;943:117;738:329;;;;:::o;1073:351::-;1143:6;1192:2;1180:9;1171:7;1167:23;1163:32;1160:119;;;1198:79;;:::i;:::-;1160:119;1318:1;1343:64;1399:7;1390:6;1379:9;1375:22;1343:64;:::i;:::-;1333:74;;1289:128;1073:351;;;;:::o;1430:474::-;1498:6;1506;1555:2;1543:9;1534:7;1530:23;1526:32;1523:119;;;1561:79;;:::i;:::-;1523:119;1681:1;1706:53;1751:7;1742:6;1731:9;1727:22;1706:53;:::i;:::-;1696:63;;1652:117;1808:2;1834:53;1879:7;1870:6;1859:9;1855:22;1834:53;:::i;:::-;1824:63;;1779:118;1430:474;;;;;:::o;1910:345::-;1977:6;2026:2;2014:9;2005:7;2001:23;1997:32;1994:119;;;2032:79;;:::i;:::-;1994:119;2152:1;2177:61;2230:7;2221:6;2210:9;2206:22;2177:61;:::i;:::-;2167:71;;2123:125;1910:345;;;;:::o;2261:329::-;2320:6;2369:2;2357:9;2348:7;2344:23;2340:32;2337:119;;;2375:79;;:::i;:::-;2337:119;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2261:329;;;;:::o;2596:351::-;2666:6;2715:2;2703:9;2694:7;2690:23;2686:32;2683:119;;;2721:79;;:::i;:::-;2683:119;2841:1;2866:64;2922:7;2913:6;2902:9;2898:22;2866:64;:::i;:::-;2856:74;;2812:128;2596:351;;;;:::o;2953:474::-;3021:6;3029;3078:2;3066:9;3057:7;3053:23;3049:32;3046:119;;;3084:79;;:::i;:::-;3046:119;3204:1;3229:53;3274:7;3265:6;3254:9;3250:22;3229:53;:::i;:::-;3219:63;;3175:117;3331:2;3357:53;3402:7;3393:6;3382:9;3378:22;3357:53;:::i;:::-;3347:63;;3302:118;2953:474;;;;;:::o;3433:179::-;3502:10;3523:46;3565:3;3557:6;3523:46;:::i;:::-;3601:4;3596:3;3592:14;3578:28;;3433:179;;;;:::o;3618:118::-;3705:24;3723:5;3705:24;:::i;:::-;3700:3;3693:37;3618:118;;:::o;3772:732::-;3891:3;3920:54;3968:5;3920:54;:::i;:::-;3990:86;4069:6;4064:3;3990:86;:::i;:::-;3983:93;;4100:56;4150:5;4100:56;:::i;:::-;4179:7;4210:1;4195:284;4220:6;4217:1;4214:13;4195:284;;;4296:6;4290:13;4323:63;4382:3;4367:13;4323:63;:::i;:::-;4316:70;;4409:60;4462:6;4409:60;:::i;:::-;4399:70;;4255:224;4242:1;4239;4235:9;4230:14;;4195:284;;;4199:14;4495:3;4488:10;;3896:608;;;3772:732;;;;:::o;4510:109::-;4591:21;4606:5;4591:21;:::i;:::-;4586:3;4579:34;4510:109;;:::o;4625:366::-;4767:3;4788:67;4852:2;4847:3;4788:67;:::i;:::-;4781:74;;4864:93;4953:3;4864:93;:::i;:::-;4982:2;4977:3;4973:12;4966:19;;4625:366;;;:::o;4997:::-;5139:3;5160:67;5224:2;5219:3;5160:67;:::i;:::-;5153:74;;5236:93;5325:3;5236:93;:::i;:::-;5354:2;5349:3;5345:12;5338:19;;4997:366;;;:::o;5369:::-;5511:3;5532:67;5596:2;5591:3;5532:67;:::i;:::-;5525:74;;5608:93;5697:3;5608:93;:::i;:::-;5726:2;5721:3;5717:12;5710:19;;5369:366;;;:::o;5741:365::-;5883:3;5904:66;5968:1;5963:3;5904:66;:::i;:::-;5897:73;;5979:93;6068:3;5979:93;:::i;:::-;6097:2;6092:3;6088:12;6081:19;;5741:365;;;:::o;6112:366::-;6254:3;6275:67;6339:2;6334:3;6275:67;:::i;:::-;6268:74;;6351:93;6440:3;6351:93;:::i;:::-;6469:2;6464:3;6460:12;6453:19;;6112:366;;;:::o;6484:::-;6626:3;6647:67;6711:2;6706:3;6647:67;:::i;:::-;6640:74;;6723:93;6812:3;6723:93;:::i;:::-;6841:2;6836:3;6832:12;6825:19;;6484:366;;;:::o;6856:::-;6998:3;7019:67;7083:2;7078:3;7019:67;:::i;:::-;7012:74;;7095:93;7184:3;7095:93;:::i;:::-;7213:2;7208:3;7204:12;7197:19;;6856:366;;;:::o;7228:108::-;7305:24;7323:5;7305:24;:::i;:::-;7300:3;7293:37;7228:108;;:::o;7342:118::-;7429:24;7447:5;7429:24;:::i;:::-;7424:3;7417:37;7342:118;;:::o;7466:222::-;7559:4;7597:2;7586:9;7582:18;7574:26;;7610:71;7678:1;7667:9;7663:17;7654:6;7610:71;:::i;:::-;7466:222;;;;:::o;7694:332::-;7815:4;7853:2;7842:9;7838:18;7830:26;;7866:71;7934:1;7923:9;7919:17;7910:6;7866:71;:::i;:::-;7947:72;8015:2;8004:9;8000:18;7991:6;7947:72;:::i;:::-;7694:332;;;;;:::o;8032:442::-;8181:4;8219:2;8208:9;8204:18;8196:26;;8232:71;8300:1;8289:9;8285:17;8276:6;8232:71;:::i;:::-;8313:72;8381:2;8370:9;8366:18;8357:6;8313:72;:::i;:::-;8395;8463:2;8452:9;8448:18;8439:6;8395:72;:::i;:::-;8032:442;;;;;;:::o;8480:634::-;8701:4;8739:2;8728:9;8724:18;8716:26;;8788:9;8782:4;8778:20;8774:1;8763:9;8759:17;8752:47;8816:108;8919:4;8910:6;8816:108;:::i;:::-;8808:116;;8971:9;8965:4;8961:20;8956:2;8945:9;8941:18;8934:48;8999:108;9102:4;9093:6;8999:108;:::i;:::-;8991:116;;8480:634;;;;;:::o;9120:210::-;9207:4;9245:2;9234:9;9230:18;9222:26;;9258:65;9320:1;9309:9;9305:17;9296:6;9258:65;:::i;:::-;9120:210;;;;:::o;9336:419::-;9502:4;9540:2;9529:9;9525:18;9517:26;;9589:9;9583:4;9579:20;9575:1;9564:9;9560:17;9553:47;9617:131;9743:4;9617:131;:::i;:::-;9609:139;;9336:419;;;:::o;9761:::-;9927:4;9965:2;9954:9;9950:18;9942:26;;10014:9;10008:4;10004:20;10000:1;9989:9;9985:17;9978:47;10042:131;10168:4;10042:131;:::i;:::-;10034:139;;9761:419;;;:::o;10186:::-;10352:4;10390:2;10379:9;10375:18;10367:26;;10439:9;10433:4;10429:20;10425:1;10414:9;10410:17;10403:47;10467:131;10593:4;10467:131;:::i;:::-;10459:139;;10186:419;;;:::o;10611:::-;10777:4;10815:2;10804:9;10800:18;10792:26;;10864:9;10858:4;10854:20;10850:1;10839:9;10835:17;10828:47;10892:131;11018:4;10892:131;:::i;:::-;10884:139;;10611:419;;;:::o;11036:::-;11202:4;11240:2;11229:9;11225:18;11217:26;;11289:9;11283:4;11279:20;11275:1;11264:9;11260:17;11253:47;11317:131;11443:4;11317:131;:::i;:::-;11309:139;;11036:419;;;:::o;11461:::-;11627:4;11665:2;11654:9;11650:18;11642:26;;11714:9;11708:4;11704:20;11700:1;11689:9;11685:17;11678:47;11742:131;11868:4;11742:131;:::i;:::-;11734:139;;11461:419;;;:::o;11886:::-;12052:4;12090:2;12079:9;12075:18;12067:26;;12139:9;12133:4;12129:20;12125:1;12114:9;12110:17;12103:47;12167:131;12293:4;12167:131;:::i;:::-;12159:139;;11886:419;;;:::o;12311:222::-;12404:4;12442:2;12431:9;12427:18;12419:26;;12455:71;12523:1;12512:9;12508:17;12499:6;12455:71;:::i;:::-;12311:222;;;;:::o;12620:132::-;12687:4;12710:3;12702:11;;12740:4;12735:3;12731:14;12723:22;;12620:132;;;:::o;12758:114::-;12825:6;12859:5;12853:12;12843:22;;12758:114;;;:::o;12878:113::-;12948:4;12980;12975:3;12971:14;12963:22;;12878:113;;;:::o;12997:184::-;13096:11;13130:6;13125:3;13118:19;13170:4;13165:3;13161:14;13146:29;;12997:184;;;;:::o;13187:169::-;13271:11;13305:6;13300:3;13293:19;13345:4;13340:3;13336:14;13321:29;;13187:169;;;;:::o;13362:185::-;13402:1;13419:20;13437:1;13419:20;:::i;:::-;13414:25;;13453:20;13471:1;13453:20;:::i;:::-;13448:25;;13492:1;13482:35;;13497:18;;:::i;:::-;13482:35;13539:1;13536;13532:9;13527:14;;13362:185;;;;:::o;13553:348::-;13593:7;13616:20;13634:1;13616:20;:::i;:::-;13611:25;;13650:20;13668:1;13650:20;:::i;:::-;13645:25;;13838:1;13770:66;13766:74;13763:1;13760:81;13755:1;13748:9;13741:17;13737:105;13734:131;;;13845:18;;:::i;:::-;13734:131;13893:1;13890;13886:9;13875:20;;13553:348;;;;:::o;13907:96::-;13944:7;13973:24;13991:5;13973:24;:::i;:::-;13962:35;;13907:96;;;:::o;14009:90::-;14043:7;14086:5;14079:13;14072:21;14061:32;;14009:90;;;:::o;14105:126::-;14142:7;14182:42;14175:5;14171:54;14160:65;;14105:126;;;:::o;14237:77::-;14274:7;14303:5;14292:16;;14237:77;;;:::o;14320:233::-;14359:3;14382:24;14400:5;14382:24;:::i;:::-;14373:33;;14428:66;14421:5;14418:77;14415:103;;;14498:18;;:::i;:::-;14415:103;14545:1;14538:5;14534:13;14527:20;;14320:233;;;:::o;14559:180::-;14607:77;14604:1;14597:88;14704:4;14701:1;14694:15;14728:4;14725:1;14718:15;14745:180;14793:77;14790:1;14783:88;14890:4;14887:1;14880:15;14914:4;14911:1;14904:15;14931:180;14979:77;14976:1;14969:88;15076:4;15073:1;15066:15;15100:4;15097:1;15090:15;15117:180;15165:77;15162:1;15155:88;15262:4;15259:1;15252:15;15286:4;15283:1;15276:15;15426:117;15535:1;15532;15525:12;15549:179;15689:31;15685:1;15677:6;15673:14;15666:55;15549:179;:::o;15734:225::-;15874:34;15870:1;15862:6;15858:14;15851:58;15943:8;15938:2;15930:6;15926:15;15919:33;15734:225;:::o;15965:174::-;16105:26;16101:1;16093:6;16089:14;16082:50;15965:174;:::o;16145:159::-;16285:11;16281:1;16273:6;16269:14;16262:35;16145:159;:::o;16310:227::-;16450:34;16446:1;16438:6;16434:14;16427:58;16519:10;16514:2;16506:6;16502:15;16495:35;16310:227;:::o;16543:170::-;16683:22;16679:1;16671:6;16667:14;16660:46;16543:170;:::o;16719:182::-;16859:34;16855:1;16847:6;16843:14;16836:58;16719:182;:::o;16907:122::-;16980:24;16998:5;16980:24;:::i;:::-;16973:5;16970:35;16960:63;;17019:1;17016;17009:12;16960:63;16907:122;:::o;17035:116::-;17105:21;17120:5;17105:21;:::i;:::-;17098:5;17095:32;17085:60;;17141:1;17138;17131:12;17085:60;17035:116;:::o;17157:122::-;17230:24;17248:5;17230:24;:::i;:::-;17223:5;17220:35;17210:63;;17269:1;17266;17259:12;17210:63;17157:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1704400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CancelSellVicShose(uint256)": "infinite",
								"LiquidPool()": "2582",
								"MinBnB()": "2451",
								"SellVicShose(uint256,uint256)": "infinite",
								"ShoseNFTContract()": "2558",
								"Treasury()": "2537",
								"VIMContract()": "2647",
								"WBNBContract()": "2538",
								"checkShoseTranfer(uint256)": "2910",
								"getMINPrice()": "infinite",
								"getSellingShose()": "infinite",
								"isOwner()": "2598",
								"owner()": "2567",
								"pause()": "29906",
								"paused()": "2588",
								"renounceOwnership()": "30440",
								"setLiquidPool(address)": "infinite",
								"setMinBNB(uint256)": "infinite",
								"setShoseNFTContract(address)": "infinite",
								"setTreasury(address)": "infinite",
								"setVIMContract(address)": "infinite",
								"transferOwnership(address)": "30839",
								"transferVicShose(address,uint256)": "infinite",
								"unpause()": "29970"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 229,
									"end": 4315,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 293,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 272,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 272,
									"end": 298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 854,
									"end": 1228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 716,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 772,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 816,
									"end": 825,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 812,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 710,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 890,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "CB3745379275252F4BEB5D1094BF1A8A09F368B7"
								},
								{
									"begin": 879,
									"end": 887,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 879,
									"end": 887,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 879,
									"end": 932,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 879,
									"end": 932,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 879,
									"end": 932,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 879,
									"end": 932,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 955,
									"end": 997,
									"name": "PUSH",
									"source": 8,
									"value": "D295CF5D859B9ED331CDF69C49A81EFF5E1BEE83"
								},
								{
									"begin": 942,
									"end": 952,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 942,
									"end": 952,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 997,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 942,
									"end": 997,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 942,
									"end": 997,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 942,
									"end": 997,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 942,
									"end": 997,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1068,
									"name": "PUSH",
									"source": 8,
									"value": "C184AF52CA4E1B1F085AA8236FF8508F52DC6EA7"
								},
								{
									"begin": 1007,
									"end": 1023,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1007,
									"end": 1023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1092,
									"end": 1134,
									"name": "PUSH",
									"source": 8,
									"value": "5BCD91C734D665FE426A5D7156F2AD7D37B76E30"
								},
								{
									"begin": 1078,
									"end": 1089,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1078,
									"end": 1089,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1134,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1159,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "BB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
								},
								{
									"begin": 1144,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1144,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1201,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1221,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1211,
									"end": 1217,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1221,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1221,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1221,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1221,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 760,
									"end": 859,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 805,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 853,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 4315,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b7841484b5ebc77760b1cbd2ff12b8676e12193383196d4f1073069d731b90564736f6c63430008070033",
									".code": [
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "BCFCBA76"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "BCFCBA76"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "D8882779"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "DE281E28"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "EA156F44"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "F0F44260"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "8F32D59B"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "99BC1BFB"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "A888A93A"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "B5620229"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "563DF32F"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "563DF32F"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "59464217"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "5C9E0D10"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "83D58215"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "FF32839"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "1ECFF38E"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "36C3B4E2"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "458A635A"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "4DD79F10"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 229,
											"end": 4315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 428,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 401,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1804,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 1804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "136742181FF5FC7D13F647A125112EC36500105A024CE2DBBB7F28FA375EEBFA"
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1871,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 301,
											"end": 326,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 301,
											"end": 326,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 926,
											"end": 930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 972,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 989,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 978,
											"end": 989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 994,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1650,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1630,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1614,
											"end": 1630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "B01E01D90E1DA4079495DB07C84276EF34A0EA39CD9BE9C3844874EB35616E44"
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1705,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1712,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 423,
											"end": 430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3571,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3632,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3632,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3632,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3581,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3711,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3720,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 3720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 3720,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3766,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3753,
											"end": 3773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3773,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3809,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3823,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3904,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3793,
											"end": 3904,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3904,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3793,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 438,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 437,
											"end": 438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3920,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 272,
											"end": 295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 272,
											"end": 295,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 2963,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2970,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 272,
											"end": 298,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 272,
											"end": 298,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 423,
											"end": 430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2454,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2467,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "PUSH",
											"source": 8,
											"value": "E985E9C5"
										},
										{
											"begin": 2538,
											"end": 2542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2555,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2485,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2477,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2635,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2635,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2635,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2635,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2611,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2759,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2777,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2725,
											"end": 2777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2777,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2786,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2787,
											"end": 2794,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2817,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2825,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2838,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 423,
											"end": 430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3089,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3062,
											"end": 3089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3062,
											"end": 3089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3169,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3169,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3150,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3150,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3150,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3107,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3169,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3169,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3099,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "PUSH",
											"source": 8,
											"value": "E985E9C5"
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3288,
											"end": 3292,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3212,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3348,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3399,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3416,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3439,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3453,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3460,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 424,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 424,
											"end": 430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 423,
											"end": 430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 415,
											"end": 431,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 415,
											"end": 431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 744,
											"end": 748,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 735,
											"end": 748,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 735,
											"end": 748,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 735,
											"end": 748,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 779,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 772,
											"end": 783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 772,
											"end": 783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 788,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4001,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4003,
											"end": 4026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4038,
											"end": 4084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4038,
											"end": 4084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4198,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4254,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4255,
											"end": 4256,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4258,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4225,
											"end": 4226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4299,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4313,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1473,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH",
											"source": 8,
											"value": "ACDD85D235B5B49226C2C4F2B72CB01FA1CC3AE64BB843A6DEF27788D05B1B60"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1523,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 434,
											"end": 455,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 332,
											"end": 363,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 332,
											"end": 363,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1959,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1943,
											"end": 1959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1959,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "PUSH",
											"source": 8,
											"value": "4D8E30FF458BEBDD848488669E63D632954487CA1BC64C28F3C920F74A5F8594"
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1994,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 2001,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2131,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2101,
											"end": 2131,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2131,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2101,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2192,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2203,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2203,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2203,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2174,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2317,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2349,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1311,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1303,
											"end": 1311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "B14F2A39BB21FDA32827BBDB4BE629C94036E10A3F6055A6454F884CA1B33FA1"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1369,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1983,
											"end": 1991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 853,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 438,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 301,
											"end": 438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 355,
											"end": 360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 380,
											"end": 393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 402,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 402,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 402,
											"end": 432,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 402,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 301,
											"end": 438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 301,
											"end": 438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 301,
											"end": 438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 301,
											"end": 438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 301,
											"end": 438,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 583,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 444,
											"end": 583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 515,
											"end": 535,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 506,
											"end": 535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 506,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 444,
											"end": 583,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 444,
											"end": 583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 444,
											"end": 583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 444,
											"end": 583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 444,
											"end": 583,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 732,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 589,
											"end": 732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 646,
											"end": 651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 671,
											"end": 684,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 662,
											"end": 684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 662,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 693,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 693,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 693,
											"end": 726,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 726,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 693,
											"end": 726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 589,
											"end": 732,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 589,
											"end": 732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 589,
											"end": 732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 589,
											"end": 732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 589,
											"end": 732,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 1067,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 738,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 848,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 825,
											"end": 832,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 821,
											"end": 844,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 817,
											"end": 849,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 814,
											"end": 933,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 814,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 814,
											"end": 933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 852,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 852,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 852,
											"end": 931,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 931,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 852,
											"end": 931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 933,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 814,
											"end": 933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 972,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1031,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 997,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 943,
											"end": 1060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 738,
											"end": 1067,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 738,
											"end": 1067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 738,
											"end": 1067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 738,
											"end": 1067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 738,
											"end": 1067,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1073,
											"end": 1424,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1073,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1167,
											"end": 1190,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1163,
											"end": 1195,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1279,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 1160,
											"end": 1279,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1198,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1198,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1198,
											"end": 1277,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1277,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1198,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1279,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 1160,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 1343,
											"end": 1407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1407,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1343,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1333,
											"end": 1407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1333,
											"end": 1407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1424,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1424,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1541,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1553,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1558,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1681,
											"end": 1682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1751,
											"end": 1758,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1748,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1706,
											"end": 1759,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1706,
											"end": 1759,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1706,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1759,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 1834,
											"end": 1887,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1887,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1834,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1904,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1910,
											"end": 2255,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1910,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2230,
											"end": 2237,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2206,
											"end": 2228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2177,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2177,
											"end": 2238,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2238,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2177,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2255,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2255,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2261,
											"end": 2590,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2261,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2348,
											"end": 2355,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2456,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2337,
											"end": 2456,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2456,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2337,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2563,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2590,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2590,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2596,
											"end": 2947,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 2596,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2701,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2713,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2718,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2802,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2683,
											"end": 2802,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2721,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2721,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2721,
											"end": 2800,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2721,
											"end": 2800,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2721,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2802,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2683,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2866,
											"end": 2930,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2930,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2866,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2930,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2812,
											"end": 2940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2947,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2947,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2947,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3080,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3064,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3076,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3081,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3165,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3046,
											"end": 3165,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3165,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3046,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3274,
											"end": 3281,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3282,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3331,
											"end": 3333,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 3402,
											"end": 3409,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3391,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3357,
											"end": 3410,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3357,
											"end": 3410,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 3357,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3427,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3433,
											"end": 3612,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 3433,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3565,
											"end": 3568,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3563,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3523,
											"end": 3569,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3523,
											"end": 3569,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3523,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3599,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3592,
											"end": 3606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3612,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3736,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3618,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3723,
											"end": 3728,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3705,
											"end": 3729,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3729,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3705,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3730,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3736,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3772,
											"end": 4504,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3772,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3968,
											"end": 3973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3920,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3920,
											"end": 3974,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3974,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3920,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4064,
											"end": 4067,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3990,
											"end": 4076,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3990,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3990,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4076,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4100,
											"end": 4156,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4100,
											"end": 4156,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4100,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4303,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4382,
											"end": 4385,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4386,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4409,
											"end": 4469,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4409,
											"end": 4469,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4409,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4195,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4498,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4488,
											"end": 4498,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4488,
											"end": 4498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 4504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 4504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 4504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 4504,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 4504,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 4504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 4504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 4504,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4510,
											"end": 4619,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4510,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4606,
											"end": 4611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 4591,
											"end": 4612,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4591,
											"end": 4612,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4591,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4619,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4625,
											"end": 4991,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4625,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 4770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4852,
											"end": 4854,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 4847,
											"end": 4850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 4788,
											"end": 4855,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4788,
											"end": 4855,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4788,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 4985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 4985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 4985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 4991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 4991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 4991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 4991,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4997,
											"end": 5363,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 4997,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5224,
											"end": 5226,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5219,
											"end": 5222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5160,
											"end": 5227,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5227,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5160,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5153,
											"end": 5227,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5153,
											"end": 5227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5236,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5345,
											"end": 5357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4997,
											"end": 5363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4997,
											"end": 5363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4997,
											"end": 5363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4997,
											"end": 5363,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5596,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5591,
											"end": 5594,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5717,
											"end": 5729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5741,
											"end": 6106,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 5741,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5883,
											"end": 5886,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5963,
											"end": 5966,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5897,
											"end": 5970,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5897,
											"end": 5970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6068,
											"end": 6071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 5979,
											"end": 6072,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5979,
											"end": 6072,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 5979,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 6106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 6106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 6106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 6106,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6112,
											"end": 6478,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 6112,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6254,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6334,
											"end": 6337,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 6275,
											"end": 6342,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6275,
											"end": 6342,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 6275,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6351,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6440,
											"end": 6443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6351,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6351,
											"end": 6444,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6444,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6351,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6478,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6478,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6484,
											"end": 6850,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 6484,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 6711,
											"end": 6713,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 6706,
											"end": 6709,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 6647,
											"end": 6714,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6647,
											"end": 6714,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 6647,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6640,
											"end": 6714,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6640,
											"end": 6714,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6723,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6723,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 6723,
											"end": 6816,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6723,
											"end": 6816,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 6723,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6841,
											"end": 6843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6850,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6856,
											"end": 7222,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 6856,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7078,
											"end": 7081,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7019,
											"end": 7086,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7086,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 7019,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7012,
											"end": 7086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7012,
											"end": 7086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 7184,
											"end": 7187,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7215,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7211,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 7222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 7222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 7222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 7222,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7228,
											"end": 7336,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7228,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 7323,
											"end": 7328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 7305,
											"end": 7329,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7305,
											"end": 7329,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 7305,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7336,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7342,
											"end": 7460,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7342,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7429,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7447,
											"end": 7452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7429,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 7429,
											"end": 7453,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7429,
											"end": 7453,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7429,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7424,
											"end": 7427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7417,
											"end": 7454,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7460,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7466,
											"end": 7688,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7466,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7597,
											"end": 7599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 7678,
											"end": 7679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7663,
											"end": 7680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7660,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7688,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7688,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 7855,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7830,
											"end": 7856,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7830,
											"end": 7856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 7936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7866,
											"end": 7937,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7937,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7866,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 8015,
											"end": 8017,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8004,
											"end": 8013,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 7997,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7947,
											"end": 8019,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7947,
											"end": 8019,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7947,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7694,
											"end": 8026,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8221,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8208,
											"end": 8217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8204,
											"end": 8222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 8300,
											"end": 8301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8282,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8232,
											"end": 8303,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8232,
											"end": 8303,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 8232,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 8381,
											"end": 8383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8370,
											"end": 8379,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8363,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8313,
											"end": 8385,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8313,
											"end": 8385,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 8313,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8395,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 8463,
											"end": 8465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8452,
											"end": 8461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 8466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8445,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8395,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8395,
											"end": 8467,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8395,
											"end": 8467,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 8395,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8474,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8728,
											"end": 8737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8788,
											"end": 8797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8778,
											"end": 8798,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8759,
											"end": 8776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 8799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8816,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 8919,
											"end": 8923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8816,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8816,
											"end": 8924,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8816,
											"end": 8924,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 8816,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8808,
											"end": 8924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8808,
											"end": 8924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8961,
											"end": 8981,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8958,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8945,
											"end": 8954,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8934,
											"end": 8982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9102,
											"end": 9106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9099,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8999,
											"end": 9107,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8999,
											"end": 9107,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 8999,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 9114,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9120,
											"end": 9330,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9120,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9207,
											"end": 9211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9247,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9234,
											"end": 9243,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9230,
											"end": 9248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9258,
											"end": 9323,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9323,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9258,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9330,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9330,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9330,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9336,
											"end": 9755,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 9336,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9502,
											"end": 9506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9529,
											"end": 9538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9599,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9573,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9600,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9617,
											"end": 9748,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9748,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9617,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9609,
											"end": 9748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9609,
											"end": 9748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9755,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9761,
											"end": 10180,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 9761,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 9931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9967,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9942,
											"end": 9968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9942,
											"end": 9968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10008,
											"end": 10012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10004,
											"end": 10024,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10001,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 9998,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9985,
											"end": 10002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10025,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10042,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10168,
											"end": 10172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10042,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10042,
											"end": 10173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10042,
											"end": 10173,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10042,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9761,
											"end": 10180,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9761,
											"end": 10180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9761,
											"end": 10180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9761,
											"end": 10180,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10186,
											"end": 10605,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 10186,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10379,
											"end": 10388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10367,
											"end": 10393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10367,
											"end": 10393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10433,
											"end": 10437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10410,
											"end": 10427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10403,
											"end": 10450,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10467,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 10593,
											"end": 10597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10467,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 10467,
											"end": 10598,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10467,
											"end": 10598,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 10467,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10605,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10611,
											"end": 11030,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10611,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10815,
											"end": 10817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10804,
											"end": 10813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10854,
											"end": 10874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10850,
											"end": 10851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10848,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10828,
											"end": 10875,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10892,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10892,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10892,
											"end": 11023,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10892,
											"end": 11023,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 10892,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10884,
											"end": 11023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10884,
											"end": 11023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 11030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 11030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 11030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 11030,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11036,
											"end": 11455,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 11036,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11202,
											"end": 11206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11229,
											"end": 11238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11217,
											"end": 11243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11217,
											"end": 11243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11275,
											"end": 11276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11260,
											"end": 11277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 11443,
											"end": 11447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 11317,
											"end": 11448,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11317,
											"end": 11448,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 11317,
											"end": 11448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11309,
											"end": 11448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11309,
											"end": 11448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11036,
											"end": 11455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11036,
											"end": 11455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11036,
											"end": 11455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11036,
											"end": 11455,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11461,
											"end": 11880,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11461,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11654,
											"end": 11663,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11650,
											"end": 11668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11642,
											"end": 11668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11642,
											"end": 11668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11714,
											"end": 11723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11708,
											"end": 11712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11698,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11685,
											"end": 11702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11678,
											"end": 11725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11742,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 11868,
											"end": 11872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11742,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11742,
											"end": 11873,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11742,
											"end": 11873,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 11742,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11880,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11886,
											"end": 12305,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 11886,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12052,
											"end": 12056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12090,
											"end": 12092,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12079,
											"end": 12088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12075,
											"end": 12093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12139,
											"end": 12148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12133,
											"end": 12137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12129,
											"end": 12149,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12125,
											"end": 12126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12123,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12127,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12103,
											"end": 12150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12167,
											"end": 12298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 12293,
											"end": 12297,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12167,
											"end": 12298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12167,
											"end": 12298,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12167,
											"end": 12298,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 12167,
											"end": 12298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12159,
											"end": 12298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12159,
											"end": 12298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11886,
											"end": 12305,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11886,
											"end": 12305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11886,
											"end": 12305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11886,
											"end": 12305,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12311,
											"end": 12533,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 12311,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12408,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12444,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12431,
											"end": 12440,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 12445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12419,
											"end": 12445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12455,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 12523,
											"end": 12524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12512,
											"end": 12521,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12505,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12455,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12455,
											"end": 12526,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12455,
											"end": 12526,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 12455,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12533,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12620,
											"end": 12752,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12620,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12710,
											"end": 12713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12702,
											"end": 12713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12702,
											"end": 12713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12740,
											"end": 12744,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12735,
											"end": 12738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12723,
											"end": 12745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12723,
											"end": 12745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12752,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12758,
											"end": 12872,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 12758,
											"end": 12872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 12831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12859,
											"end": 12864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12853,
											"end": 12865,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12843,
											"end": 12865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12843,
											"end": 12865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12872,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12878,
											"end": 12991,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 12878,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12948,
											"end": 12952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12980,
											"end": 12984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12975,
											"end": 12978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 12985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 12985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 12985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12878,
											"end": 12991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12878,
											"end": 12991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12878,
											"end": 12991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12878,
											"end": 12991,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12997,
											"end": 13181,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12997,
											"end": 13181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13096,
											"end": 13107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13125,
											"end": 13128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13118,
											"end": 13137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13170,
											"end": 13174,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13165,
											"end": 13168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13161,
											"end": 13175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13146,
											"end": 13175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13146,
											"end": 13175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13181,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13181,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13187,
											"end": 13356,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 13187,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13271,
											"end": 13282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13305,
											"end": 13311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13300,
											"end": 13303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13293,
											"end": 13312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13345,
											"end": 13349,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13336,
											"end": 13350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13321,
											"end": 13350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13321,
											"end": 13350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13356,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13362,
											"end": 13547,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 13362,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13402,
											"end": 13403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13419,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 13437,
											"end": 13438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13419,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 13419,
											"end": 13439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13419,
											"end": 13439,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 13419,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13453,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 13471,
											"end": 13472,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13453,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 13453,
											"end": 13473,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13453,
											"end": 13473,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 13453,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13448,
											"end": 13473,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13448,
											"end": 13473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13539,
											"end": 13540,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13536,
											"end": 13537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13532,
											"end": 13541,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13527,
											"end": 13541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13527,
											"end": 13541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13547,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13553,
											"end": 13901,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 13553,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13593,
											"end": 13600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13616,
											"end": 13636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 13634,
											"end": 13635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13616,
											"end": 13636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 13616,
											"end": 13636,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13616,
											"end": 13636,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 13616,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13611,
											"end": 13636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13611,
											"end": 13636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 13650,
											"end": 13670,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13650,
											"end": 13670,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13650,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13645,
											"end": 13670,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13645,
											"end": 13670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13838,
											"end": 13839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13770,
											"end": 13836,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13766,
											"end": 13840,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13760,
											"end": 13841,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13755,
											"end": 13756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13758,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13737,
											"end": 13842,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13734,
											"end": 13865,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13734,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13734,
											"end": 13865,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13845,
											"end": 13863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 13845,
											"end": 13863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13845,
											"end": 13863,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13845,
											"end": 13863,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 13845,
											"end": 13863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13734,
											"end": 13865,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13734,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13893,
											"end": 13894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13890,
											"end": 13891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 13895,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13875,
											"end": 13895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13875,
											"end": 13895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13553,
											"end": 13901,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13553,
											"end": 13901,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13553,
											"end": 13901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13553,
											"end": 13901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13553,
											"end": 13901,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13907,
											"end": 14003,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 13907,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13944,
											"end": 13951,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13973,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13991,
											"end": 13996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 13973,
											"end": 13997,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13973,
											"end": 13997,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13973,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13962,
											"end": 13997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13962,
											"end": 13997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13907,
											"end": 14003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13907,
											"end": 14003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13907,
											"end": 14003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13907,
											"end": 14003,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14009,
											"end": 14099,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 14009,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14043,
											"end": 14050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14086,
											"end": 14091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14092,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14072,
											"end": 14093,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14009,
											"end": 14099,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14009,
											"end": 14099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14009,
											"end": 14099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14009,
											"end": 14099,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14105,
											"end": 14231,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 14105,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14182,
											"end": 14224,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14175,
											"end": 14180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14171,
											"end": 14225,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14160,
											"end": 14225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14160,
											"end": 14225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14231,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14231,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14237,
											"end": 14314,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 14237,
											"end": 14314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14303,
											"end": 14308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14292,
											"end": 14308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14292,
											"end": 14308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14237,
											"end": 14314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14237,
											"end": 14314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14237,
											"end": 14314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14237,
											"end": 14314,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14320,
											"end": 14553,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 14320,
											"end": 14553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14359,
											"end": 14362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14382,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14400,
											"end": 14405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14382,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 14382,
											"end": 14406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14382,
											"end": 14406,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14382,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14373,
											"end": 14406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14373,
											"end": 14406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14428,
											"end": 14494,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14421,
											"end": 14426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14418,
											"end": 14495,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 14518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 14415,
											"end": 14518,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 14518,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 14415,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14546,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14534,
											"end": 14547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14527,
											"end": 14547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14527,
											"end": 14547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14553,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14559,
											"end": 14739,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 14559,
											"end": 14739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14607,
											"end": 14684,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14604,
											"end": 14605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14597,
											"end": 14685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14704,
											"end": 14708,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 14701,
											"end": 14702,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14694,
											"end": 14709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14728,
											"end": 14732,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14725,
											"end": 14726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14718,
											"end": 14733,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14745,
											"end": 14925,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 14745,
											"end": 14925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14793,
											"end": 14870,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14790,
											"end": 14791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14783,
											"end": 14871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 14894,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 14887,
											"end": 14888,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14880,
											"end": 14895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14914,
											"end": 14918,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14911,
											"end": 14912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14904,
											"end": 14919,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14931,
											"end": 15111,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 14931,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14979,
											"end": 15056,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14976,
											"end": 14977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14969,
											"end": 15057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15076,
											"end": 15080,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 15073,
											"end": 15074,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15066,
											"end": 15081,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15100,
											"end": 15104,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15097,
											"end": 15098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15090,
											"end": 15105,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15117,
											"end": 15297,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 15117,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15165,
											"end": 15242,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15162,
											"end": 15163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15155,
											"end": 15243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15262,
											"end": 15266,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 15259,
											"end": 15260,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15252,
											"end": 15267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15286,
											"end": 15290,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15283,
											"end": 15284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15276,
											"end": 15291,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15426,
											"end": 15543,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 15426,
											"end": 15543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15535,
											"end": 15536,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15532,
											"end": 15533,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15525,
											"end": 15537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15728,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 15549,
											"end": 15728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15689,
											"end": 15720,
											"name": "PUSH",
											"source": 9,
											"value": "73656C6C6572206E6565642068617665207468697320746F6B656E6964000000"
										},
										{
											"begin": 15685,
											"end": 15686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15677,
											"end": 15683,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15666,
											"end": 15721,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15728,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15734,
											"end": 15959,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 15734,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15874,
											"end": 15908,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15870,
											"end": 15871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15862,
											"end": 15868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15858,
											"end": 15872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15851,
											"end": 15909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15943,
											"end": 15951,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15930,
											"end": 15936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15926,
											"end": 15941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15919,
											"end": 15952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15734,
											"end": 15959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15734,
											"end": 15959,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15965,
											"end": 16139,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 15965,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16105,
											"end": 16131,
											"name": "PUSH",
											"source": 9,
											"value": "46726F6D20616E6420546F2063616E206E6F742073616D650000000000000000"
										},
										{
											"begin": 16101,
											"end": 16102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16093,
											"end": 16099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16089,
											"end": 16103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16082,
											"end": 16132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15965,
											"end": 16139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15965,
											"end": 16139,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16145,
											"end": 16304,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 16145,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16285,
											"end": 16296,
											"name": "PUSH",
											"source": 9,
											"value": "5072696365203E20300000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16281,
											"end": 16282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16269,
											"end": 16283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16262,
											"end": 16297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16304,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16310,
											"end": 16537,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 16310,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16450,
											"end": 16484,
											"name": "PUSH",
											"source": 9,
											"value": "596F75206E65656420417070726F766520466F7220416C6C20746F2074686973"
										},
										{
											"begin": 16446,
											"end": 16447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16438,
											"end": 16444,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16434,
											"end": 16448,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 16485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16519,
											"end": 16529,
											"name": "PUSH",
											"source": 9,
											"value": "20636F6E74616374000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16514,
											"end": 16516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16506,
											"end": 16512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16502,
											"end": 16517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16495,
											"end": 16530,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16310,
											"end": 16537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16310,
											"end": 16537,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16543,
											"end": 16713,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 16543,
											"end": 16713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16683,
											"end": 16705,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573732063616E206E6F74207A65726F000000000000000000000000"
										},
										{
											"begin": 16679,
											"end": 16680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16667,
											"end": 16681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16660,
											"end": 16706,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16543,
											"end": 16713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16543,
											"end": 16713,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16719,
											"end": 16901,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 16719,
											"end": 16901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16859,
											"end": 16893,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16855,
											"end": 16856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16847,
											"end": 16853,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16843,
											"end": 16857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16719,
											"end": 16901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16719,
											"end": 16901,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16907,
											"end": 17029,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 16907,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16980,
											"end": 17004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16998,
											"end": 17003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16980,
											"end": 17004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 16980,
											"end": 17004,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16980,
											"end": 17004,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16980,
											"end": 17004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16973,
											"end": 16978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16960,
											"end": 17023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 16960,
											"end": 17023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17019,
											"end": 17020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17016,
											"end": 17017,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17009,
											"end": 17021,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16960,
											"end": 17023,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 16960,
											"end": 17023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16907,
											"end": 17029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16907,
											"end": 17029,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17035,
											"end": 17151,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 17035,
											"end": 17151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17105,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 17120,
											"end": 17125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17105,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 17105,
											"end": 17126,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17105,
											"end": 17126,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 17105,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17098,
											"end": 17103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17095,
											"end": 17127,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17085,
											"end": 17145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17085,
											"end": 17145,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17141,
											"end": 17142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17131,
											"end": 17143,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17085,
											"end": 17145,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17085,
											"end": 17145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17035,
											"end": 17151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17035,
											"end": 17151,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17157,
											"end": 17279,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 17157,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17248,
											"end": 17253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 17230,
											"end": 17254,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17230,
											"end": 17254,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17230,
											"end": 17254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17223,
											"end": 17228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17220,
											"end": 17255,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17210,
											"end": 17273,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17269,
											"end": 17270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17267,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17259,
											"end": 17271,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17273,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17210,
											"end": 17273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17157,
											"end": 17279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17157,
											"end": 17279,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CancelSellVicShose(uint256)": "4dd79f10",
							"LiquidPool()": "36c3b4e2",
							"MinBnB()": "bcfcba76",
							"SellVicShose(uint256,uint256)": "83d58215",
							"ShoseNFTContract()": "d8882779",
							"Treasury()": "563df32f",
							"VIMContract()": "b5620229",
							"WBNBContract()": "0ff32839",
							"checkShoseTranfer(uint256)": "59464217",
							"getMINPrice()": "ea156f44",
							"getSellingShose()": "99bc1bfb",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setLiquidPool(address)": "a888a93a",
							"setMinBNB(uint256)": "de281e28",
							"setShoseNFTContract(address)": "458a635a",
							"setTreasury(address)": "f0f44260",
							"setVIMContract(address)": "1ecff38e",
							"transferOwnership(address)": "f2fde38b",
							"transferVicShose(address,uint256)": "5c9e0d10",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_LiquidPool\",\"type\":\"address\"}],\"name\":\"changeLiquidPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_MinBnB\",\"type\":\"uint256\"}],\"name\":\"changeMinBnB\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ShoseNFTContract\",\"type\":\"address\"}],\"name\":\"changeShoseNFTContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_Treasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_VIMContract\",\"type\":\"address\"}],\"name\":\"changeVIMContract\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CancelSellVicShose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LiquidPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinBnB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"SellVicShose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ShoseNFTContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VIMContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNBContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"checkShoseTranfer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMINPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellingShose\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenID\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_Price\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LiquidPool\",\"type\":\"address\"}],\"name\":\"setLiquidPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_MinBnB\",\"type\":\"uint256\"}],\"name\":\"setMinBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ShoseNFTContract\",\"type\":\"address\"}],\"name\":\"setShoseNFTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_VIMContract\",\"type\":\"address\"}],\"name\":\"setVIMContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferVicShose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"marketplace.sol\":\"marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]},\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]},\"BEPPausable.sol\":{\"keccak256\":\"0xdc7bd108ed2ea05955015cff10f6113eb1db5259f7405f36476821173a2d7bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a491c43afcfa989c9425444a4a62c8e29f09578e8374423f8873453adc4f77\",\"dweb:/ipfs/QmS3p82uSwtSazrM7qSqWv7pqWt1t9mLyyuX2G97JF8uxa\"]},\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]},\"IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3e155bd6a1e1f2d4af3e7f7650a310f21d2fea4565fd77e8f49009f3c9fc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://051c68ec851c18ef923f2a193f4523fec959a029939ef5b39f65ea7402bb5767\",\"dweb:/ipfs/QmehiN2F7CwuJZZvsxtS6uDyQKxfuXKPb8GacNxtVHPHXK\"]},\"marketplace.sol\":{\"keccak256\":\"0xd245698b79288620e553a666f866c4599bb1aa3e24a23b667ea2318bd0cf7642\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13dd55b8ea01fa059018f29e50c48b99404667586dc9b27ce48a1545a28574b8\",\"dweb:/ipfs/QmRumapmhMtHZkKLRqkoVsCyQdYD1Th5wY68d2cvmk1pkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "marketplace.sol:marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 467,
								"contract": "marketplace.sol:marketplace",
								"label": "paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 773,
								"contract": "marketplace.sol:marketplace",
								"label": "Treasury",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 775,
								"contract": "marketplace.sol:marketplace",
								"label": "LiquidPool",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 777,
								"contract": "marketplace.sol:marketplace",
								"label": "ShoseNFTContract",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 779,
								"contract": "marketplace.sol:marketplace",
								"label": "VIMContract",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 781,
								"contract": "marketplace.sol:marketplace",
								"label": "WBNBContract",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 783,
								"contract": "marketplace.sol:marketplace",
								"label": "MinBnB",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 787,
								"contract": "marketplace.sol:marketplace",
								"label": "shoseTranfer",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 791,
								"contract": "marketplace.sol:marketplace",
								"label": "shoseShell",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 794,
								"contract": "marketplace.sol:marketplace",
								"label": "allTokensSell",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1226:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1450:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1450:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1443:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1169:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1220:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:6:0"
									},
									"scope": 294,
									"src": "1160:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2468:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2494:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2486:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2486:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2486:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2511:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2478:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2568:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2563:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2581:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2581:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2581:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2624:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1486:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2406:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2432:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2416:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:0"
									},
									"scope": 294,
									"src": "2397:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3540:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3550:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2715:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3460:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3489:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:14:0"
									},
									"scope": 294,
									"src": "3451:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3993:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4049:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4010:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4003:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3630:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3855:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3885:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3877:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3901:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3942:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3928:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3979:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:14:0"
									},
									"scope": 294,
									"src": "3846:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4574:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4591:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4584:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4075:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4440:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4560:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:14:0"
									},
									"scope": 294,
									"src": "4431:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5112:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5138:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5130:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5130:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5130:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5155:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5130:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5122:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5232:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5221:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5213:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5290:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5285:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5312:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5299:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5326:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5326:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5345:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5326:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5400:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5412:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5374:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5367:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4691:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4981:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4997:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5047:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5098:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5097:14:0"
									},
									"scope": 294,
									"src": "4933:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5709:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5745:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5726:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5719:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5438:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5618:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5666:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5653:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5695:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:14:0"
									},
									"scope": 294,
									"src": "5609:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6148:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6186:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6158:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6242:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6237:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6264:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6251:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6251:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6278:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6236:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6318:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6318:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6311:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5812:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5999:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6027:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6064:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6051:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6051:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6092:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6078:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6017:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6134:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:14:0"
									},
									"scope": 294,
									"src": "5990:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6652:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6704:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6669:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6662:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6382:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6564:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6601:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6638:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6637:14:0"
									},
									"scope": 294,
									"src": "6555:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7094:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7112:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7132:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7104:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7190:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7185:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7212:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7199:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7226:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7268:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7261:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6759:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7002:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7002:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7029:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7080:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:14:0"
									},
									"scope": 294,
									"src": "6939:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7706:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7777:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7861:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7861:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7861:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8169:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8194:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8187:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8187:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8187:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7857:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7884:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8004:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8026:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8055:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8049:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8049:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8030:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8098:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8102:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8094:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8094:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8115:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8087:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8087:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8087:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8055:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8102:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "7995:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7716:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7729:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7750:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7743:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7332:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7555:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7616:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7603:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7650:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7636:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7691:14:0"
									},
									"scope": 294,
									"src": "7546:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "179:8061:0",
							"usedErrors": []
						}
					],
					"src": "86:8154:0"
				},
				"id": 0
			},
			"BEPContext.sol": {
				"ast": {
					"absolutePath": "BEPContext.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "BEPContext",
							"nameLocation": "575:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "754:2:1",
										"statements": []
									},
									"id": 300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:2:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 324,
									"src": "740:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "822:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "843:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 304,
												"id": 310,
												"nodeType": "Return",
												"src": "828:26:1"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "769:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:17:1"
									},
									"scope": 324,
									"src": "760:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "920:36:1",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_BEPContext_$324",
														"typeString": "contract BEPContext"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "926:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 319,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "943:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "943:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 316,
												"id": 321,
												"nodeType": "Return",
												"src": "936:15:1"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "872:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "906:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:14:1"
									},
									"scope": 324,
									"src": "863:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 325,
							"src": "557:401:1",
							"usedErrors": []
						}
					],
					"src": "32:926:1"
				},
				"id": 1
			},
			"BEPOwnable.sol": {
				"ast": {
					"absolutePath": "BEPOwnable.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "BEPContext.sol",
							"file": "./BEPContext.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 325,
							"src": "56:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 329,
										"name": "BEPContext",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "476:10:2"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "476:10:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "83:360:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								324
							],
							"name": "BEPOwnable",
							"nameLocation": "462:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "507:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "491:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 338,
									"name": "OwnershipTransferred",
									"nameLocation": "524:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "561:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "545:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "592:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "576:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:57:2"
									},
									"src": "518:84:2"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "710:121:2",
										"statements": [
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "724:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "716:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "716:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "736:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "716:32:2"
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 347,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "754:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 348,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "763:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "754:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "754:18:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "812:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "804:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "804:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "816:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 351,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "783:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "EmitStatement",
												"src": "778:48:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "606:87:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 360,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:2"
									},
									"scope": 454,
									"src": "696:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "946:24:2",
										"statements": [
											{
												"expression": {
													"id": 366,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "959:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "952:13:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "835:61:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "908:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "937:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:2"
									},
									"scope": 454,
									"src": "899:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1071:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 373,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1085:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1085:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1096:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1077:54:2"
											},
											{
												"id": 378,
												"nodeType": "PlaceholderStatement",
												"src": "1137:1:2"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "974:73:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 380,
									"name": "onlyOwner",
									"nameLocation": "1059:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:2:2"
									},
									"src": "1050:93:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1264:40:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 386,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1277:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1277:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1293:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1277:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 390,
												"nodeType": "Return",
												"src": "1270:29:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1147:68:2",
										"text": " @dev Returns true if the caller is the current owner."
									},
									"functionSelector": "8f32d59b",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "1227:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:2"
									},
									"scope": 454,
									"src": "1218:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1676:81:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1708:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1687:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1687:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "EmitStatement",
												"src": "1682:45:2"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1733:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1750:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1742:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 407,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1742:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1733:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1733:19:2"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1308:319:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1666:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1666:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1639:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:0:2"
									},
									"scope": 454,
									"src": "1630:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1958:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1983:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "1964:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1964:28:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1761:132:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 419,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1948:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1905:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1931:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1923:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:18:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:0:2"
									},
									"scope": 454,
									"src": "1896:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2145:156:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2159:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2179:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2171:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 435,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2171:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2171:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2159:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2151:73:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "2256:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "2264:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2235:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2230:43:2"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2279:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2288:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2279:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2279:17:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2001:86:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2099:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2126:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2118:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:18:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2145:0:2"
									},
									"scope": 454,
									"src": "2090:211:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "444:1859:2",
							"usedErrors": []
						}
					],
					"src": "32:2271:2"
				},
				"id": 2
			},
			"BEPPausable.sol": {
				"ast": {
					"absolutePath": "BEPPausable.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						],
						"BEPPausable": [
							527
						]
					},
					"id": 528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "BEPOwnable.sol",
							"file": "./BEPOwnable.sol",
							"id": 457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 528,
							"sourceUnit": 455,
							"src": "56:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 459,
										"name": "BEPOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "220:10:3"
									},
									"id": 460,
									"nodeType": "InheritanceSpecifier",
									"src": "220:10:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "83:112:3",
								"text": " @title Pausable\n @dev Base contract which allows children to implement an emergency stop mechanism."
							},
							"fullyImplemented": true,
							"id": 527,
							"linearizedBaseContracts": [
								527,
								454,
								324
							],
							"name": "BEPPausable",
							"nameLocation": "205:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 462,
									"name": "Pause",
									"nameLocation": "241:5:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:2:3"
									},
									"src": "235:14:3"
								},
								{
									"anonymous": false,
									"id": 464,
									"name": "Unpause",
									"nameLocation": "258:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:3"
									},
									"src": "252:16:3"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 467,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "284:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 527,
									"src": "272:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 465,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "272:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 466,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "293:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "409:34:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "423:7:3",
															"subExpression": {
																"id": 471,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "424:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "415:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "415:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "415:16:3"
											},
											{
												"id": 475,
												"nodeType": "PlaceholderStatement",
												"src": "437:1:3"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "303:78:3",
										"text": " @dev modifier to allow actions only when the contract IS paused"
									},
									"id": 477,
									"name": "whenNotPaused",
									"nameLocation": "393:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:3"
									},
									"src": "384:59:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "554:33:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "568:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "560:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "560:15:3"
											},
											{
												"id": 484,
												"nodeType": "PlaceholderStatement",
												"src": "581:1:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "447:82:3",
										"text": " @dev modifier to allow actions only when the contract IS NOT paused"
									},
									"id": 486,
									"name": "whenPaused",
									"nameLocation": "541:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:2:3"
									},
									"src": "532:55:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "729:59:3",
										"statements": [
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "735:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "744:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "735:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "735:13:3"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 500,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "759:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:7:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "EmitStatement",
												"src": "754:12:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "779:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 495,
												"id": 504,
												"nodeType": "Return",
												"src": "772:11:3"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "591:72:3",
										"text": " @dev called by the owner to pause, triggers stopped state"
									},
									"functionSelector": "8456cb59",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 489,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "690:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "690:9:3"
										},
										{
											"id": 492,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 491,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 477,
												"src": "700:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "700:13:3"
										}
									],
									"name": "pause",
									"nameLocation": "675:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "723:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:6:3"
									},
									"scope": 527,
									"src": "666:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "932:62:3",
										"statements": [
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "938:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "947:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "938:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "938:14:3"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "963:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "EmitStatement",
												"src": "958:14:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "985:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 515,
												"id": 524,
												"nodeType": "Return",
												"src": "978:11:3"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "792:75:3",
										"text": " @dev called by the owner to unpause, returns to normal state"
									},
									"functionSelector": "3f4ba83a",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 509,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "896:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "896:9:3"
										},
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 486,
												"src": "906:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "906:10:3"
										}
									],
									"name": "unpause",
									"nameLocation": "879:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:2:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:6:3"
									},
									"scope": 527,
									"src": "870:124:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 528,
							"src": "196:800:3",
							"usedErrors": []
						}
					],
					"src": "32:964:3"
				},
				"id": 3
			},
			"IBEP20.sol": {
				"ast": {
					"absolutePath": "IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							604
						]
					},
					"id": 605,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 529,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 604,
							"linearizedBaseContracts": [
								604
							],
							"name": "IBEP20",
							"nameLocation": "67:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "78:62:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "152:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:4"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "189:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:4"
									},
									"scope": 604,
									"src": "143:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "202:68:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "282:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "300:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "292:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:17:4"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "332:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:4"
									},
									"scope": 604,
									"src": "273:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "345:197:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "554:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "571:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "563:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "590:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "582:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:35:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "616:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:6:4"
									},
									"scope": 604,
									"src": "545:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "626:252:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "890:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "900:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:32:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "955:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:4"
									},
									"scope": 604,
									"src": "881:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "968:514:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1494:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1510:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1502:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1527:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1519:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:33:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1553:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1553:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:6:4"
									},
									"scope": 604,
									"src": "1485:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "1563:280:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1855:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1881:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1873:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1901:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1893:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1924:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1916:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:67:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1953:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:4"
									},
									"scope": 604,
									"src": "1846:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "1963:148:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 594,
									"name": "Transfer",
									"nameLocation": "2120:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2145:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2129:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2167:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2151:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:57:4"
									},
									"src": "2114:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2190:142:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 603,
									"name": "Approval",
									"nameLocation": "2341:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2366:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2350:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2389:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2373:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2398:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:63:4"
									},
									"src": "2335:78:4"
								}
							],
							"scope": 605,
							"src": "57:2358:4",
							"usedErrors": []
						}
					],
					"src": "32:2383:4"
				},
				"id": 4
			},
			"IERC165.sol": {
				"ast": {
					"absolutePath": "IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 606,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 607,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "IERC165",
							"nameLocation": "415:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "801:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 609,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:5"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "844:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:5"
									},
									"scope": 616,
									"src": "774:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 617,
							"src": "405:447:5",
							"usedErrors": []
						}
					],
					"src": "100:752:5"
				},
				"id": 5
			},
			"IERC721.sol": {
				"ast": {
					"absolutePath": "IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							616
						],
						"IERC721": [
							732
						]
					},
					"id": 733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:6"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 619,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 617,
							"src": "118:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 621,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "232:7:6"
									},
									"id": 622,
									"nodeType": "InheritanceSpecifier",
									"src": "232:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 620,
								"nodeType": "StructuredDocumentation",
								"src": "143:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 732,
							"linearizedBaseContracts": [
								732,
								616
							],
							"name": "IERC721",
							"nameLocation": "221:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "246:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 631,
									"name": "Transfer",
									"nameLocation": "345:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "370:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "354:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "392:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "376:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "412:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "396:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:67:6"
									},
									"src": "339:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "427:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 640,
									"name": "Approval",
									"nameLocation": "532:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "557:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "541:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "580:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "564:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "606:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "590:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:74:6"
									},
									"src": "526:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "621:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 649,
									"name": "ApprovalForAll",
									"nameLocation": "749:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "780:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "764:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "803:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "787:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "818:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "813:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "813:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:64:6"
									},
									"src": "743:85:6"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "834:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "924:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "942:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "934:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:15:6"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "972:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:17:6"
									},
									"scope": 732,
									"src": "915:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "995:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1140:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1156:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1148:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:17:6"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1196:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1188:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:15:6"
									},
									"scope": 732,
									"src": "1131:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "1209:690:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1913:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1947:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1939:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1969:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1961:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1989:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1981:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:73:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:0:6"
									},
									"scope": 732,
									"src": "1904:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2018:504:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2536:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2566:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2558:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2588:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2580:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2608:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2600:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:73:6"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2630:0:6"
									},
									"scope": 732,
									"src": "2527:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "2637:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3103:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3119:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "3111:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "3123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3123:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3110:29:6"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3148:0:6"
									},
									"scope": 732,
									"src": "3094:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "3155:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3308:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3328:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3320:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3319:17:6"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3368:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3360:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3359:18:6"
									},
									"scope": 732,
									"src": "3299:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "3384:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3707:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3733:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3725:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3748:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3743:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3743:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:34:6"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:0:6"
									},
									"scope": 732,
									"src": "3698:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3774:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3926:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3951:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3943:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3966:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3958:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3958:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:33:6"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3999:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3999:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:6:6"
									},
									"scope": 732,
									"src": "3917:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "4011:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4581:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4615:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4607:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4637:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4629:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4629:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4657:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4649:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4689:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4674:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:102:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4708:0:6"
									},
									"scope": 732,
									"src": "4572:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 733,
							"src": "211:4500:6",
							"usedErrors": []
						}
					],
					"src": "93:4618:6"
				},
				"id": 6
			},
			"IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							616
						],
						"IERC721": [
							732
						],
						"IERC721Enumerable": [
							763
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 734,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:7"
						},
						{
							"absolutePath": "IERC721.sol",
							"file": "./IERC721.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 733,
							"src": "139:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 737,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 732,
										"src": "332:7:7"
									},
									"id": 738,
									"nodeType": "InheritanceSpecifier",
									"src": "332:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 736,
								"nodeType": "StructuredDocumentation",
								"src": "164:136:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 763,
							"linearizedBaseContracts": [
								763,
								732,
								616
							],
							"name": "IERC721Enumerable",
							"nameLocation": "311:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "346:82:7",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "442:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:7"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "479:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:9:7"
									},
									"scope": 763,
									"src": "433:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "494:171:7",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "679:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "707:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "699:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "722:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "714:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:30:7"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "752:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:9:7"
									},
									"scope": 763,
									"src": "670:91:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "767:164:7",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "945:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "966:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "958:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:15:7"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "996:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:9:7"
									},
									"scope": 763,
									"src": "936:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 764,
							"src": "301:706:7",
							"usedErrors": []
						}
					],
					"src": "114:893:7"
				},
				"id": 7
			},
			"marketplace.sol": {
				"ast": {
					"absolutePath": "marketplace.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						],
						"BEPPausable": [
							527
						],
						"IBEP20": [
							604
						],
						"IERC165": [
							616
						],
						"IERC721": [
							732
						],
						"IERC721Enumerable": [
							763
						],
						"marketplace": [
							1204
						]
					},
					"id": 1205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:8"
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1205,
							"sourceUnit": 295,
							"src": "119:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEPPausable.sol",
							"file": "./BEPPausable.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1205,
							"sourceUnit": 528,
							"src": "143:27:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1205,
							"sourceUnit": 605,
							"src": "171:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 769,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1205,
							"sourceUnit": 764,
							"src": "194:33:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 770,
										"name": "BEPPausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 527,
										"src": "253:11:8"
									},
									"id": 771,
									"nodeType": "InheritanceSpecifier",
									"src": "253:11:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1204,
							"linearizedBaseContracts": [
								1204,
								527,
								454,
								324
							],
							"name": "marketplace",
							"nameLocation": "238:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "563df32f",
									"id": 773,
									"mutability": "mutable",
									"name": "Treasury",
									"nameLocation": "287:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "272:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 772,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36c3b4e2",
									"id": 775,
									"mutability": "mutable",
									"name": "LiquidPool",
									"nameLocation": "316:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "301:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 774,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8882779",
									"id": 777,
									"mutability": "mutable",
									"name": "ShoseNFTContract",
									"nameLocation": "347:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "332:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5620229",
									"id": 779,
									"mutability": "mutable",
									"name": "VIMContract",
									"nameLocation": "384:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "369:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 778,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ff32839",
									"id": 781,
									"mutability": "mutable",
									"name": "WBNBContract",
									"nameLocation": "416:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "401:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 780,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bcfcba76",
									"id": 783,
									"mutability": "mutable",
									"name": "MinBnB",
									"nameLocation": "449:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "434:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 782,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "434:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 787,
									"mutability": "mutable",
									"name": "shoseTranfer",
									"nameLocation": "497:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "461:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 786,
										"keyType": {
											"id": 784,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "469:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "461:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 785,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "480:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 791,
									"mutability": "mutable",
									"name": "shoseShell",
									"nameLocation": "552:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "516:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 790,
										"keyType": {
											"id": 788,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "524:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "516:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 789,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "535:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 794,
									"mutability": "mutable",
									"name": "allTokensSell",
									"nameLocation": "586:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "568:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 792,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "568:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 793,
										"nodeType": "ArrayTypeName",
										"src": "568:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 798,
									"name": "changeTreasury",
									"nameLocation": "612:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"indexed": false,
												"mutability": "mutable",
												"name": "_Treasury",
												"nameLocation": "635:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "627:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:19:8"
									},
									"src": "606:40:8"
								},
								{
									"anonymous": false,
									"id": 802,
									"name": "changeLiquidPool",
									"nameLocation": "657:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"indexed": false,
												"mutability": "mutable",
												"name": "_LiquidPool",
												"nameLocation": "682:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "674:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:21:8"
									},
									"src": "651:44:8"
								},
								{
									"anonymous": false,
									"id": 806,
									"name": "changeShoseNFTContract",
									"nameLocation": "706:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ShoseNFTContract",
												"nameLocation": "737:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "729:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:27:8"
									},
									"src": "700:56:8"
								},
								{
									"anonymous": false,
									"id": 810,
									"name": "changeVIMContract",
									"nameLocation": "767:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"indexed": false,
												"mutability": "mutable",
												"name": "_VIMContract",
												"nameLocation": "793:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "785:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:22:8"
									},
									"src": "761:46:8"
								},
								{
									"anonymous": false,
									"id": 814,
									"name": "changeMinBnB",
									"nameLocation": "818:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"indexed": false,
												"mutability": "mutable",
												"name": "_MinBnB",
												"nameLocation": "839:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "831:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:17:8"
									},
									"src": "812:36:8"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "868:360:8",
										"statements": [
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "879:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307863623337343533373932373532353246346265423564313039346246316138413039463336386237",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "890:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xcb3745379275252F4beB5d1094bF1a8A09F368b7"
													},
													"src": "879:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "879:53:8"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 821,
														"name": "LiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "942:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307864323935634635443835394239456433333163644636396334394138314566663565314265653833",
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "955:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xd295cF5D859B9Ed331cdF69c49A81Eff5e1Bee83"
													},
													"src": "942:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "942:55:8"
											},
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 825,
														"name": "ShoseNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "1007:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307843313834616635324361344531423166303835614138323336466638353038463532646336654137",
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1026:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xC184af52Ca4E1B1f085aA8236Ff8508F52dc6eA7"
													},
													"src": "1007:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "1007:61:8"
											},
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "VIMContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "1078:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835626364393143373334643636354665343236413544373135366632614437643337623736653330",
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1092:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x5bcd91C734d665Fe426A5D7156f2aD7d37b76e30"
													},
													"src": "1078:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "1078:56:8"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 833,
														"name": "WBNBContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "1144:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1159:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
													},
													"src": "1144:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "1144:57:8"
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "MinBnB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1211:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1220:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1211:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "1211:10:8"
											}
										]
									},
									"id": 842,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:8"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:0:8"
									},
									"scope": 1204,
									"src": "854:374:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "1293:76:8",
										"statements": [
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "1303:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "_Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1314:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1303:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "1303:20:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 854,
															"name": "Treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1353:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "changeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1338:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "EmitStatement",
												"src": "1333:29:8"
											}
										]
									},
									"functionSelector": "f0f44260",
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 847,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 846,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1283:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1283:9:8"
										}
									],
									"name": "setTreasury",
									"nameLocation": "1243:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_Treasury",
												"nameLocation": "1263:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1255:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:19:8"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:0:8"
									},
									"scope": 1204,
									"src": "1234:135:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "1439:84:8",
										"statements": [
											{
												"expression": {
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 865,
														"name": "LiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "1449:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 866,
														"name": "_LiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1462:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1449:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "1449:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 870,
															"name": "LiquidPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "1505:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 869,
														"name": "changeLiquidPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1488:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "EmitStatement",
												"src": "1483:33:8"
											}
										]
									},
									"functionSelector": "a888a93a",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1429:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1429:9:8"
										}
									],
									"name": "setLiquidPool",
									"nameLocation": "1385:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "_LiquidPool",
												"nameLocation": "1407:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1399:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:21:8"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1439:0:8"
									},
									"scope": 1204,
									"src": "1376:147:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "1604:108:8",
										"statements": [
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "ShoseNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "1614:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 882,
														"name": "_ShoseNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1633:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1614:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "1614:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 886,
															"name": "ShoseNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "1688:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 885,
														"name": "changeShoseNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "1665:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1665:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "EmitStatement",
												"src": "1660:45:8"
											}
										]
									},
									"functionSelector": "458a635a",
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1594:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1594:9:8"
										}
									],
									"name": "setShoseNFTContract",
									"nameLocation": "1538:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_ShoseNFTContract",
												"nameLocation": "1566:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1558:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:27:8"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:8"
									},
									"scope": 1204,
									"src": "1529:183:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "1783:88:8",
										"statements": [
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 897,
														"name": "VIMContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "1793:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 898,
														"name": "_VIMContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "1807:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1793:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "1793:26:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 902,
															"name": "VIMContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "1852:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 901,
														"name": "changeVIMContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1834:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "EmitStatement",
												"src": "1829:35:8"
											}
										]
									},
									"functionSelector": "1ecff38e",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 895,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 894,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1773:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1773:9:8"
										}
									],
									"name": "setVIMContract",
									"nameLocation": "1727:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "_VIMContract",
												"nameLocation": "1750:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1742:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:22:8"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1783:0:8"
									},
									"scope": 1204,
									"src": "1718:153:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1933:68:8",
										"statements": [
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "MinBnB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1943:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 914,
														"name": "_MinBnB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "1952:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1943:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "1943:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 918,
															"name": "MinBnB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "1987:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 917,
														"name": "changeMinBnB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1974:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1974:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "EmitStatement",
												"src": "1969:25:8"
											}
										]
									},
									"functionSelector": "de281e28",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 911,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 910,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1923:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1923:9:8"
										}
									],
									"name": "setMinBNB",
									"nameLocation": "1886:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "_MinBnB",
												"nameLocation": "1905:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1896:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1895:18:8"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:8"
									},
									"scope": 1204,
									"src": "1877:124:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "2069:280:8",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "wbnbbalance",
														"nameLocation": "2087:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "2079:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2079:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"arguments": [
														{
															"id": 933,
															"name": "LiquidPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "2132:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 930,
																	"name": "WBNBContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "2108:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 929,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "2101:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$604_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2101:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$604",
																"typeString": "contract IBEP20"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 543,
														"src": "2101:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2079:64:8"
											},
											{
												"assignments": [
													937
												],
												"declarations": [
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "vimbalance",
														"nameLocation": "2161:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "2153:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2153:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"arguments": [
														{
															"id": 942,
															"name": "LiquidPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "2204:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 939,
																	"name": "VIMContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2181:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 938,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "2174:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$604_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2174:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$604",
																"typeString": "contract IBEP20"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 543,
														"src": "2174:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2153:62:8"
											},
											{
												"assignments": [
													946
												],
												"declarations": [
													{
														"constant": false,
														"id": 946,
														"mutability": "mutable",
														"name": "bnbprice",
														"nameLocation": "2233:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "2225:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 945,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2225:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "vimbalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2244:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 948,
														"name": "wbnbbalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "2255:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2244:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2225:41:8"
											},
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "minprice",
														"nameLocation": "2284:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "2276:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2276:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 953,
															"name": "bnbprice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "2295:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 954,
															"name": "MinBnB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2306:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2295:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2315:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2295:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2276:41:8"
											},
											{
												"expression": {
													"id": 959,
													"name": "minprice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "2334:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 960,
												"nodeType": "Return",
												"src": "2327:15:8"
											}
										]
									},
									"functionSelector": "ea156f44",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMINPrice",
									"nameLocation": "2017:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:8"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2060:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:9:8"
									},
									"scope": 1204,
									"src": "2008:341:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "2432:406:8",
										"statements": [
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "2450:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "2442:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 971,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2442:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"expression": {
														"id": 973,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2457:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2457:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2442:25:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 981,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "2538:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 984,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2551:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_marketplace_$1204",
																				"typeString": "contract marketplace"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_marketplace_$1204",
																				"typeString": "contract marketplace"
																			}
																		],
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2543:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 982,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2543:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2543:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 978,
																			"name": "ShoseNFTContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "2503:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 977,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "2485:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$763_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2485:35:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721Enumerable_$763",
																		"typeString": "contract IERC721Enumerable"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 719,
																"src": "2485:52:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2485:72:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206e65656420417070726f766520466f7220416c6c20746f207468697320636f6e74616374",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2558:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5",
																"typeString": "literal_string \"You need Approve For All to this contact\""
															},
															"value": "You need Approve For All to this contact"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5",
																"typeString": "literal_string \"You need Approve For All to this contact\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2477:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:124:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "2477:124:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2619:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2633:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2625:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 992,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2625:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2625:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2619:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573732063616e206e6f74207a65726f",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2636:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd",
																"typeString": "literal_string \"Address can not zero\""
															},
															"value": "Address can not zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_928daa43ab380442cba2d94210c88fadc1a2055da97b90085819adce37dc24cd",
																"typeString": "literal_string \"Address can not zero\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2611:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2611:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2611:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2677:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1002,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2683:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2677:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46726f6d20616e6420546f2063616e206e6f742073616d65",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46",
																"typeString": "literal_string \"From and To can not same\""
															},
															"value": "From and To can not same"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_386bc3a8c3f79fcd57201e498b17c6e71e50f1a193c3eb8c807f534be7cb2f46",
																"typeString": "literal_string \"From and To can not same\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2669:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2669:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2669:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "2778:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "2784:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "2787:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1008,
																	"name": "ShoseNFTContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "2743:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1007,
																"name": "IERC721Enumerable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "2725:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$763_$",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2725:35:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Enumerable_$763",
																"typeString": "contract IERC721Enumerable"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "2725:52:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "2725:70:8"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1016,
															"name": "shoseTranfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "2805:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1018,
														"indexExpression": {
															"id": 1017,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "2818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2805:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2829:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2805:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "2805:26:8"
											}
										]
									},
									"functionSelector": "5c9e0d10",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 968,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 477,
												"src": "2418:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2418:13:8"
										}
									],
									"name": "transferVicShose",
									"nameLocation": "2364:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2389:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2381:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2400:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2392:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:28:8"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2432:0:8"
									},
									"scope": 1204,
									"src": "2355:483:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "2925:45:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1030,
														"name": "shoseTranfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "2942:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1032,
													"indexExpression": {
														"id": 1031,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2955:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2942:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1033,
												"nodeType": "Return",
												"src": "2935:28:8"
											}
										]
									},
									"functionSelector": "59464217",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkShoseTranfer",
									"nameLocation": "2852:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2878:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "2870:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:17:8"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "2916:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:9:8"
									},
									"scope": 1204,
									"src": "2843:127:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "3052:408:8",
										"statements": [
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "3070:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1094,
														"src": "3062:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1044,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3062:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1048,
												"initialValue": {
													"expression": {
														"id": 1046,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3079:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3079:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3062:27:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1054,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "3151:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1051,
																				"name": "ShoseNFTContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "3125:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1050,
																			"name": "IERC721Enumerable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 763,
																			"src": "3107:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$763_$",
																				"typeString": "type(contract IERC721Enumerable)"
																			}
																		},
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3107:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Enumerable_$763",
																			"typeString": "contract IERC721Enumerable"
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 665,
																	"src": "3107:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3107:52:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1056,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "3163:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3107:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73656c6c6572206e6565642068617665207468697320746f6b656e6964",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3170:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407",
																"typeString": "literal_string \"seller need have this tokenid\""
															},
															"value": "seller need have this tokenid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407",
																"typeString": "literal_string \"seller need have this tokenid\""
															}
														],
														"id": 1049,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3099:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3099:103:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "3099:103:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1066,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3273:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3288:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_marketplace_$1204",
																				"typeString": "contract marketplace"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_marketplace_$1204",
																				"typeString": "contract marketplace"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3280:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3280:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3280:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1063,
																			"name": "ShoseNFTContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "3238:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1062,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "3220:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$763_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3220:35:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721Enumerable_$763",
																		"typeString": "contract IERC721Enumerable"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 719,
																"src": "3220:52:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3220:74:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206e65656420417070726f766520466f7220416c6c20746f207468697320636f6e74616374",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3295:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5",
																"typeString": "literal_string \"You need Approve For All to this contact\""
															},
															"value": "You need Approve For All to this contact"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b0778dfe99423f232c9de732d7ae171455fd9beb1b8c13b82cba72cc6d46cb5",
																"typeString": "literal_string \"You need Approve For All to this contact\""
															}
														],
														"id": 1061,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3212:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:126:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "3212:126:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "3356:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3364:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3356:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365203e2030",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3367:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f",
																"typeString": "literal_string \"Price > 0\""
															},
															"value": "Price > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c4c44b5a783b2d8076c4258240d44d0c7e57964538004601f9e9503c14e038f",
																"typeString": "literal_string \"Price > 0\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3348:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3348:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "3348:31:8"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1082,
															"name": "shoseShell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3389:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1084,
														"indexExpression": {
															"id": 1083,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3400:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3389:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1085,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "3411:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3389:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "3389:27:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3445:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1088,
															"name": "allTokensSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3426:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3426:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3426:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "3426:27:8"
											}
										]
									},
									"functionSelector": "83d58215",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1042,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1041,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 477,
												"src": "3038:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3038:13:8"
										}
									],
									"name": "SellVicShose",
									"nameLocation": "2985:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3006:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2998:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3022:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "3014:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3014:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:31:8"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3052:0:8"
									},
									"scope": 1204,
									"src": "2976:484:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "3534:386:8",
										"statements": [
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "3552:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "3544:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1102,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3544:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"expression": {
														"id": 1104,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3561:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3561:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3544:27:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1112,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "3633:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1109,
																				"name": "ShoseNFTContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "3607:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1108,
																			"name": "IERC721Enumerable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 763,
																			"src": "3589:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$763_$",
																				"typeString": "type(contract IERC721Enumerable)"
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3589:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Enumerable_$763",
																			"typeString": "contract IERC721Enumerable"
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 665,
																	"src": "3589:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3589:52:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1114,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3645:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3589:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73656c6c6572206e6565642068617665207468697320746f6b656e6964",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3652:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407",
																"typeString": "literal_string \"seller need have this tokenid\""
															},
															"value": "seller need have this tokenid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b6806dd8323a4964c777bea9f5da75cc5b6953be5c506cbd8a37dc5fe4e2407",
																"typeString": "literal_string \"seller need have this tokenid\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3581:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3581:103:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "3581:103:8"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3694:26:8",
													"subExpression": {
														"baseExpression": {
															"id": 1119,
															"name": "shoseShell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3701:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1121,
														"indexExpression": {
															"id": 1120,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3712:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3701:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "3694:26:8"
											},
											{
												"body": {
													"id": 1148,
													"nodeType": "Block",
													"src": "3779:135:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1135,
																		"name": "allTokensSell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "3796:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1137,
																	"indexExpression": {
																		"id": 1136,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "3810:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3796:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1138,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "3816:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3796:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1147,
															"nodeType": "IfStatement",
															"src": "3793:111:8",
															"trueBody": {
																"id": 1146,
																"nodeType": "Block",
																"src": "3824:80:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "3842:23:8",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1140,
																					"name": "allTokensSell",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "3849:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 1142,
																				"indexExpression": {
																					"id": 1141,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1125,
																					"src": "3863:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3849:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1144,
																		"nodeType": "ExpressionStatement",
																		"src": "3842:23:8"
																	},
																	{
																		"functionReturnParameters": 1101,
																		"id": 1145,
																		"nodeType": "Return",
																		"src": "3883:7:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "3749:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1129,
															"name": "allTokensSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3753:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3753:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3749:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"initializationExpression": {
													"assignments": [
														1125
													],
													"declarations": [
														{
															"constant": false,
															"id": 1125,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3742:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1149,
															"src": "3734:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1124,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3734:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1127,
													"initialValue": {
														"hexValue": "30",
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3746:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3734:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3775:3:8",
														"subExpression": {
															"id": 1132,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "3775:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1134,
													"nodeType": "ExpressionStatement",
													"src": "3775:3:8"
												},
												"nodeType": "ForStatement",
												"src": "3730:184:8"
											}
										]
									},
									"functionSelector": "4dd79f10",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1099,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 477,
												"src": "3520:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3520:13:8"
										}
									],
									"name": "CancelSellVicShose",
									"nameLocation": "3475:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3502:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "3494:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3493:17:8"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3534:0:8"
									},
									"scope": 1204,
									"src": "3466:454:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "4028:285:8",
										"statements": [
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "shoseShellCount",
														"nameLocation": "4046:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "4038:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4038:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"expression": {
														"id": 1162,
														"name": "allTokensSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "4064:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4064:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4038:46:8"
											},
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "Price",
														"nameLocation": "4111:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "4094:22:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1167,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4094:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1168,
															"nodeType": "ArrayTypeName",
															"src": "4094:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1175,
												"initialValue": {
													"arguments": [
														{
															"id": 1173,
															"name": "shoseShellCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "4133:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4119:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1170,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4123:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1171,
															"nodeType": "ArrayTypeName",
															"src": "4123:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4119:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4094:55:8"
											},
											{
												"body": {
													"id": 1196,
													"nodeType": "Block",
													"src": "4205:64:8",
													"statements": [
														{
															"expression": {
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1186,
																		"name": "Price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "4219:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1188,
																	"indexExpression": {
																		"id": 1187,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "4225:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4219:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1189,
																		"name": "shoseShell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "4230:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1193,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1190,
																			"name": "allTokensSell",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "4241:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 1192,
																		"indexExpression": {
																			"id": 1191,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "4255:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4241:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4230:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4219:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1195,
															"nodeType": "ExpressionStatement",
															"src": "4219:39:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "4179:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1181,
														"name": "shoseShellCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "4183:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4179:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"initializationExpression": {
													"assignments": [
														1177
													],
													"declarations": [
														{
															"constant": false,
															"id": 1177,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4172:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1197,
															"src": "4164:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1176,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4164:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1179,
													"initialValue": {
														"hexValue": "30",
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4176:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4164:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4200:3:8",
														"subExpression": {
															"id": 1183,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4200:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1185,
													"nodeType": "ExpressionStatement",
													"src": "4200:3:8"
												},
												"nodeType": "ForStatement",
												"src": "4159:110:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1198,
															"name": "allTokensSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4286:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1199,
															"name": "Price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "4300:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1200,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4285:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_storage_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] storage ref,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1201,
												"nodeType": "Return",
												"src": "4278:28:8"
											}
										]
									},
									"functionSelector": "99bc1bfb",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSellingShose",
									"nameLocation": "3935:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3950:2:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "3993:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "3976:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1153,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3976:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1154,
													"nodeType": "ArrayTypeName",
													"src": "3976:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_Price",
												"nameLocation": "4020:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "4003:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1156,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4003:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1157,
													"nodeType": "ArrayTypeName",
													"src": "4003:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:52:8"
									},
									"scope": 1204,
									"src": "3926:387:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1205,
							"src": "229:4086:8",
							"usedErrors": []
						}
					],
					"src": "93:4222:8"
				},
				"id": 8
			}
		}
	}
}