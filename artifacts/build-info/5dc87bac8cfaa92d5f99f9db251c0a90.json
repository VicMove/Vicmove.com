{
	"id": "5dc87bac8cfaa92d5f99f9db251c0a90",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (finance/VestingWallet.sol)\npragma solidity ^0.8.0;\n\n\nimport \"./Address.sol\";\nimport \"./BEPOwnable.sol\";\nimport \"./IBEP20.sol\";\n\ncontract Treasury is BEPOwnable {\n\n    address public Pool2;\n\n    /**\n     * @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\n     */\n    constructor() payable { \n        Pool2 = 0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B;\n    }\n    \n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    \n\n    function setPool2(address _Pool2) external onlyOwner {\n        Pool2 = _Pool2;\n    }  \n    /**\n     * @dev get balance.\n     */\n    function getBalanceToken(address token) public view virtual returns (uint256) {\n        return IBEP20(token).balanceOf(address(this));\n    }\n    function sentT2Pool2Token(address tokenaddress) external onlyOwner {\n        uint256 newBalance = IBEP20(tokenaddress).balanceOf(address(this));\n        if(newBalance>0){\n            IBEP20(tokenaddress).transfer(Pool2, newBalance);\n        }\n    }\n\n    function getBalanceBNB() public view virtual returns (uint256) {\n        return address(this).balance;\n    }\n    function sentT2Pool2BNB() external onlyOwner {\n        uint256 newBalance = address(this).balance;\n        if(newBalance>0){\n            payable(Pool2).transfer(newBalance);\n        }\n    }\n\n    receive() external payable {}\n}"
			},
			"IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"BEPOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./BEPContext.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract BEPOwnable is BEPContext {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Returns true if the caller is the current owner.\n   */\n  function isOwner() public view returns (bool) {\n    return _msgSender() == _owner;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"BEPContext.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract BEPContext {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor() {}\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this;\n    return msg.data;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:8240  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:8240  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPContext.sol": {
				"BEPContext": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPContext.sol\":\"BEPContext\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPOwnable.sol": {
				"BEPOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPOwnable.sol\":\"BEPOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "BEPOwnable.sol:BEPOwnable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Treasury.sol": {
				"Treasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Pool2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalanceBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalanceToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sentT2Pool2BNB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenaddress",
									"type": "address"
								}
							],
							"name": "sentT2Pool2Token",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Pool2",
									"type": "address"
								}
							],
							"name": "setPool2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
							},
							"getBalanceToken(address)": {
								"details": "get balance."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setPool2(address)": {
								"details": "The contract should be able to receive Eth."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Treasury.sol\":194:1417  contract Treasury is BEPOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"BEPOwnable.sol\":716:733  address msgSender */\n  0x00\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  tag_6\n    /* \"BEPOwnable.sol\":736:746  _msgSender */\n  shl(0x20, tag_7)\n    /* \"BEPOwnable.sol\":736:748  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"BEPOwnable.sol\":716:748  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEPOwnable.sol\":763:772  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":754:760  _owner */\n  0x00\n  dup1\n    /* \"BEPOwnable.sol\":754:772  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEPOwnable.sol\":816:825  msgSender */\n  dup1\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEPOwnable.sol\":812:813  0 */\n  0x00\n    /* \"BEPOwnable.sol\":783:826  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEPOwnable.sol\":710:831  {... */\n  pop\n    /* \"Treasury.sol\":410:452  0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B */\n  0xfa0e47a2d6a58b9fd7ca1d4bfaadd11e8811824b\n    /* \"Treasury.sol\":402:407  Pool2 */\n  0x01\n  0x00\n    /* \"Treasury.sol\":402:452  Pool2 = 0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Treasury.sol\":194:1417  contract Treasury is BEPOwnable {... */\n  jump(tag_9)\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\ntag_7:\n    /* \"BEPContext.sol\":805:820  address payable */\n  0x00\n    /* \"BEPContext.sol\":843:853  msg.sender */\n  caller\n    /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"Treasury.sol\":194:1417  contract Treasury is BEPOwnable {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Treasury.sol\":194:1417  contract Treasury is BEPOwnable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9694ce75\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9694ce75\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xac4b3b0a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbc127127\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcc24c800\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0xf29d5f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x48eca45c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Treasury.sol\":824:1072  function sentT2Pool2Token(address tokenaddress) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"Treasury.sol\":679:819  function getBalanceToken(address token) public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":1191:1380  function sentT2Pool2BNB() external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Treasury.sol\":233:253  address public Pool2 */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":1078:1186  function getBalanceBNB() public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":547:631  function setPool2(address _Pool2) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Treasury.sol\":824:1072  function sentT2Pool2Token(address tokenaddress) external onlyOwner {... */\n    tag_20:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_60\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_37\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_60:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"Treasury.sol\":901:919  uint256 newBalance */\n      0x00\n        /* \"Treasury.sol\":929:941  tokenaddress */\n      dup2\n        /* \"Treasury.sol\":922:952  IBEP20(tokenaddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Treasury.sol\":961:965  this */\n      address\n        /* \"Treasury.sol\":922:967  IBEP20(tokenaddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"Treasury.sol\":901:967  uint256 newBalance = IBEP20(tokenaddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Treasury.sol\":991:992  0 */\n      0x00\n        /* \"Treasury.sol\":980:990  newBalance */\n      dup2\n        /* \"Treasury.sol\":980:992  newBalance>0 */\n      gt\n        /* \"Treasury.sol\":977:1066  if(newBalance>0){... */\n      iszero\n      tag_71\n      jumpi\n        /* \"Treasury.sol\":1014:1026  tokenaddress */\n      dup2\n        /* \"Treasury.sol\":1007:1036  IBEP20(tokenaddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Treasury.sol\":1037:1042  Pool2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Treasury.sol\":1044:1054  newBalance */\n      dup4\n        /* \"Treasury.sol\":1007:1055  IBEP20(tokenaddress).transfer(Pool2, newBalance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      pop\n        /* \"Treasury.sol\":977:1066  if(newBalance>0){... */\n    tag_71:\n        /* \"Treasury.sol\":891:1072  {... */\n      pop\n        /* \"Treasury.sol\":824:1072  function sentT2Pool2Token(address tokenaddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Treasury.sol\":679:819  function getBalanceToken(address token) public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"Treasury.sol\":748:755  uint256 */\n      0x00\n        /* \"Treasury.sol\":781:786  token */\n      dup2\n        /* \"Treasury.sol\":774:797  IBEP20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Treasury.sol\":806:810  this */\n      address\n        /* \"Treasury.sol\":774:812  IBEP20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_84:\n        /* \"Treasury.sol\":767:812  return IBEP20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Treasury.sol\":679:819  function getBalanceToken(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n    tag_29:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_86\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_37\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_86:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_63\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"BEPOwnable.sol\":1724:1725  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1708:1714  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1687:1727  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":1750:1751  0 */\n      0x00\n        /* \"BEPOwnable.sol\":1733:1739  _owner */\n      dup1\n      0x00\n        /* \"BEPOwnable.sol\":1733:1752  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":1630:1757  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n    tag_32:\n        /* \"BEPOwnable.sol\":937:944  address */\n      0x00\n        /* \"BEPOwnable.sol\":959:965  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":952:965  return _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":899:970  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n    tag_37:\n        /* \"BEPOwnable.sol\":1258:1262  bool */\n      0x00\n        /* \"BEPOwnable.sol\":1293:1299  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      tag_92\n        /* \"BEPOwnable.sol\":1277:1287  _msgSender */\n      tag_93\n        /* \"BEPOwnable.sol\":1277:1289  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"BEPOwnable.sol\":1277:1299  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEPOwnable.sol\":1270:1299  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"BEPOwnable.sol\":1218:1304  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Treasury.sol\":1191:1380  function sentT2Pool2BNB() external onlyOwner {... */\n    tag_42:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_95\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_37\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_95:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_63\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"Treasury.sol\":1246:1264  uint256 newBalance */\n      0x00\n        /* \"Treasury.sol\":1267:1288  address(this).balance */\n      selfbalance\n        /* \"Treasury.sol\":1246:1288  uint256 newBalance = address(this).balance */\n      swap1\n      pop\n        /* \"Treasury.sol\":1312:1313  0 */\n      0x00\n        /* \"Treasury.sol\":1301:1311  newBalance */\n      dup2\n        /* \"Treasury.sol\":1301:1313  newBalance>0 */\n      gt\n        /* \"Treasury.sol\":1298:1374  if(newBalance>0){... */\n      iszero\n      tag_99\n      jumpi\n        /* \"Treasury.sol\":1336:1341  Pool2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Treasury.sol\":1328:1351  payable(Pool2).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Treasury.sol\":1328:1363  payable(Pool2).transfer(newBalance) */\n      0x08fc\n        /* \"Treasury.sol\":1352:1362  newBalance */\n      dup3\n        /* \"Treasury.sol\":1328:1363  payable(Pool2).transfer(newBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n        /* \"Treasury.sol\":1298:1374  if(newBalance>0){... */\n    tag_99:\n        /* \"Treasury.sol\":1236:1380  {... */\n      pop\n        /* \"Treasury.sol\":1191:1380  function sentT2Pool2BNB() external onlyOwner {... */\n      jump\t// out\n        /* \"Treasury.sol\":233:253  address public Pool2 */\n    tag_45:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Treasury.sol\":1078:1186  function getBalanceBNB() public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"Treasury.sol\":1132:1139  uint256 */\n      0x00\n        /* \"Treasury.sol\":1158:1179  address(this).balance */\n      selfbalance\n        /* \"Treasury.sol\":1151:1179  return address(this).balance */\n      swap1\n      pop\n        /* \"Treasury.sol\":1078:1186  function getBalanceBNB() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Treasury.sol\":547:631  function setPool2(address _Pool2) external onlyOwner {... */\n    tag_54:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_104\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_37\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_104:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_63\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"Treasury.sol\":618:624  _Pool2 */\n      dup1\n        /* \"Treasury.sol\":610:615  Pool2 */\n      0x01\n      0x00\n        /* \"Treasury.sol\":610:624  Pool2 = _Pool2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Treasury.sol\":547:631  function setPool2(address _Pool2) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_58:\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      tag_109\n        /* \"BEPOwnable.sol\":1085:1092  isOwner */\n      tag_37\n        /* \"BEPOwnable.sol\":1085:1094  isOwner() */\n      jump\t// in\n    tag_109:\n        /* \"BEPOwnable.sol\":1077:1131  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_63\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      tag_113\n        /* \"BEPOwnable.sol\":1983:1991  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":1964:1982  _transferOwnership */\n      tag_114\n        /* \"BEPOwnable.sol\":1964:1992  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_113:\n        /* \"BEPOwnable.sol\":1896:1997  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n    tag_93:\n        /* \"BEPContext.sol\":805:820  address payable */\n      0x00\n        /* \"BEPContext.sol\":843:853  msg.sender */\n      caller\n        /* \"BEPContext.sol\":828:854  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEPContext.sol\":760:859  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n    tag_114:\n        /* \"BEPOwnable.sol\":2179:2180  0 */\n      0x00\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2159:2167  newOwner */\n      dup2\n        /* \"BEPOwnable.sol\":2159:2181  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEPOwnable.sol\":2151:2224  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"BEPOwnable.sol\":2264:2272  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2256:2262  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEPOwnable.sol\":2235:2273  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEPOwnable.sol\":2288:2296  newOwner */\n      dup1\n        /* \"BEPOwnable.sol\":2279:2285  _owner */\n      0x00\n      dup1\n        /* \"BEPOwnable.sol\":2279:2296  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEPOwnable.sol\":2090:2301  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_121:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_123\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_125:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_127\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:438   */\n    tag_129:\n        /* \"#utility.yul\":352:357   */\n      0x00\n        /* \"#utility.yul\":383:389   */\n      dup2\n        /* \"#utility.yul\":377:390   */\n      mload\n        /* \"#utility.yul\":368:390   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:432   */\n      tag_131\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":399:432   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":295:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:773   */\n    tag_19:\n        /* \"#utility.yul\":503:509   */\n      0x00\n        /* \"#utility.yul\":552:554   */\n      0x20\n        /* \"#utility.yul\":540:549   */\n      dup3\n        /* \"#utility.yul\":531:538   */\n      dup5\n        /* \"#utility.yul\":527:550   */\n      sub\n        /* \"#utility.yul\":523:555   */\n      slt\n        /* \"#utility.yul\":520:639   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":558:637   */\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":520:639   */\n    tag_134:\n        /* \"#utility.yul\":678:679   */\n      0x00\n        /* \"#utility.yul\":703:756   */\n      tag_137\n        /* \"#utility.yul\":748:755   */\n      dup5\n        /* \"#utility.yul\":739:745   */\n      dup3\n        /* \"#utility.yul\":728:737   */\n      dup6\n        /* \"#utility.yul\":724:746   */\n      add\n        /* \"#utility.yul\":703:756   */\n      tag_121\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":693:756   */\n      swap2\n      pop\n        /* \"#utility.yul\":649:766   */\n      pop\n        /* \"#utility.yul\":444:773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":779:1124   */\n    tag_78:\n        /* \"#utility.yul\":846:852   */\n      0x00\n        /* \"#utility.yul\":895:897   */\n      0x20\n        /* \"#utility.yul\":883:892   */\n      dup3\n        /* \"#utility.yul\":874:881   */\n      dup5\n        /* \"#utility.yul\":870:893   */\n      sub\n        /* \"#utility.yul\":866:898   */\n      slt\n        /* \"#utility.yul\":863:982   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":901:980   */\n      tag_140\n      tag_136\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":863:982   */\n    tag_139:\n        /* \"#utility.yul\":1021:1022   */\n      0x00\n        /* \"#utility.yul\":1046:1107   */\n      tag_141\n        /* \"#utility.yul\":1099:1106   */\n      dup5\n        /* \"#utility.yul\":1090:1096   */\n      dup3\n        /* \"#utility.yul\":1079:1088   */\n      dup6\n        /* \"#utility.yul\":1075:1097   */\n      add\n        /* \"#utility.yul\":1046:1107   */\n      tag_125\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1036:1107   */\n      swap2\n      pop\n        /* \"#utility.yul\":992:1117   */\n      pop\n        /* \"#utility.yul\":779:1124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1481   */\n    tag_70:\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1336   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1255:1334   */\n      tag_144\n      tag_136\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1217:1336   */\n    tag_143:\n        /* \"#utility.yul\":1375:1376   */\n      0x00\n        /* \"#utility.yul\":1400:1464   */\n      tag_145\n        /* \"#utility.yul\":1456:1463   */\n      dup5\n        /* \"#utility.yul\":1447:1453   */\n      dup3\n        /* \"#utility.yul\":1436:1445   */\n      dup6\n        /* \"#utility.yul\":1432:1454   */\n      add\n        /* \"#utility.yul\":1400:1464   */\n      tag_129\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1390:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1346:1474   */\n      pop\n        /* \"#utility.yul\":1130:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1605   */\n    tag_146:\n        /* \"#utility.yul\":1574:1598   */\n      tag_148\n        /* \"#utility.yul\":1592:1597   */\n      dup2\n        /* \"#utility.yul\":1574:1598   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1569:1572   */\n      dup3\n        /* \"#utility.yul\":1562:1599   */\n      mstore\n        /* \"#utility.yul\":1487:1605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1720   */\n    tag_150:\n        /* \"#utility.yul\":1692:1713   */\n      tag_152\n        /* \"#utility.yul\":1707:1712   */\n      dup2\n        /* \"#utility.yul\":1692:1713   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1687:1690   */\n      dup3\n        /* \"#utility.yul\":1680:1714   */\n      mstore\n        /* \"#utility.yul\":1611:1720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1726:2092   */\n    tag_154:\n        /* \"#utility.yul\":1868:1871   */\n      0x00\n        /* \"#utility.yul\":1889:1956   */\n      tag_156\n        /* \"#utility.yul\":1953:1955   */\n      0x26\n        /* \"#utility.yul\":1948:1951   */\n      dup4\n        /* \"#utility.yul\":1889:1956   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1882:1956   */\n      swap2\n      pop\n        /* \"#utility.yul\":1965:2058   */\n      tag_158\n        /* \"#utility.yul\":2054:2057   */\n      dup3\n        /* \"#utility.yul\":1965:2058   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2083:2085   */\n      0x40\n        /* \"#utility.yul\":2078:2081   */\n      dup3\n        /* \"#utility.yul\":2074:2086   */\n      add\n        /* \"#utility.yul\":2067:2086   */\n      swap1\n      pop\n        /* \"#utility.yul\":1726:2092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2098:2464   */\n    tag_160:\n        /* \"#utility.yul\":2240:2243   */\n      0x00\n        /* \"#utility.yul\":2261:2328   */\n      tag_162\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2320:2323   */\n      dup4\n        /* \"#utility.yul\":2261:2328   */\n      tag_157\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2254:2328   */\n      swap2\n      pop\n        /* \"#utility.yul\":2337:2430   */\n      tag_163\n        /* \"#utility.yul\":2426:2429   */\n      dup3\n        /* \"#utility.yul\":2337:2430   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2455:2457   */\n      0x20\n        /* \"#utility.yul\":2450:2453   */\n      dup3\n        /* \"#utility.yul\":2446:2458   */\n      add\n        /* \"#utility.yul\":2439:2458   */\n      swap1\n      pop\n        /* \"#utility.yul\":2098:2464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2470:2588   */\n    tag_165:\n        /* \"#utility.yul\":2557:2581   */\n      tag_167\n        /* \"#utility.yul\":2575:2580   */\n      dup2\n        /* \"#utility.yul\":2557:2581   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2552:2555   */\n      dup3\n        /* \"#utility.yul\":2545:2582   */\n      mstore\n        /* \"#utility.yul\":2470:2588   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2594:2816   */\n    tag_34:\n        /* \"#utility.yul\":2687:2691   */\n      0x00\n        /* \"#utility.yul\":2725:2727   */\n      0x20\n        /* \"#utility.yul\":2714:2723   */\n      dup3\n        /* \"#utility.yul\":2710:2728   */\n      add\n        /* \"#utility.yul\":2702:2728   */\n      swap1\n      pop\n        /* \"#utility.yul\":2738:2809   */\n      tag_170\n        /* \"#utility.yul\":2806:2807   */\n      0x00\n        /* \"#utility.yul\":2795:2804   */\n      dup4\n        /* \"#utility.yul\":2791:2808   */\n      add\n        /* \"#utility.yul\":2782:2788   */\n      dup5\n        /* \"#utility.yul\":2738:2809   */\n      tag_146\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2594:2816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2822:3154   */\n    tag_73:\n        /* \"#utility.yul\":2943:2947   */\n      0x00\n        /* \"#utility.yul\":2981:2983   */\n      0x40\n        /* \"#utility.yul\":2970:2979   */\n      dup3\n        /* \"#utility.yul\":2966:2984   */\n      add\n        /* \"#utility.yul\":2958:2984   */\n      swap1\n      pop\n        /* \"#utility.yul\":2994:3065   */\n      tag_172\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3051:3060   */\n      dup4\n        /* \"#utility.yul\":3047:3064   */\n      add\n        /* \"#utility.yul\":3038:3044   */\n      dup6\n        /* \"#utility.yul\":2994:3065   */\n      tag_146\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3075:3147   */\n      tag_173\n        /* \"#utility.yul\":3143:3145   */\n      0x20\n        /* \"#utility.yul\":3132:3141   */\n      dup4\n        /* \"#utility.yul\":3128:3146   */\n      add\n        /* \"#utility.yul\":3119:3125   */\n      dup5\n        /* \"#utility.yul\":3075:3147   */\n      tag_165\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2822:3154   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3160:3370   */\n    tag_39:\n        /* \"#utility.yul\":3247:3251   */\n      0x00\n        /* \"#utility.yul\":3285:3287   */\n      0x20\n        /* \"#utility.yul\":3274:3283   */\n      dup3\n        /* \"#utility.yul\":3270:3288   */\n      add\n        /* \"#utility.yul\":3262:3288   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3363   */\n      tag_175\n        /* \"#utility.yul\":3360:3361   */\n      0x00\n        /* \"#utility.yul\":3349:3358   */\n      dup4\n        /* \"#utility.yul\":3345:3362   */\n      add\n        /* \"#utility.yul\":3336:3342   */\n      dup5\n        /* \"#utility.yul\":3298:3363   */\n      tag_150\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3160:3370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3376:3795   */\n    tag_119:\n        /* \"#utility.yul\":3542:3546   */\n      0x00\n        /* \"#utility.yul\":3580:3582   */\n      0x20\n        /* \"#utility.yul\":3569:3578   */\n      dup3\n        /* \"#utility.yul\":3565:3583   */\n      add\n        /* \"#utility.yul\":3557:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3629:3638   */\n      dup2\n        /* \"#utility.yul\":3623:3627   */\n      dup2\n        /* \"#utility.yul\":3619:3639   */\n      sub\n        /* \"#utility.yul\":3615:3616   */\n      0x00\n        /* \"#utility.yul\":3604:3613   */\n      dup4\n        /* \"#utility.yul\":3600:3617   */\n      add\n        /* \"#utility.yul\":3593:3640   */\n      mstore\n        /* \"#utility.yul\":3657:3788   */\n      tag_177\n        /* \"#utility.yul\":3783:3787   */\n      dup2\n        /* \"#utility.yul\":3657:3788   */\n      tag_154\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3649:3788   */\n      swap1\n      pop\n        /* \"#utility.yul\":3376:3795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3801:4220   */\n    tag_63:\n        /* \"#utility.yul\":3967:3971   */\n      0x00\n        /* \"#utility.yul\":4005:4007   */\n      0x20\n        /* \"#utility.yul\":3994:4003   */\n      dup3\n        /* \"#utility.yul\":3990:4008   */\n      add\n        /* \"#utility.yul\":3982:4008   */\n      swap1\n      pop\n        /* \"#utility.yul\":4054:4063   */\n      dup2\n        /* \"#utility.yul\":4048:4052   */\n      dup2\n        /* \"#utility.yul\":4044:4064   */\n      sub\n        /* \"#utility.yul\":4040:4041   */\n      0x00\n        /* \"#utility.yul\":4029:4038   */\n      dup4\n        /* \"#utility.yul\":4025:4042   */\n      add\n        /* \"#utility.yul\":4018:4065   */\n      mstore\n        /* \"#utility.yul\":4082:4213   */\n      tag_179\n        /* \"#utility.yul\":4208:4212   */\n      dup2\n        /* \"#utility.yul\":4082:4213   */\n      tag_160\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4074:4213   */\n      swap1\n      pop\n        /* \"#utility.yul\":3801:4220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4226:4448   */\n    tag_26:\n        /* \"#utility.yul\":4319:4323   */\n      0x00\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"#utility.yul\":4346:4355   */\n      dup3\n        /* \"#utility.yul\":4342:4360   */\n      add\n        /* \"#utility.yul\":4334:4360   */\n      swap1\n      pop\n        /* \"#utility.yul\":4370:4441   */\n      tag_181\n        /* \"#utility.yul\":4438:4439   */\n      0x00\n        /* \"#utility.yul\":4427:4436   */\n      dup4\n        /* \"#utility.yul\":4423:4440   */\n      add\n        /* \"#utility.yul\":4414:4420   */\n      dup5\n        /* \"#utility.yul\":4370:4441   */\n      tag_165\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4226:4448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4535:4704   */\n    tag_157:\n        /* \"#utility.yul\":4619:4630   */\n      0x00\n        /* \"#utility.yul\":4653:4659   */\n      dup3\n        /* \"#utility.yul\":4648:4651   */\n      dup3\n        /* \"#utility.yul\":4641:4660   */\n      mstore\n        /* \"#utility.yul\":4693:4697   */\n      0x20\n        /* \"#utility.yul\":4688:4691   */\n      dup3\n        /* \"#utility.yul\":4684:4698   */\n      add\n        /* \"#utility.yul\":4669:4698   */\n      swap1\n      pop\n        /* \"#utility.yul\":4535:4704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4710:4806   */\n    tag_149:\n        /* \"#utility.yul\":4747:4754   */\n      0x00\n        /* \"#utility.yul\":4776:4800   */\n      tag_186\n        /* \"#utility.yul\":4794:4799   */\n      dup3\n        /* \"#utility.yul\":4776:4800   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4765:4800   */\n      swap1\n      pop\n        /* \"#utility.yul\":4710:4806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4812:4902   */\n    tag_153:\n        /* \"#utility.yul\":4846:4853   */\n      0x00\n        /* \"#utility.yul\":4889:4894   */\n      dup2\n        /* \"#utility.yul\":4882:4895   */\n      iszero\n        /* \"#utility.yul\":4875:4896   */\n      iszero\n        /* \"#utility.yul\":4864:4896   */\n      swap1\n      pop\n        /* \"#utility.yul\":4812:4902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4908:5034   */\n    tag_187:\n        /* \"#utility.yul\":4945:4952   */\n      0x00\n        /* \"#utility.yul\":4985:5027   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4978:4983   */\n      dup3\n        /* \"#utility.yul\":4974:5028   */\n      and\n        /* \"#utility.yul\":4963:5028   */\n      swap1\n      pop\n        /* \"#utility.yul\":4908:5034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5040:5117   */\n    tag_168:\n        /* \"#utility.yul\":5077:5084   */\n      0x00\n        /* \"#utility.yul\":5106:5111   */\n      dup2\n        /* \"#utility.yul\":5095:5111   */\n      swap1\n      pop\n        /* \"#utility.yul\":5040:5117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5246:5363   */\n    tag_136:\n        /* \"#utility.yul\":5355:5356   */\n      0x00\n        /* \"#utility.yul\":5352:5353   */\n      dup1\n        /* \"#utility.yul\":5345:5357   */\n      revert\n        /* \"#utility.yul\":5369:5594   */\n    tag_159:\n        /* \"#utility.yul\":5509:5543   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5505:5506   */\n      0x00\n        /* \"#utility.yul\":5497:5503   */\n      dup3\n        /* \"#utility.yul\":5493:5507   */\n      add\n        /* \"#utility.yul\":5486:5544   */\n      mstore\n        /* \"#utility.yul\":5578:5586   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5573:5575   */\n      0x20\n        /* \"#utility.yul\":5565:5571   */\n      dup3\n        /* \"#utility.yul\":5561:5576   */\n      add\n        /* \"#utility.yul\":5554:5587   */\n      mstore\n        /* \"#utility.yul\":5369:5594   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5600:5782   */\n    tag_164:\n        /* \"#utility.yul\":5740:5774   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5736:5737   */\n      0x00\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5724:5738   */\n      add\n        /* \"#utility.yul\":5717:5775   */\n      mstore\n        /* \"#utility.yul\":5600:5782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5788:5910   */\n    tag_124:\n        /* \"#utility.yul\":5861:5885   */\n      tag_197\n        /* \"#utility.yul\":5879:5884   */\n      dup2\n        /* \"#utility.yul\":5861:5885   */\n      tag_149\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5854:5859   */\n      dup2\n        /* \"#utility.yul\":5851:5886   */\n      eq\n        /* \"#utility.yul\":5841:5904   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":5900:5901   */\n      0x00\n        /* \"#utility.yul\":5897:5898   */\n      dup1\n        /* \"#utility.yul\":5890:5902   */\n      revert\n        /* \"#utility.yul\":5841:5904   */\n    tag_198:\n        /* \"#utility.yul\":5788:5910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5916:6032   */\n    tag_128:\n        /* \"#utility.yul\":5986:6007   */\n      tag_200\n        /* \"#utility.yul\":6001:6006   */\n      dup2\n        /* \"#utility.yul\":5986:6007   */\n      tag_153\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5979:5984   */\n      dup2\n        /* \"#utility.yul\":5976:6008   */\n      eq\n        /* \"#utility.yul\":5966:6026   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":6022:6023   */\n      0x00\n        /* \"#utility.yul\":6019:6020   */\n      dup1\n        /* \"#utility.yul\":6012:6024   */\n      revert\n        /* \"#utility.yul\":5966:6026   */\n    tag_201:\n        /* \"#utility.yul\":5916:6032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6038:6160   */\n    tag_132:\n        /* \"#utility.yul\":6111:6135   */\n      tag_203\n        /* \"#utility.yul\":6129:6134   */\n      dup2\n        /* \"#utility.yul\":6111:6135   */\n      tag_168\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6104:6109   */\n      dup2\n        /* \"#utility.yul\":6101:6136   */\n      eq\n        /* \"#utility.yul\":6091:6154   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":6150:6151   */\n      0x00\n        /* \"#utility.yul\":6147:6148   */\n      dup1\n        /* \"#utility.yul\":6140:6152   */\n      revert\n        /* \"#utility.yul\":6091:6154   */\n    tag_204:\n        /* \"#utility.yul\":6038:6160   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208386d20e8cad2585999ec0094daaebe833b7a1ffea72718eb923405844bcfc9b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_360": {
									"entryPoint": null,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_549": {
									"entryPoint": null,
									"id": 549,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 268,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600061001461010c60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35073fa0e47a2d6a58b9fd7ca1d4bfaadd11e8811824b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610114565b600033905090565b610c29806101236000396000f3fe6080604052600436106100945760003560e01c80639694ce75116100595780639694ce7514610173578063ac4b3b0a1461018a578063bc127127146101b5578063cc24c800146101e0578063f2fde38b146102095761009b565b8062f29d5f146100a057806348eca45c146100c9578063715018a6146101065780638da5cb5b1461011d5780638f32d59b146101485761009b565b3661009b57005b600080fd5b3480156100ac57600080fd5b506100c760048036038101906100c29190610924565b610232565b005b3480156100d557600080fd5b506100f060048036038101906100eb9190610924565b6103c4565b6040516100fd9190610abd565b60405180910390f35b34801561011257600080fd5b5061011b610456565b005b34801561012957600080fd5b5061013261055b565b60405161013f9190610a1e565b60405180910390f35b34801561015457600080fd5b5061015d610584565b60405161016a9190610a62565b60405180910390f35b34801561017f57600080fd5b506101886105e2565b005b34801561019657600080fd5b5061019f6106a4565b6040516101ac9190610a1e565b60405180910390f35b3480156101c157600080fd5b506101ca6106ca565b6040516101d79190610abd565b60405180910390f35b3480156101ec57600080fd5b5061020760048036038101906102029190610924565b6106d2565b005b34801561021557600080fd5b50610230600480360381019061022b9190610924565b61075d565b005b61023a610584565b610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027090610a9d565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102b49190610a1e565b60206040518083038186803b1580156102cc57600080fd5b505afa1580156102e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610304919061097e565b905060008111156103c0578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161036c929190610a39565b602060405180830381600087803b15801561038657600080fd5b505af115801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be9190610951565b505b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ff9190610a1e565b60206040518083038186803b15801561041757600080fd5b505afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f919061097e565b9050919050565b61045e610584565b61049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049490610a9d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105c66107b0565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6105ea610584565b610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062090610a9d565b60405180910390fd5b600047905060008111156106a157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561069f573d6000803e3d6000fd5b505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b6106da610584565b610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071090610a9d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610765610584565b6107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90610a9d565b60405180910390fd5b6107ad816107b8565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f90610a7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506108f481610bae565b92915050565b60008151905061090981610bc5565b92915050565b60008151905061091e81610bdc565b92915050565b60006020828403121561093a57610939610b31565b5b6000610948848285016108e5565b91505092915050565b60006020828403121561096757610966610b31565b5b6000610975848285016108fa565b91505092915050565b60006020828403121561099457610993610b31565b5b60006109a28482850161090f565b91505092915050565b6109b481610ae9565b82525050565b6109c381610afb565b82525050565b60006109d6602683610ad8565b91506109e182610b36565b604082019050919050565b60006109f9602083610ad8565b9150610a0482610b85565b602082019050919050565b610a1881610b27565b82525050565b6000602082019050610a3360008301846109ab565b92915050565b6000604082019050610a4e60008301856109ab565b610a5b6020830184610a0f565b9392505050565b6000602082019050610a7760008301846109ba565b92915050565b60006020820190508181036000830152610a96816109c9565b9050919050565b60006020820190508181036000830152610ab6816109ec565b9050919050565b6000602082019050610ad26000830184610a0f565b92915050565b600082825260208201905092915050565b6000610af482610b07565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610bb781610ae9565b8114610bc257600080fd5b50565b610bce81610afb565b8114610bd957600080fd5b50565b610be581610b27565b8114610bf057600080fd5b5056fea26469706673582212208386d20e8cad2585999ec0094daaebe833b7a1ffea72718eb923405844bcfc9b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH2 0x14 PUSH2 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH20 0xFA0E47A2D6A58B9FD7CA1D4BFAADD11E8811824B PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC29 DUP1 PUSH2 0x123 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9694CE75 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9694CE75 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAC4B3B0A EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xBC127127 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xCC24C800 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x209 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xF29D5F EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x48ECA45C EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x148 JUMPI PUSH2 0x9B JUMP JUMPDEST CALLDATASIZE PUSH2 0x9B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x456 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH2 0x584 JUMP JUMPDEST PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3C0 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C SWAP3 SWAP2 SWAP1 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45E PUSH2 0x584 JUMP JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5C6 PUSH2 0x7B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x584 JUMP JUMPDEST PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6DA PUSH2 0x584 JUMP JUMPDEST PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x765 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AD DUP2 PUSH2 0x7B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81F SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8F4 DUP2 PUSH2 0xBAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x909 DUP2 PUSH2 0xBC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x91E DUP2 PUSH2 0xBDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93A JUMPI PUSH2 0x939 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP5 DUP3 DUP6 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x975 DUP5 DUP3 DUP6 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x994 JUMPI PUSH2 0x993 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A2 DUP5 DUP3 DUP6 ADD PUSH2 0x90F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B4 DUP2 PUSH2 0xAE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0xAFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D6 PUSH1 0x26 DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E1 DUP3 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F9 PUSH1 0x20 DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA04 DUP3 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 DUP2 PUSH2 0xB27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0xA5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA0F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA96 DUP2 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAB6 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 DUP3 PUSH2 0xB07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xBB7 DUP2 PUSH2 0xAE9 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBCE DUP2 PUSH2 0xAFB JUMP JUMPDEST DUP2 EQ PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBE5 DUP2 PUSH2 0xB27 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP7 0xD2 0xE DUP13 0xAD 0x25 DUP6 SWAP10 SWAP15 0xC0 MULMOD 0x4D 0xAA 0xEB 0xE8 CALLER 0xB7 LOG1 SELFDESTRUCT 0xEA PUSH19 0x718EB923405844BCFC9B64736F6C6343000807 STOP CALLER ",
							"sourceMap": "194:1223:4:-:0;;;716:17:2;736:12;:10;;;:12;;:::i;:::-;716:32;;763:9;754:6;;:18;;;;;;;;;;;;;;;;;;816:9;783:43;;812:1;783:43;;;;;;;;;;;;710:121;410:42:4;402:5;;:50;;;;;;;;;;;;;;;;;;194:1223;;760:99:1;805:15;843:10;828:26;;760:99;:::o;194:1223:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Pool2_540": {
									"entryPoint": 1700,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_657": {
									"entryPoint": null,
									"id": 657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_312": {
									"entryPoint": 1968,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_453": {
									"entryPoint": 1976,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBalanceBNB_626": {
									"entryPoint": 1738,
									"id": 626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalanceToken_581": {
									"entryPoint": 964,
									"id": 581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOwner_392": {
									"entryPoint": 1412,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_369": {
									"entryPoint": 1371,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_414": {
									"entryPoint": 1110,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sentT2Pool2BNB_653": {
									"entryPoint": 1506,
									"id": 653,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sentT2Pool2Token_614": {
									"entryPoint": 562,
									"id": 614,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPool2_562": {
									"entryPoint": 1746,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_427": {
									"entryPoint": 1885,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6163:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "358:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "368:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "383:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "377:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "368:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "399:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "336:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "344:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "352:5:5",
														"type": ""
													}
												],
												"src": "295:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "510:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "556:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "558:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "558:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "558:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "531:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "540:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "527:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "527:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "523:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:32:5"
															},
															"nodeType": "YulIf",
															"src": "520:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "649:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "664:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "668:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "693:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "728:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "739:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "724:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "724:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "748:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "703:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "703:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "693:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "480:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "491:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "503:6:5",
														"type": ""
													}
												],
												"src": "444:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "853:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "899:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "901:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "901:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "901:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "874:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "883:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "870:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "895:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:32:5"
															},
															"nodeType": "YulIf",
															"src": "863:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "992:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1007:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1021:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1011:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1036:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1079:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1090:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1046:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1046:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1036:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "823:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "834:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "846:6:5",
														"type": ""
													}
												],
												"src": "779:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1255:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:5"
															},
															"nodeType": "YulIf",
															"src": "1217:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1346:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1361:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1365:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1390:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1400:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1390:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1188:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:5",
														"type": ""
													}
												],
												"src": "1130:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1569:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1592:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1574:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1574:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1562:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1540:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1547:3:5",
														"type": ""
													}
												],
												"src": "1487:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1687:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1707:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1692:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1680:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1658:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1665:3:5",
														"type": ""
													}
												],
												"src": "1611:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1872:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1882:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1948:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1953:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1889:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1882:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2054:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1965:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2067:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2078:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2083:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2074:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2067:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1860:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1868:3:5",
														"type": ""
													}
												],
												"src": "1726:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2244:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2254:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2320:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2261:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2426:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2337:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2337:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2439:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2450:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2455:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2446:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2232:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2240:3:5",
														"type": ""
													}
												],
												"src": "2098:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2535:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2552:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2575:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2557:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2557:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2545:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2523:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2530:3:5",
														"type": ""
													}
												],
												"src": "2470:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2692:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2702:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2714:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2710:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2702:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2782:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2806:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2791:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2738:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2738:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2664:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2676:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2687:4:5",
														"type": ""
													}
												],
												"src": "2594:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2948:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2958:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2970:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2981:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2966:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2958:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3051:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3062:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3119:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3132:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3143:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3128:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3128:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3075:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3075:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3075:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2912:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2924:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2932:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2943:4:5",
														"type": ""
													}
												],
												"src": "2822:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3252:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3262:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3274:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3262:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3336:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3349:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3345:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3345:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3298:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3298:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3224:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3236:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3247:4:5",
														"type": ""
													}
												],
												"src": "3160:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3557:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3569:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3557:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3615:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3600:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3623:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3629:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3619:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3619:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3593:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3649:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3783:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3657:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3649:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3527:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3542:4:5",
														"type": ""
													}
												],
												"src": "3376:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3972:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3982:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3994:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3990:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3982:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4029:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4040:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4025:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4048:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4044:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4044:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4018:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4018:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4074:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4208:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4082:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4074:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3952:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3967:4:5",
														"type": ""
													}
												],
												"src": "3801:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4324:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4334:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4346:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4334:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4414:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4427:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4438:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4423:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4423:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4370:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4370:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4296:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4308:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4319:4:5",
														"type": ""
													}
												],
												"src": "4226:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4514:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4514:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4487:6:5",
														"type": ""
													}
												],
												"src": "4454:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4631:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4648:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4653:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4641:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4641:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4688:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4693:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4684:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4669:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4603:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4608:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4619:11:5",
														"type": ""
													}
												],
												"src": "4535:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4765:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4794:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4776:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4765:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4737:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4747:7:5",
														"type": ""
													}
												],
												"src": "4710:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4854:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4864:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4889:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4882:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4882:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4864:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4836:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4846:7:5",
														"type": ""
													}
												],
												"src": "4812:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4953:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4963:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4978:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4985:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4974:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4963:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4935:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4945:7:5",
														"type": ""
													}
												],
												"src": "4908:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5085:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5095:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5106:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5095:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5067:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5077:7:5",
														"type": ""
													}
												],
												"src": "5040:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5212:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5229:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5232:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5222:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5222:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5123:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5352:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5355:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5246:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5475:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5497:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5505:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5493:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5493:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5509:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5486:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5486:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5565:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5573:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5578:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5554:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5467:6:5",
														"type": ""
													}
												],
												"src": "5369:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5706:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5728:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5736:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5724:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5724:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5740:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5717:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5698:6:5",
														"type": ""
													}
												],
												"src": "5600:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5831:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5888:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5897:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5900:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5890:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5890:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5890:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5854:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5879:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5861:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5861:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5851:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5851:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:43:5"
															},
															"nodeType": "YulIf",
															"src": "5841:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5824:5:5",
														"type": ""
													}
												],
												"src": "5788:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5956:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6010:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6019:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6012:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6012:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6012:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5979:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6001:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5986:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5986:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5976:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5976:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5969:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5969:40:5"
															},
															"nodeType": "YulIf",
															"src": "5966:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5949:5:5",
														"type": ""
													}
												],
												"src": "5916:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6081:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6138:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6147:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6150:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6140:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6104:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6129:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6111:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6111:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6101:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6101:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6094:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6094:43:5"
															},
															"nodeType": "YulIf",
															"src": "6091:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6074:5:5",
														"type": ""
													}
												],
												"src": "6038:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100945760003560e01c80639694ce75116100595780639694ce7514610173578063ac4b3b0a1461018a578063bc127127146101b5578063cc24c800146101e0578063f2fde38b146102095761009b565b8062f29d5f146100a057806348eca45c146100c9578063715018a6146101065780638da5cb5b1461011d5780638f32d59b146101485761009b565b3661009b57005b600080fd5b3480156100ac57600080fd5b506100c760048036038101906100c29190610924565b610232565b005b3480156100d557600080fd5b506100f060048036038101906100eb9190610924565b6103c4565b6040516100fd9190610abd565b60405180910390f35b34801561011257600080fd5b5061011b610456565b005b34801561012957600080fd5b5061013261055b565b60405161013f9190610a1e565b60405180910390f35b34801561015457600080fd5b5061015d610584565b60405161016a9190610a62565b60405180910390f35b34801561017f57600080fd5b506101886105e2565b005b34801561019657600080fd5b5061019f6106a4565b6040516101ac9190610a1e565b60405180910390f35b3480156101c157600080fd5b506101ca6106ca565b6040516101d79190610abd565b60405180910390f35b3480156101ec57600080fd5b5061020760048036038101906102029190610924565b6106d2565b005b34801561021557600080fd5b50610230600480360381019061022b9190610924565b61075d565b005b61023a610584565b610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027090610a9d565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102b49190610a1e565b60206040518083038186803b1580156102cc57600080fd5b505afa1580156102e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610304919061097e565b905060008111156103c0578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161036c929190610a39565b602060405180830381600087803b15801561038657600080fd5b505af115801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be9190610951565b505b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ff9190610a1e565b60206040518083038186803b15801561041757600080fd5b505afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f919061097e565b9050919050565b61045e610584565b61049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049490610a9d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105c66107b0565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6105ea610584565b610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062090610a9d565b60405180910390fd5b600047905060008111156106a157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561069f573d6000803e3d6000fd5b505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b6106da610584565b610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071090610a9d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610765610584565b6107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90610a9d565b60405180910390fd5b6107ad816107b8565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f90610a7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506108f481610bae565b92915050565b60008151905061090981610bc5565b92915050565b60008151905061091e81610bdc565b92915050565b60006020828403121561093a57610939610b31565b5b6000610948848285016108e5565b91505092915050565b60006020828403121561096757610966610b31565b5b6000610975848285016108fa565b91505092915050565b60006020828403121561099457610993610b31565b5b60006109a28482850161090f565b91505092915050565b6109b481610ae9565b82525050565b6109c381610afb565b82525050565b60006109d6602683610ad8565b91506109e182610b36565b604082019050919050565b60006109f9602083610ad8565b9150610a0482610b85565b602082019050919050565b610a1881610b27565b82525050565b6000602082019050610a3360008301846109ab565b92915050565b6000604082019050610a4e60008301856109ab565b610a5b6020830184610a0f565b9392505050565b6000602082019050610a7760008301846109ba565b92915050565b60006020820190508181036000830152610a96816109c9565b9050919050565b60006020820190508181036000830152610ab6816109ec565b9050919050565b6000602082019050610ad26000830184610a0f565b92915050565b600082825260208201905092915050565b6000610af482610b07565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610bb781610ae9565b8114610bc257600080fd5b50565b610bce81610afb565b8114610bd957600080fd5b50565b610be581610b27565b8114610bf057600080fd5b5056fea26469706673582212208386d20e8cad2585999ec0094daaebe833b7a1ffea72718eb923405844bcfc9b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9694CE75 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9694CE75 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAC4B3B0A EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xBC127127 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xCC24C800 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x209 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xF29D5F EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x48ECA45C EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x148 JUMPI PUSH2 0x9B JUMP JUMPDEST CALLDATASIZE PUSH2 0x9B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x456 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH2 0x584 JUMP JUMPDEST PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3C0 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C SWAP3 SWAP2 SWAP1 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45E PUSH2 0x584 JUMP JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5C6 PUSH2 0x7B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x584 JUMP JUMPDEST PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6DA PUSH2 0x584 JUMP JUMPDEST PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x765 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AD DUP2 PUSH2 0x7B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81F SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8F4 DUP2 PUSH2 0xBAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x909 DUP2 PUSH2 0xBC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x91E DUP2 PUSH2 0xBDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93A JUMPI PUSH2 0x939 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP5 DUP3 DUP6 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x975 DUP5 DUP3 DUP6 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x994 JUMPI PUSH2 0x993 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A2 DUP5 DUP3 DUP6 ADD PUSH2 0x90F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B4 DUP2 PUSH2 0xAE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0xAFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D6 PUSH1 0x26 DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E1 DUP3 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F9 PUSH1 0x20 DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA04 DUP3 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 DUP2 PUSH2 0xB27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0xA5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA0F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA96 DUP2 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAB6 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 DUP3 PUSH2 0xB07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xBB7 DUP2 PUSH2 0xAE9 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBCE DUP2 PUSH2 0xAFB JUMP JUMPDEST DUP2 EQ PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBE5 DUP2 PUSH2 0xB27 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP7 0xD2 0xE DUP13 0xAD 0x25 DUP6 SWAP10 SWAP15 0xC0 MULMOD 0x4D 0xAA 0xEB 0xE8 CALLER 0xB7 LOG1 SELFDESTRUCT 0xEA PUSH19 0x718EB923405844BCFC9B64736F6C6343000807 STOP CALLER ",
							"sourceMap": "194:1223:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:248;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;679:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1630:127:2;;;;;;;;;;;;;:::i;:::-;;899:71;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1218:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1191:189:4;;;;;;;;;;;;;:::i;:::-;;233:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1078:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;547:84;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1896:101:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;824:248:4;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;901:18:4::1;929:12;922:30;;;961:4;922:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;901:66;;991:1;980:10;:12;977:89;;;1014:12;1007:29;;;1037:5;;;;;;;;;;;1044:10;1007:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;977:89;891:181;824:248:::0;:::o;679:140::-;748:7;781:5;774:23;;;806:4;774:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;767:45;;679:140;;;:::o;1630:127:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:1:::1;1687:40;;1708:6;::::0;::::1;;;;;;;;1687:40;;;;;;;;;;;;1750:1;1733:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1630:127::o:0;899:71::-;937:7;959:6;;;;;;;;;;;952:13;;899:71;:::o;1218:86::-;1258:4;1293:6;;;;;;;;;;;1277:22;;:12;:10;:12::i;:::-;:22;;;1270:29;;1218:86;:::o;1191:189:4:-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1246:18:4::1;1267:21;1246:42;;1312:1;1301:10;:12;1298:76;;;1336:5;;;;;;;;;;;1328:23;;:35;1352:10;1328:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1298:76;1236:144;1191:189::o:0;233:20::-;;;;;;;;;;;;;:::o;1078:108::-;1132:7;1158:21;1151:28;;1078:108;:::o;547:84::-;1085:9:2;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;618:6:4::1;610:5;;:14;;;;;;;;;;;;;;;;;;547:84:::0;:::o;1896:101:2:-;1085:9;:7;:9::i;:::-;1077:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1964:28:::1;1983:8;1964:18;:28::i;:::-;1896:101:::0;:::o;760:99:1:-;805:15;843:10;828:26;;760:99;:::o;2090:211:2:-;2179:1;2159:22;;:8;:22;;;;2151:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:8;2235:38;;2256:6;;;;;;;;;;2235:38;;;;;;;;;;;;2288:8;2279:6;;:17;;;;;;;;;;;;;;;;;;2090:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:143::-;352:5;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;295:143;;;;:::o;444:329::-;503:6;552:2;540:9;531:7;527:23;523:32;520:119;;;558:79;;:::i;:::-;520:119;678:1;703:53;748:7;739:6;728:9;724:22;703:53;:::i;:::-;693:63;;649:117;444:329;;;;:::o;779:345::-;846:6;895:2;883:9;874:7;870:23;866:32;863:119;;;901:79;;:::i;:::-;863:119;1021:1;1046:61;1099:7;1090:6;1079:9;1075:22;1046:61;:::i;:::-;1036:71;;992:125;779:345;;;;:::o;1130:351::-;1200:6;1249:2;1237:9;1228:7;1224:23;1220:32;1217:119;;;1255:79;;:::i;:::-;1217:119;1375:1;1400:64;1456:7;1447:6;1436:9;1432:22;1400:64;:::i;:::-;1390:74;;1346:128;1130:351;;;;:::o;1487:118::-;1574:24;1592:5;1574:24;:::i;:::-;1569:3;1562:37;1487:118;;:::o;1611:109::-;1692:21;1707:5;1692:21;:::i;:::-;1687:3;1680:34;1611:109;;:::o;1726:366::-;1868:3;1889:67;1953:2;1948:3;1889:67;:::i;:::-;1882:74;;1965:93;2054:3;1965:93;:::i;:::-;2083:2;2078:3;2074:12;2067:19;;1726:366;;;:::o;2098:::-;2240:3;2261:67;2325:2;2320:3;2261:67;:::i;:::-;2254:74;;2337:93;2426:3;2337:93;:::i;:::-;2455:2;2450:3;2446:12;2439:19;;2098:366;;;:::o;2470:118::-;2557:24;2575:5;2557:24;:::i;:::-;2552:3;2545:37;2470:118;;:::o;2594:222::-;2687:4;2725:2;2714:9;2710:18;2702:26;;2738:71;2806:1;2795:9;2791:17;2782:6;2738:71;:::i;:::-;2594:222;;;;:::o;2822:332::-;2943:4;2981:2;2970:9;2966:18;2958:26;;2994:71;3062:1;3051:9;3047:17;3038:6;2994:71;:::i;:::-;3075:72;3143:2;3132:9;3128:18;3119:6;3075:72;:::i;:::-;2822:332;;;;;:::o;3160:210::-;3247:4;3285:2;3274:9;3270:18;3262:26;;3298:65;3360:1;3349:9;3345:17;3336:6;3298:65;:::i;:::-;3160:210;;;;:::o;3376:419::-;3542:4;3580:2;3569:9;3565:18;3557:26;;3629:9;3623:4;3619:20;3615:1;3604:9;3600:17;3593:47;3657:131;3783:4;3657:131;:::i;:::-;3649:139;;3376:419;;;:::o;3801:::-;3967:4;4005:2;3994:9;3990:18;3982:26;;4054:9;4048:4;4044:20;4040:1;4029:9;4025:17;4018:47;4082:131;4208:4;4082:131;:::i;:::-;4074:139;;3801:419;;;:::o;4226:222::-;4319:4;4357:2;4346:9;4342:18;4334:26;;4370:71;4438:1;4427:9;4423:17;4414:6;4370:71;:::i;:::-;4226:222;;;;:::o;4535:169::-;4619:11;4653:6;4648:3;4641:19;4693:4;4688:3;4684:14;4669:29;;4535:169;;;;:::o;4710:96::-;4747:7;4776:24;4794:5;4776:24;:::i;:::-;4765:35;;4710:96;;;:::o;4812:90::-;4846:7;4889:5;4882:13;4875:21;4864:32;;4812:90;;;:::o;4908:126::-;4945:7;4985:42;4978:5;4974:54;4963:65;;4908:126;;;:::o;5040:77::-;5077:7;5106:5;5095:16;;5040:77;;;:::o;5246:117::-;5355:1;5352;5345:12;5369:225;5509:34;5505:1;5497:6;5493:14;5486:58;5578:8;5573:2;5565:6;5561:15;5554:33;5369:225;:::o;5600:182::-;5740:34;5736:1;5728:6;5724:14;5717:58;5600:182;:::o;5788:122::-;5861:24;5879:5;5861:24;:::i;:::-;5854:5;5851:35;5841:63;;5900:1;5897;5890:12;5841:63;5788:122;:::o;5916:116::-;5986:21;6001:5;5986:21;:::i;:::-;5979:5;5976:32;5966:60;;6022:1;6019;6012:12;5966:60;5916:116;:::o;6038:122::-;6111:24;6129:5;6111:24;:::i;:::-;6104:5;6101:35;6091:63;;6150:1;6147;6140:12;6091:63;6038:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "622600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Pool2()": "2536",
								"getBalanceBNB()": "383",
								"getBalanceToken(address)": "infinite",
								"isOwner()": "2620",
								"owner()": "2589",
								"renounceOwnership()": "30374",
								"sentT2Pool2BNB()": "infinite",
								"sentT2Pool2Token(address)": "infinite",
								"setPool2(address)": "27028",
								"transferOwnership(address)": "30795"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 1417,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 716,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 748,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 748,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 772,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 754,
									"end": 772,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 816,
									"end": 825,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 812,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 826,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 783,
									"end": 826,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 710,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 410,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "FA0E47A2D6A58B9FD7CA1D4BFAADD11E8811824B"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 452,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 402,
									"end": 452,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 760,
									"end": 859,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 805,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 853,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 828,
									"end": 854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 760,
									"end": 859,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 1417,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208386d20e8cad2585999ec0094daaebe833b7a1ffea72718eb923405844bcfc9b64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "9694CE75"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "9694CE75"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "AC4B3B0A"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "BC127127"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "CC24C800"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "F29D5F"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "48ECA45C"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "8F32D59B"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 1417,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 901,
											"end": 919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 952,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 952,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 922,
											"end": 952,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 961,
											"end": 965,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 922,
											"end": 967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 901,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 980,
											"end": 992,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1066,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 977,
											"end": 1066,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1026,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1036,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1036,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1054,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1066,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 977,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 891,
											"end": 1072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 1072,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 774,
											"end": 797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 774,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 806,
											"end": 810,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 774,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 767,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 767,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 679,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1727,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1288,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1313,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1374,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1298,
											"end": 1374,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1351,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 1352,
											"end": 1362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1374,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1298,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1380,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1179,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 610,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 610,
											"end": 615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 610,
											"end": 624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 547,
											"end": 631,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1077,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1983,
											"end": 1991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1964,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 853,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2151,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2301,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 352,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 368,
											"end": 390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 368,
											"end": 390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 773,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 444,
											"end": 773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 554,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 531,
											"end": 538,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 523,
											"end": 555,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 520,
											"end": 639,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 520,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 520,
											"end": 639,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 558,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 520,
											"end": 639,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 520,
											"end": 639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 739,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 728,
											"end": 737,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 724,
											"end": 746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 693,
											"end": 756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 649,
											"end": 766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 773,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 444,
											"end": 773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 773,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 874,
											"end": 881,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 870,
											"end": 893,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 866,
											"end": 898,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 863,
											"end": 982,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 863,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 863,
											"end": 982,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 901,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 863,
											"end": 982,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 863,
											"end": 982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1611,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1707,
											"end": 1712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1692,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1720,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1726,
											"end": 2092,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1726,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1953,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1889,
											"end": 1956,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 1956,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1889,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2054,
											"end": 2057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1965,
											"end": 2058,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2058,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1965,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2086,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2092,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 2092,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2098,
											"end": 2464,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2098,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2261,
											"end": 2328,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2328,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2261,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2426,
											"end": 2429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2337,
											"end": 2430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2337,
											"end": 2430,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2337,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2464,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2575,
											"end": 2580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2594,
											"end": 2816,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2594,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2738,
											"end": 2809,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2809,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2738,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2816,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2816,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 2984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3060,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3143,
											"end": 3145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3141,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3125,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3075,
											"end": 3147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3147,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3075,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 3154,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3160,
											"end": 3370,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3160,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3360,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3298,
											"end": 3363,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3298,
											"end": 3363,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3298,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3370,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3370,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3638,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3639,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3657,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3795,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3801,
											"end": 4220,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3801,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3994,
											"end": 4003,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 4008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 4008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4064,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4082,
											"end": 4213,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4082,
											"end": 4213,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4082,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 4220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 4220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 4220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 4220,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4226,
											"end": 4448,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4226,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4438,
											"end": 4439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4420,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4370,
											"end": 4441,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4370,
											"end": 4441,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4370,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4448,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4535,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4535,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4659,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4684,
											"end": 4698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 4698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4704,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4710,
											"end": 4806,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4710,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4747,
											"end": 4754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4794,
											"end": 4799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4776,
											"end": 4800,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4776,
											"end": 4800,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4776,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 4806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 4806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 4806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 4806,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4812,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4812,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4895,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4896,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4902,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4908,
											"end": 5034,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4908,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4945,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4978,
											"end": 4983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5028,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 5028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 5028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 5034,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 5034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 5034,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5077,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5246,
											"end": 5363,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5246,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5355,
											"end": 5356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5357,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5594,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5369,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5543,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5505,
											"end": 5506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5486,
											"end": 5544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5578,
											"end": 5586,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5573,
											"end": 5575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5571,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5594,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5600,
											"end": 5782,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5600,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5740,
											"end": 5774,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5736,
											"end": 5737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5724,
											"end": 5738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5717,
											"end": 5775,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5782,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5788,
											"end": 5910,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5788,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5879,
											"end": 5884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5861,
											"end": 5885,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5861,
											"end": 5885,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5861,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 5859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5851,
											"end": 5886,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5841,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5841,
											"end": 5904,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5902,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5841,
											"end": 5904,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5841,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5910,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5916,
											"end": 6032,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5916,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5976,
											"end": 6008,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5966,
											"end": 6026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6024,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6026,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5966,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 6032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 6032,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6038,
											"end": 6160,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 6038,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6129,
											"end": 6134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6104,
											"end": 6109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6136,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6091,
											"end": 6154,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6150,
											"end": 6151,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6152,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6154,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6091,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6160,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Pool2()": "ac4b3b0a",
							"getBalanceBNB()": "bc127127",
							"getBalanceToken(address)": "48eca45c",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sentT2Pool2BNB()": "9694ce75",
							"sentT2Pool2Token(address)": "00f29d5f",
							"setPool2(address)": "cc24c800",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Pool2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalanceToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sentT2Pool2BNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenaddress\",\"type\":\"address\"}],\"name\":\"sentT2Pool2Token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Pool2\",\"type\":\"address\"}],\"name\":\"setPool2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\"},\"getBalanceToken(address)\":{\"details\":\"get balance.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPool2(address)\":{\"details\":\"The contract should be able to receive Eth.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Treasury.sol\":\"Treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]},\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"BEPOwnable.sol\":{\"keccak256\":\"0xa7258a80897e1dd0c91411d286e6983176acef5d344a8c87ca1a27bdb91458fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9930713acf1790e65028f93f132bb112d11ac6e8ffb5e4432c479cf11113e85\",\"dweb:/ipfs/QmdERPVBMH3Bkc5ZJ1eiA5dT9UhjdfhBpJcQyjYGq9WUmS\"]},\"IBEP20.sol\":{\"keccak256\":\"0x21f5ccea5d6cee39743d825e6b114bcb6965b5b2fd0887459961fe96f03f7ae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2697da00e86323e6813c7e20fb199bd1b7b5a970e47f468482cd7b9b5382adf\",\"dweb:/ipfs/QmULa5tw5jwNa4Wu4Lfhr8vFXNJhBdfvbjJEhwe7CwZdCy\"]},\"Treasury.sol\":{\"keccak256\":\"0xf404c840785531dc47e313b9f20ee3e19a752e47adcb6d6271d1aa17b6fe87c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62a5cdbe7c81b43a08eb163bd848ecf9e58c5b8069f11d064e102ffd75ccb528\",\"dweb:/ipfs/QmRFg3arMFUvkiSBnyGzDtiDLNSKKXHUzYgWPRHyhrkcVM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "Treasury.sol:Treasury",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 540,
								"contract": "Treasury.sol:Treasury",
								"label": "Pool2",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1226:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1450:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1450:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1443:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1169:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1220:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:6:0"
									},
									"scope": 294,
									"src": "1160:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2468:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2494:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2486:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2486:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2486:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2511:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2478:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2568:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2563:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2581:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2581:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2581:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2624:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1486:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2406:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2432:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2416:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:0"
									},
									"scope": 294,
									"src": "2397:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3540:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3550:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2715:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3460:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3489:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:14:0"
									},
									"scope": 294,
									"src": "3451:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3993:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4049:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4010:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4003:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3630:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3855:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3885:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3877:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3901:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3942:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3928:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3979:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:14:0"
									},
									"scope": 294,
									"src": "3846:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4574:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4591:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4584:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4075:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4440:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4560:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:14:0"
									},
									"scope": 294,
									"src": "4431:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5112:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5138:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5130:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5130:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5130:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5155:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5130:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5122:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5232:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5221:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5213:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5290:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5285:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5312:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5299:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5326:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5326:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5345:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5326:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5400:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5412:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5374:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5367:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4691:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4981:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4997:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5047:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5098:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5097:14:0"
									},
									"scope": 294,
									"src": "4933:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5709:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5745:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5726:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5719:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5438:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5618:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5666:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5653:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5695:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:14:0"
									},
									"scope": 294,
									"src": "5609:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6148:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6186:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6158:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6242:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6237:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6264:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6251:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6251:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6278:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6236:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6318:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6318:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6311:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5812:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5999:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6027:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6064:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6051:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6051:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6092:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6078:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6017:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6134:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:14:0"
									},
									"scope": 294,
									"src": "5990:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6652:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6704:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6669:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6662:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6382:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6564:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6601:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6638:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6637:14:0"
									},
									"scope": 294,
									"src": "6555:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7094:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7112:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7132:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7104:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7190:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7185:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7212:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7199:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7226:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7268:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7261:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6759:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7002:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7002:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7029:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7080:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:14:0"
									},
									"scope": 294,
									"src": "6939:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7706:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7777:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7861:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7861:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7861:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8169:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8194:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8187:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8187:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8187:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7857:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7884:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8004:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8026:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8055:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8049:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8049:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8030:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8098:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8102:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8094:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8094:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8115:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8087:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8087:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8087:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8055:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8102:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "7995:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7716:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7729:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7750:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7743:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7332:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7555:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7616:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7603:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7650:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7636:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7691:14:0"
									},
									"scope": 294,
									"src": "7546:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "179:8061:0",
							"usedErrors": []
						}
					],
					"src": "86:8154:0"
				},
				"id": 0
			},
			"BEPContext.sol": {
				"ast": {
					"absolutePath": "BEPContext.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "BEPContext",
							"nameLocation": "575:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "754:2:1",
										"statements": []
									},
									"id": 300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:2:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 324,
									"src": "740:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "822:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "843:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 304,
												"id": 310,
												"nodeType": "Return",
												"src": "828:26:1"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "769:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:17:1"
									},
									"scope": 324,
									"src": "760:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "920:36:1",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_BEPContext_$324",
														"typeString": "contract BEPContext"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "926:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 319,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "943:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "943:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 316,
												"id": 321,
												"nodeType": "Return",
												"src": "936:15:1"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "872:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "906:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:14:1"
									},
									"scope": 324,
									"src": "863:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 325,
							"src": "557:401:1",
							"usedErrors": []
						}
					],
					"src": "32:926:1"
				},
				"id": 1
			},
			"BEPOwnable.sol": {
				"ast": {
					"absolutePath": "BEPOwnable.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "BEPContext.sol",
							"file": "./BEPContext.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 325,
							"src": "56:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 329,
										"name": "BEPContext",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "476:10:2"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "476:10:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "83:360:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								324
							],
							"name": "BEPOwnable",
							"nameLocation": "462:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "507:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "491:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 338,
									"name": "OwnershipTransferred",
									"nameLocation": "524:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "561:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "545:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "592:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "576:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:57:2"
									},
									"src": "518:84:2"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "710:121:2",
										"statements": [
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "724:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "716:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "716:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "736:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "716:32:2"
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 347,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "754:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 348,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "763:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "754:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "754:18:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "812:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "804:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "804:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "816:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 351,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "783:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "EmitStatement",
												"src": "778:48:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "606:87:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 360,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:2"
									},
									"scope": 454,
									"src": "696:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "946:24:2",
										"statements": [
											{
												"expression": {
													"id": 366,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "959:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "952:13:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "835:61:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "908:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "937:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:2"
									},
									"scope": 454,
									"src": "899:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1071:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 373,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1085:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1085:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1096:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1077:54:2"
											},
											{
												"id": 378,
												"nodeType": "PlaceholderStatement",
												"src": "1137:1:2"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "974:73:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 380,
									"name": "onlyOwner",
									"nameLocation": "1059:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:2:2"
									},
									"src": "1050:93:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1264:40:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 386,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1277:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1277:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1293:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1277:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 390,
												"nodeType": "Return",
												"src": "1270:29:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1147:68:2",
										"text": " @dev Returns true if the caller is the current owner."
									},
									"functionSelector": "8f32d59b",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "1227:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:2"
									},
									"scope": 454,
									"src": "1218:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1676:81:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1708:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1687:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1687:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "EmitStatement",
												"src": "1682:45:2"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1733:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1750:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1742:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 407,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1742:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1733:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1733:19:2"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1308:319:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1666:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1666:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1639:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:0:2"
									},
									"scope": 454,
									"src": "1630:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1958:39:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1983:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "1964:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1964:28:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1761:132:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 419,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1948:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1905:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1931:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1923:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:18:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:0:2"
									},
									"scope": 454,
									"src": "1896:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2145:156:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2159:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2179:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2171:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 435,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2171:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2171:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2159:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2151:73:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "2256:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "2264:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2235:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2230:43:2"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2279:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2288:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2279:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2279:17:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2001:86:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2099:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2126:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2118:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:18:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2145:0:2"
									},
									"scope": 454,
									"src": "2090:211:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "444:1859:2",
							"usedErrors": []
						}
					],
					"src": "32:2271:2"
				},
				"id": 2
			},
			"IBEP20.sol": {
				"ast": {
					"absolutePath": "IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							531
						]
					},
					"id": 532,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "IBEP20",
							"nameLocation": "67:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "78:62:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "152:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "189:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:3"
									},
									"scope": 531,
									"src": "143:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "202:68:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "282:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "300:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "292:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:17:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "332:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:3"
									},
									"scope": 531,
									"src": "273:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "345:197:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "554:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "571:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "563:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "590:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "582:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:35:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "616:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:6:3"
									},
									"scope": 531,
									"src": "545:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "626:252:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "890:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "900:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:32:3"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "955:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:3"
									},
									"scope": 531,
									"src": "881:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "968:514:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1494:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1510:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1502:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1527:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1519:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:33:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1553:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1553:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:6:3"
									},
									"scope": 531,
									"src": "1485:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1563:280:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1855:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1881:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1873:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1901:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1893:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1924:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1916:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:67:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1953:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:3"
									},
									"scope": 531,
									"src": "1846:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1963:148:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 521,
									"name": "Transfer",
									"nameLocation": "2120:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2145:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2129:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2167:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2151:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:57:3"
									},
									"src": "2114:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2190:142:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 530,
									"name": "Approval",
									"nameLocation": "2341:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2350:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2389:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2373:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2406:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2398:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:63:3"
									},
									"src": "2335:78:3"
								}
							],
							"scope": 532,
							"src": "57:2358:3",
							"usedErrors": []
						}
					],
					"src": "32:2383:3"
				},
				"id": 3
			},
			"Treasury.sol": {
				"ast": {
					"absolutePath": "Treasury.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"BEPContext": [
							324
						],
						"BEPOwnable": [
							454
						],
						"IBEP20": [
							531
						],
						"Treasury": [
							658
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:4"
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 295,
							"src": "119:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEPOwnable.sol",
							"file": "./BEPOwnable.sol",
							"id": 535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 455,
							"src": "143:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 532,
							"src": "170:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 537,
										"name": "BEPOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "215:10:4"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "215:10:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658,
								454,
								324
							],
							"name": "Treasury",
							"nameLocation": "203:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ac4b3b0a",
									"id": 540,
									"mutability": "mutable",
									"name": "Pool2",
									"nameLocation": "248:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "233:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 539,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "391:68:4",
										"statements": [
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "Pool2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "402:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307866413045343741326436613538623966643743613164346246414144643131453838313138323442",
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "410:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xfA0E47A2d6a58b9fd7Ca1d4bFAADd11E8811824B"
													},
													"src": "402:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "402:50:4"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "260:104:4",
										"text": " @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
									},
									"id": 549,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:2:4"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:0:4"
									},
									"scope": 658,
									"src": "369:90:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "600:31:4",
										"statements": [
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 557,
														"name": "Pool2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 558,
														"name": "_Pool2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "618:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "610:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "610:14:4"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "469:67:4",
										"text": " @dev The contract should be able to receive Eth."
									},
									"functionSelector": "cc24c800",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 554,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "590:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "590:9:4"
										}
									],
									"name": "setPool2",
									"nameLocation": "556:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_Pool2",
												"nameLocation": "573:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "565:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:16:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "600:0:4"
									},
									"scope": 658,
									"src": "547:84:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "757:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 576,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "806:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Treasury_$658",
																		"typeString": "contract Treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Treasury_$658",
																		"typeString": "contract Treasury"
																	}
																],
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "798:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 574,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "798:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 571,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 570,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "774:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "774:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$531",
																"typeString": "contract IBEP20"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "774:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "774:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 569,
												"id": 579,
												"nodeType": "Return",
												"src": "767:45:4"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "638:36:4",
										"text": " @dev get balance."
									},
									"functionSelector": "48eca45c",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceToken",
									"nameLocation": "688:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "712:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "704:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:15:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "748:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:9:4"
									},
									"scope": 658,
									"src": "679:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "891:181:4",
										"statements": [
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "909:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "901:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "901:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 596,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "961:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Treasury_$658",
																		"typeString": "contract Treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Treasury_$658",
																		"typeString": "contract Treasury"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "953:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "953:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "953:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 591,
																	"name": "tokenaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "929:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 590,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "922:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "922:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$531",
																"typeString": "contract IBEP20"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "922:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "922:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "901:66:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "980:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "980:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 612,
												"nodeType": "IfStatement",
												"src": "977:89:4",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "993:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 607,
																		"name": "Pool2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "1037:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 608,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "1044:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 604,
																				"name": "tokenaddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "1014:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 603,
																			"name": "IBEP20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "1007:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBEP20_$531_$",
																				"typeString": "type(contract IBEP20)"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1007:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$531",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 480,
																	"src": "1007:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1007:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 610,
															"nodeType": "ExpressionStatement",
															"src": "1007:48:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "00f29d5f",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 585,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "881:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "881:9:4"
										}
									],
									"name": "sentT2Pool2Token",
									"nameLocation": "833:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "tokenaddress",
												"nameLocation": "858:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "850:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:22:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:0:4"
									},
									"scope": 658,
									"src": "824:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "1141:45:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 621,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1166:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Treasury_$658",
																	"typeString": "contract Treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Treasury_$658",
																	"typeString": "contract Treasury"
																}
															],
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1158:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 619,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1158:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1158:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1158:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 618,
												"id": 624,
												"nodeType": "Return",
												"src": "1151:28:4"
											}
										]
									},
									"functionSelector": "bc127127",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceBNB",
									"nameLocation": "1087:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:4"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1132:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:9:4"
									},
									"scope": 658,
									"src": "1078:108:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "1236:144:4",
										"statements": [
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "1254:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "1246:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1246:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 635,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1275:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Treasury_$658",
																	"typeString": "contract Treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Treasury_$658",
																	"typeString": "contract Treasury"
																}
															],
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1267:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 633,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1267:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1267:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1267:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1246:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 639,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "1301:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1312:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1301:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "1298:76:4",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "1314:60:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "1352:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 644,
																				"name": "Pool2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 540,
																				"src": "1336:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1328:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 642,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1328:8:4",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1328:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1328:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1328:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 649,
															"nodeType": "ExpressionStatement",
															"src": "1328:35:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9694ce75",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 629,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 628,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "1226:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1226:9:4"
										}
									],
									"name": "sentT2Pool2BNB",
									"nameLocation": "1200:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1214:2:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:0:4"
									},
									"scope": 658,
									"src": "1191:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "1413:2:4",
										"statements": []
									},
									"id": 657,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:0:4"
									},
									"scope": 658,
									"src": "1386:29:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 659,
							"src": "194:1223:4",
							"usedErrors": []
						}
					],
					"src": "93:1324:4"
				},
				"id": 4
			}
		}
	}
}