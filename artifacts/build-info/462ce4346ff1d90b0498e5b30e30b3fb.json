{
	"id": "462ce4346ff1d90b0498e5b30e30b3fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Lock-All-VIM-And-Vesting.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (finance/VestingWallet.sol)\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\nimport \"./Address.sol\";\nimport \"./BEPContext.sol\";\nimport \"./Math.sol\";\n\n/**\n * @title VestingWallet\n * @dev This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens\n * can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\n * The vesting schedule is customizable through the {vestedAmount} function.\n *\n * Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n * be immediately releasable.\n */\ncontract VestingWallet is BEPContext {\n    event EtherReleased(uint256 amount);\n    event ERC20Released(address indexed token, uint256 amount);\n\n    uint256 private _released;\n    mapping(address => uint256) private _erc20Released;\n    address private immutable _beneficiary;\n    uint64 private immutable _start;\n    uint64 private immutable _duration;\n\n    /**\n     * @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\n     */\n    constructor(\n        address beneficiaryAddress,\n        uint64 startTimestamp,\n        uint64 durationSeconds\n    ) {\n        require(beneficiaryAddress != address(0), \"VestingWallet: beneficiary is zero address\");\n        _beneficiary = beneficiaryAddress;\n        _start = startTimestamp;\n        _duration = durationSeconds;\n    }\n\n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    receive() external payable virtual {}\n\n    /**\n     * @dev Getter for the beneficiary address.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @dev Getter for the start timestamp.\n     */\n    function start() public view virtual returns (uint256) {\n        return _start;\n    }\n\n    /**\n     * @dev Getter for the vesting duration.\n     */\n    function duration() public view virtual returns (uint256) {\n        return _duration;\n    }\n\n    /**\n     * @dev Amount of eth already released\n     */\n    function released() internal view virtual returns (uint256) {\n        return _released;\n    }\n\n    /**\n     * @dev Amount of token already released\n     */\n    function released(address token) public view virtual returns (uint256) {\n        return _erc20Released[token];\n    }\n\n    /**\n     * @dev Release the native token (ether) that have already vested.\n     *\n     * Emits a {TokensReleased} event.\n     */\n    function release() internal virtual {\n        uint256 releasable = vestedAmount(uint64(block.timestamp)) - released();\n        _released += releasable;\n        emit EtherReleased(releasable);\n        Address.sendValue(payable(beneficiary()), releasable);\n    }\n\n    /**\n     * @dev Release the tokens that have already vested.\n     *\n     * Emits a {TokensReleased} event.\n     */\n    function release(address token) public virtual {\n        uint256 releasable = vestedAmount(token, uint64(block.timestamp)) - released(token);\n        _erc20Released[token] += releasable;\n        emit ERC20Released(token, releasable);\n        SafeERC20.safeTransfer(IERC20(token), beneficiary(), releasable);\n    }\n\n    /**\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(uint64 timestamp) internal view virtual returns (uint256) {\n        return _vestingSchedule(address(this).balance + released(), timestamp);\n    }\n\n    /**\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amout vested, as a function of time, for\n     * an asset given its total historical allocation.\n     */\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\n        if (timestamp < start()) {\n            return 0;\n        } else if (timestamp > start() + duration()) {\n            return totalAllocation;\n        } else {\n            return (totalAllocation * (timestamp - start())) / duration();\n        }\n    }\n\n    /**\n     * @dev get balance.\n     */\n    function getBalance(address token) public view virtual returns (uint256) {\n        return IERC20(token).balanceOf(address(this));\n    }\n}"
			},
			"Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}"
			},
			"BEPContext.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract BEPContext {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor() {}\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this;\n    return msg.data;\n  }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:8240  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:8240  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH32 0xB00A11F83CB6DB441E18B659D395FD72FFFB687130893F1D6FE90B5E87206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "179:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a7fb00a11f83cb6db441e18b659d395fd72fffb687130893f1d6fe90b5e872064736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEPContext.sol": {
				"BEPContext": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEPContext.sol\":\"BEPContext\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x6ba702bf7bb3ff99b585fd812e6234a6896dc9151500eb9bb58716c14bcb69f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6b8cfe345248cdd9956c5085dfb7209387a129e6aa207a09056d9614d87ee49\",\"dweb:/ipfs/QmXPA8HVT2T449p3bmZYaPqEJgxHNNFXrz3zqFBfn9D7re\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Lock-All-VIM-And-Vesting.sol": {
				"VestingWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiaryAddress",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "startTimestamp",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "durationSeconds",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherReleased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens can be given to this contract, which will release the token to the beneficiary following a given vesting schedule. The vesting schedule is customizable through the {vestedAmount} function. Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable.",
						"kind": "dev",
						"methods": {
							"beneficiary()": {
								"details": "Getter for the beneficiary address."
							},
							"constructor": {
								"details": "Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
							},
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"getBalance(address)": {
								"details": "get balance."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {TokensReleased} event."
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"title": "VestingWallet",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Lock-All-VIM-And-Vesting.sol\":832:4796  contract VestingWallet is BEPContext {... */\n  mstore(0x40, 0xe0)\n    /* \"Lock-All-VIM-And-Vesting.sol\":1299:1633  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Lock-All-VIM-And-Vesting.sol\":1464:1465  0 */\n  0x00\n    /* \"Lock-All-VIM-And-Vesting.sol\":1434:1466  beneficiaryAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Lock-All-VIM-And-Vesting.sol\":1434:1452  beneficiaryAddress */\n  dup4\n    /* \"Lock-All-VIM-And-Vesting.sol\":1434:1466  beneficiaryAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Lock-All-VIM-And-Vesting.sol\":1426:1513  require(beneficiaryAddress != address(0), \"VestingWallet: beneficiary is zero address\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"Lock-All-VIM-And-Vesting.sol\":1538:1556  beneficiaryAddress */\n  dup3\n    /* \"Lock-All-VIM-And-Vesting.sol\":1523:1556  _beneficiary = beneficiaryAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Lock-All-VIM-And-Vesting.sol\":1575:1589  startTimestamp */\n  dup2\n    /* \"Lock-All-VIM-And-Vesting.sol\":1566:1589  _start = startTimestamp */\n  0xffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffff\n  and\n  0xc0\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Lock-All-VIM-And-Vesting.sol\":1611:1626  durationSeconds */\n  dup1\n    /* \"Lock-All-VIM-And-Vesting.sol\":1599:1626  _duration = durationSeconds */\n  0xffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffff\n  and\n  0xc0\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Lock-All-VIM-And-Vesting.sol\":1299:1633  constructor(... */\n  pop\n  pop\n  pop\n    /* \"Lock-All-VIM-And-Vesting.sol\":832:4796  contract VestingWallet is BEPContext {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:150   */\ntag_13:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_15\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:297   */\ntag_17:\n    /* \"#utility.yul\":212:217   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup2\n    /* \"#utility.yul\":237:250   */\n  mload\n    /* \"#utility.yul\":228:250   */\n  swap1\n  pop\n    /* \"#utility.yul\":259:291   */\n  tag_19\n    /* \"#utility.yul\":285:290   */\n  dup2\n    /* \"#utility.yul\":259:291   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":156:297   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":303:962   */\ntag_3:\n    /* \"#utility.yul\":389:395   */\n  0x00\n    /* \"#utility.yul\":397:403   */\n  dup1\n    /* \"#utility.yul\":405:411   */\n  0x00\n    /* \"#utility.yul\":454:456   */\n  0x60\n    /* \"#utility.yul\":442:451   */\n  dup5\n    /* \"#utility.yul\":433:440   */\n  dup7\n    /* \"#utility.yul\":429:452   */\n  sub\n    /* \"#utility.yul\":425:457   */\n  slt\n    /* \"#utility.yul\":422:541   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":460:539   */\n  tag_23\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":422:541   */\ntag_22:\n    /* \"#utility.yul\":580:581   */\n  0x00\n    /* \"#utility.yul\":605:669   */\n  tag_25\n    /* \"#utility.yul\":661:668   */\n  dup7\n    /* \"#utility.yul\":652:658   */\n  dup3\n    /* \"#utility.yul\":641:650   */\n  dup8\n    /* \"#utility.yul\":637:659   */\n  add\n    /* \"#utility.yul\":605:669   */\n  tag_13\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":595:669   */\n  swap4\n  pop\n    /* \"#utility.yul\":551:679   */\n  pop\n    /* \"#utility.yul\":718:720   */\n  0x20\n    /* \"#utility.yul\":744:807   */\n  tag_26\n    /* \"#utility.yul\":799:806   */\n  dup7\n    /* \"#utility.yul\":790:796   */\n  dup3\n    /* \"#utility.yul\":779:788   */\n  dup8\n    /* \"#utility.yul\":775:797   */\n  add\n    /* \"#utility.yul\":744:807   */\n  tag_17\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":734:807   */\n  swap3\n  pop\n    /* \"#utility.yul\":689:817   */\n  pop\n    /* \"#utility.yul\":856:858   */\n  0x40\n    /* \"#utility.yul\":882:945   */\n  tag_27\n    /* \"#utility.yul\":937:944   */\n  dup7\n    /* \"#utility.yul\":928:934   */\n  dup3\n    /* \"#utility.yul\":917:926   */\n  dup8\n    /* \"#utility.yul\":913:935   */\n  add\n    /* \"#utility.yul\":882:945   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":872:945   */\n  swap2\n  pop\n    /* \"#utility.yul\":827:955   */\n  pop\n    /* \"#utility.yul\":303:962   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":968:1334   */\ntag_28:\n    /* \"#utility.yul\":1110:1113   */\n  0x00\n    /* \"#utility.yul\":1131:1198   */\n  tag_30\n    /* \"#utility.yul\":1195:1197   */\n  0x2a\n    /* \"#utility.yul\":1190:1193   */\n  dup4\n    /* \"#utility.yul\":1131:1198   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1124:1198   */\n  swap2\n  pop\n    /* \"#utility.yul\":1207:1300   */\n  tag_32\n    /* \"#utility.yul\":1296:1299   */\n  dup3\n    /* \"#utility.yul\":1207:1300   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1325:1327   */\n  0x40\n    /* \"#utility.yul\":1320:1323   */\n  dup3\n    /* \"#utility.yul\":1316:1328   */\n  add\n    /* \"#utility.yul\":1309:1328   */\n  swap1\n  pop\n    /* \"#utility.yul\":968:1334   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1340:1759   */\ntag_10:\n    /* \"#utility.yul\":1506:1510   */\n  0x00\n    /* \"#utility.yul\":1544:1546   */\n  0x20\n    /* \"#utility.yul\":1533:1542   */\n  dup3\n    /* \"#utility.yul\":1529:1547   */\n  add\n    /* \"#utility.yul\":1521:1547   */\n  swap1\n  pop\n    /* \"#utility.yul\":1593:1602   */\n  dup2\n    /* \"#utility.yul\":1587:1591   */\n  dup2\n    /* \"#utility.yul\":1583:1603   */\n  sub\n    /* \"#utility.yul\":1579:1580   */\n  0x00\n    /* \"#utility.yul\":1568:1577   */\n  dup4\n    /* \"#utility.yul\":1564:1581   */\n  add\n    /* \"#utility.yul\":1557:1604   */\n  mstore\n    /* \"#utility.yul\":1621:1752   */\n  tag_35\n    /* \"#utility.yul\":1747:1751   */\n  dup2\n    /* \"#utility.yul\":1621:1752   */\n  tag_28\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1613:1752   */\n  swap1\n  pop\n    /* \"#utility.yul\":1340:1759   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1846:2015   */\ntag_31:\n    /* \"#utility.yul\":1930:1941   */\n  0x00\n    /* \"#utility.yul\":1964:1970   */\n  dup3\n    /* \"#utility.yul\":1959:1962   */\n  dup3\n    /* \"#utility.yul\":1952:1971   */\n  mstore\n    /* \"#utility.yul\":2004:2008   */\n  0x20\n    /* \"#utility.yul\":1999:2002   */\n  dup3\n    /* \"#utility.yul\":1995:2009   */\n  add\n    /* \"#utility.yul\":1980:2009   */\n  swap1\n  pop\n    /* \"#utility.yul\":1846:2015   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2021:2117   */\ntag_39:\n    /* \"#utility.yul\":2058:2065   */\n  0x00\n    /* \"#utility.yul\":2087:2111   */\n  tag_41\n    /* \"#utility.yul\":2105:2110   */\n  dup3\n    /* \"#utility.yul\":2087:2111   */\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2076:2111   */\n  swap1\n  pop\n    /* \"#utility.yul\":2021:2117   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2123:2249   */\ntag_42:\n    /* \"#utility.yul\":2160:2167   */\n  0x00\n    /* \"#utility.yul\":2200:2242   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2193:2198   */\n  dup3\n    /* \"#utility.yul\":2189:2243   */\n  and\n    /* \"#utility.yul\":2178:2243   */\n  swap1\n  pop\n    /* \"#utility.yul\":2123:2249   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2255:2356   */\ntag_44:\n    /* \"#utility.yul\":2291:2298   */\n  0x00\n    /* \"#utility.yul\":2331:2349   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2324:2329   */\n  dup3\n    /* \"#utility.yul\":2320:2350   */\n  and\n    /* \"#utility.yul\":2309:2350   */\n  swap1\n  pop\n    /* \"#utility.yul\":2255:2356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2485:2602   */\ntag_24:\n    /* \"#utility.yul\":2594:2595   */\n  0x00\n    /* \"#utility.yul\":2591:2592   */\n  dup1\n    /* \"#utility.yul\":2584:2596   */\n  revert\n    /* \"#utility.yul\":2608:2837   */\ntag_33:\n    /* \"#utility.yul\":2748:2782   */\n  0x56657374696e6757616c6c65743a2062656e6566696369617279206973207a65\n    /* \"#utility.yul\":2744:2745   */\n  0x00\n    /* \"#utility.yul\":2736:2742   */\n  dup3\n    /* \"#utility.yul\":2732:2746   */\n  add\n    /* \"#utility.yul\":2725:2783   */\n  mstore\n    /* \"#utility.yul\":2817:2829   */\n  0x726f206164647265737300000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2812:2814   */\n  0x20\n    /* \"#utility.yul\":2804:2810   */\n  dup3\n    /* \"#utility.yul\":2800:2815   */\n  add\n    /* \"#utility.yul\":2793:2830   */\n  mstore\n    /* \"#utility.yul\":2608:2837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2843:2965   */\ntag_16:\n    /* \"#utility.yul\":2916:2940   */\n  tag_51\n    /* \"#utility.yul\":2934:2939   */\n  dup2\n    /* \"#utility.yul\":2916:2940   */\n  tag_39\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2909:2914   */\n  dup2\n    /* \"#utility.yul\":2906:2941   */\n  eq\n    /* \"#utility.yul\":2896:2959   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2955:2956   */\n  0x00\n    /* \"#utility.yul\":2952:2953   */\n  dup1\n    /* \"#utility.yul\":2945:2957   */\n  revert\n    /* \"#utility.yul\":2896:2959   */\ntag_52:\n    /* \"#utility.yul\":2843:2965   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2971:3091   */\ntag_20:\n    /* \"#utility.yul\":3043:3066   */\n  tag_54\n    /* \"#utility.yul\":3060:3065   */\n  dup2\n    /* \"#utility.yul\":3043:3066   */\n  tag_44\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":3036:3041   */\n  dup2\n    /* \"#utility.yul\":3033:3067   */\n  eq\n    /* \"#utility.yul\":3023:3085   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3081:3082   */\n  0x00\n    /* \"#utility.yul\":3078:3079   */\n  dup1\n    /* \"#utility.yul\":3071:3083   */\n  revert\n    /* \"#utility.yul\":3023:3085   */\ntag_55:\n    /* \"#utility.yul\":2971:3091   */\n  pop\n  jump\t// out\n    /* \"Lock-All-VIM-And-Vesting.sol\":832:4796  contract VestingWallet is BEPContext {... */\ntag_11:\n  shr(0x60, mload(0x80))\n  shr(0xc0, mload(0xa0))\n  shr(0xc0, mload(0xc0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe3df22c4356e5c0e9f35408e2e38091fb1b723609d1444fe8c117fe874adfde5\")\n  0x00\n  assignImmutable(\"0x45b6342a02ae42cf7a36e3769317f7b96c6a4d2644ee9d0c4985d913762cb1d4\")\n  0x00\n  assignImmutable(\"0x4fca09fadb3ed1b98f4f991d2932c7603c5a12b8d41dcf7454034dac420d9d2f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Lock-All-VIM-And-Vesting.sol\":832:4796  contract VestingWallet is BEPContext {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x810ec23b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Lock-All-VIM-And-Vesting.sol\":2133:2224  function duration() public view virtual returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lock-All-VIM-And-Vesting.sol\":3089:3402  function release(address token) public virtual {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Lock-All-VIM-And-Vesting.sol\":1818:1915  function beneficiary() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lock-All-VIM-And-Vesting.sol\":3850:4052  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lock-All-VIM-And-Vesting.sol\":2449:2565  function released(address token) public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lock-All-VIM-And-Vesting.sol\":1981:2066  function start() public view virtual returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lock-All-VIM-And-Vesting.sol\":4659:4794  function getBalance(address token) public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lock-All-VIM-And-Vesting.sol\":2133:2224  function duration() public view virtual returns (uint256) {... */\n    tag_15:\n        /* \"Lock-All-VIM-And-Vesting.sol\":2182:2189  uint256 */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":2208:2217  _duration */\n      immutable(\"0xe3df22c4356e5c0e9f35408e2e38091fb1b723609d1444fe8c117fe874adfde5\")\n        /* \"Lock-All-VIM-And-Vesting.sol\":2201:2217  return _duration */\n      0xffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":2133:2224  function duration() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Lock-All-VIM-And-Vesting.sol\":3089:3402  function release(address token) public virtual {... */\n    tag_22:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3146:3164  uint256 releasable */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":3214:3229  released(token) */\n      tag_50\n        /* \"Lock-All-VIM-And-Vesting.sol\":3223:3228  token */\n      dup3\n        /* \"Lock-All-VIM-And-Vesting.sol\":3214:3222  released */\n      tag_37\n        /* \"Lock-All-VIM-And-Vesting.sol\":3214:3229  released(token) */\n      jump\t// in\n    tag_50:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3167:3211  vestedAmount(token, uint64(block.timestamp)) */\n      tag_51\n        /* \"Lock-All-VIM-And-Vesting.sol\":3180:3185  token */\n      dup4\n        /* \"Lock-All-VIM-And-Vesting.sol\":3194:3209  block.timestamp */\n      timestamp\n        /* \"Lock-All-VIM-And-Vesting.sol\":3167:3179  vestedAmount */\n      tag_32\n        /* \"Lock-All-VIM-And-Vesting.sol\":3167:3211  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_51:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3167:3229  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3146:3229  uint256 releasable = vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":3264:3274  releasable */\n      dup1\n        /* \"Lock-All-VIM-And-Vesting.sol\":3239:3253  _erc20Released */\n      0x01\n        /* \"Lock-All-VIM-And-Vesting.sol\":3239:3260  _erc20Released[token] */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":3254:3259  token */\n      dup5\n        /* \"Lock-All-VIM-And-Vesting.sol\":3239:3260  _erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":3239:3274  _erc20Released[token] += releasable */\n      dup3\n      dup3\n      sload\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":3303:3308  token */\n      dup2\n        /* \"Lock-All-VIM-And-Vesting.sol\":3289:3321  ERC20Released(token, releasable) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n        /* \"Lock-All-VIM-And-Vesting.sol\":3310:3320  releasable */\n      dup3\n        /* \"Lock-All-VIM-And-Vesting.sol\":3289:3321  ERC20Released(token, releasable) */\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Lock-All-VIM-And-Vesting.sol\":3331:3395  SafeERC20.safeTransfer(IERC20(token), beneficiary(), releasable) */\n      tag_57\n        /* \"Lock-All-VIM-And-Vesting.sol\":3361:3366  token */\n      dup3\n        /* \"Lock-All-VIM-And-Vesting.sol\":3369:3382  beneficiary() */\n      tag_58\n        /* \"Lock-All-VIM-And-Vesting.sol\":3369:3380  beneficiary */\n      tag_25\n        /* \"Lock-All-VIM-And-Vesting.sol\":3369:3382  beneficiary() */\n      jump\t// in\n    tag_58:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3384:3394  releasable */\n      dup4\n        /* \"Lock-All-VIM-And-Vesting.sol\":3331:3353  SafeERC20.safeTransfer */\n      tag_59\n        /* \"Lock-All-VIM-And-Vesting.sol\":3331:3395  SafeERC20.safeTransfer(IERC20(token), beneficiary(), releasable) */\n      jump\t// in\n    tag_57:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3136:3402  {... */\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":3089:3402  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"Lock-All-VIM-And-Vesting.sol\":1818:1915  function beneficiary() public view virtual returns (address) {... */\n    tag_25:\n        /* \"Lock-All-VIM-And-Vesting.sol\":1870:1877  address */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":1896:1908  _beneficiary */\n      immutable(\"0x4fca09fadb3ed1b98f4f991d2932c7603c5a12b8d41dcf7454034dac420d9d2f\")\n        /* \"Lock-All-VIM-And-Vesting.sol\":1889:1908  return _beneficiary */\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":1818:1915  function beneficiary() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Lock-All-VIM-And-Vesting.sol\":3850:4052  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_32:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3934:3941  uint256 */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":3960:4045  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      tag_62\n        /* \"Lock-All-VIM-And-Vesting.sol\":4018:4033  released(token) */\n      tag_63\n        /* \"Lock-All-VIM-And-Vesting.sol\":4027:4032  token */\n      dup5\n        /* \"Lock-All-VIM-And-Vesting.sol\":4018:4026  released */\n      tag_37\n        /* \"Lock-All-VIM-And-Vesting.sol\":4018:4033  released(token) */\n      jump\t// in\n    tag_63:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3984:3989  token */\n      dup5\n        /* \"Lock-All-VIM-And-Vesting.sol\":3977:4000  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Lock-All-VIM-And-Vesting.sol\":4009:4013  this */\n      address\n        /* \"Lock-All-VIM-And-Vesting.sol\":3977:4015  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_64:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3977:4033  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_70\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_70:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4035:4044  timestamp */\n      dup4\n        /* \"Lock-All-VIM-And-Vesting.sol\":3960:3976  _vestingSchedule */\n      tag_71\n        /* \"Lock-All-VIM-And-Vesting.sol\":3960:4045  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      jump\t// in\n    tag_62:\n        /* \"Lock-All-VIM-And-Vesting.sol\":3953:4045  return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":3850:4052  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Lock-All-VIM-And-Vesting.sol\":2449:2565  function released(address token) public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"Lock-All-VIM-And-Vesting.sol\":2511:2518  uint256 */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":2537:2551  _erc20Released */\n      0x01\n        /* \"Lock-All-VIM-And-Vesting.sol\":2537:2558  _erc20Released[token] */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":2552:2557  token */\n      dup4\n        /* \"Lock-All-VIM-And-Vesting.sol\":2537:2558  _erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Lock-All-VIM-And-Vesting.sol\":2530:2558  return _erc20Released[token] */\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":2449:2565  function released(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Lock-All-VIM-And-Vesting.sol\":1981:2066  function start() public view virtual returns (uint256) {... */\n    tag_41:\n        /* \"Lock-All-VIM-And-Vesting.sol\":2027:2034  uint256 */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":2053:2059  _start */\n      immutable(\"0x45b6342a02ae42cf7a36e3769317f7b96c6a4d2644ee9d0c4985d913762cb1d4\")\n        /* \"Lock-All-VIM-And-Vesting.sol\":2046:2059  return _start */\n      0xffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":1981:2066  function start() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Lock-All-VIM-And-Vesting.sol\":4659:4794  function getBalance(address token) public view virtual returns (uint256) {... */\n    tag_46:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4723:4730  uint256 */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":4756:4761  token */\n      dup2\n        /* \"Lock-All-VIM-And-Vesting.sol\":4749:4772  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Lock-All-VIM-And-Vesting.sol\":4781:4785  this */\n      address\n        /* \"Lock-All-VIM-And-Vesting.sol\":4749:4787  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_79:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4742:4787  return IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":4659:4794  function getBalance(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SafeERC20.sol\":687:892  function safeTransfer(... */\n    tag_59:\n        /* \"SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_81\n        /* \"SafeERC20.sol\":819:824  token */\n      dup4\n        /* \"SafeERC20.sol\":849:872  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"SafeERC20.sol\":874:876  to */\n      dup5\n        /* \"SafeERC20.sol\":878:883  value */\n      dup5\n        /* \"SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_84\n        /* \"SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_81:\n        /* \"SafeERC20.sol\":687:892  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Lock-All-VIM-And-Vesting.sol\":4246:4612  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_71:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4346:4353  uint256 */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":4381:4388  start() */\n      tag_86\n        /* \"Lock-All-VIM-And-Vesting.sol\":4381:4386  start */\n      tag_41\n        /* \"Lock-All-VIM-And-Vesting.sol\":4381:4388  start() */\n      jump\t// in\n    tag_86:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4369:4378  timestamp */\n      dup3\n        /* \"Lock-All-VIM-And-Vesting.sol\":4369:4388  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"Lock-All-VIM-And-Vesting.sol\":4365:4606  if (timestamp < start()) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"Lock-All-VIM-And-Vesting.sol\":4411:4412  0 */\n      0x00\n        /* \"Lock-All-VIM-And-Vesting.sol\":4404:4412  return 0 */\n      swap1\n      pop\n      jump(tag_85)\n        /* \"Lock-All-VIM-And-Vesting.sol\":4365:4606  if (timestamp < start()) {... */\n    tag_87:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4455:4465  duration() */\n      tag_89\n        /* \"Lock-All-VIM-And-Vesting.sol\":4455:4463  duration */\n      tag_15\n        /* \"Lock-All-VIM-And-Vesting.sol\":4455:4465  duration() */\n      jump\t// in\n    tag_89:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4445:4452  start() */\n      tag_90\n        /* \"Lock-All-VIM-And-Vesting.sol\":4445:4450  start */\n      tag_41\n        /* \"Lock-All-VIM-And-Vesting.sol\":4445:4452  start() */\n      jump\t// in\n    tag_90:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4445:4465  start() + duration() */\n      tag_91\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_91:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4433:4442  timestamp */\n      dup3\n        /* \"Lock-All-VIM-And-Vesting.sol\":4433:4465  timestamp > start() + duration() */\n      0xffffffffffffffff\n      and\n      gt\n        /* \"Lock-All-VIM-And-Vesting.sol\":4429:4606  if (timestamp > start() + duration()) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"Lock-All-VIM-And-Vesting.sol\":4488:4503  totalAllocation */\n      dup3\n        /* \"Lock-All-VIM-And-Vesting.sol\":4481:4503  return totalAllocation */\n      swap1\n      pop\n      jump(tag_85)\n        /* \"Lock-All-VIM-And-Vesting.sol\":4429:4606  if (timestamp > start() + duration()) {... */\n    tag_92:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4585:4595  duration() */\n      tag_94\n        /* \"Lock-All-VIM-And-Vesting.sol\":4585:4593  duration */\n      tag_15\n        /* \"Lock-All-VIM-And-Vesting.sol\":4585:4595  duration() */\n      jump\t// in\n    tag_94:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4573:4580  start() */\n      tag_95\n        /* \"Lock-All-VIM-And-Vesting.sol\":4573:4578  start */\n      tag_41\n        /* \"Lock-All-VIM-And-Vesting.sol\":4573:4580  start() */\n      jump\t// in\n    tag_95:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4561:4570  timestamp */\n      dup4\n        /* \"Lock-All-VIM-And-Vesting.sol\":4561:4580  timestamp - start() */\n      0xffffffffffffffff\n      and\n      tag_96\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_96:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4542:4557  totalAllocation */\n      dup5\n        /* \"Lock-All-VIM-And-Vesting.sol\":4542:4581  totalAllocation * (timestamp - start()) */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4541:4595  (totalAllocation * (timestamp - start())) / duration() */\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"Lock-All-VIM-And-Vesting.sol\":4534:4595  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n        /* \"Lock-All-VIM-And-Vesting.sol\":4246:4612  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_85:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeERC20.sol\":3193:3899  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_84:\n        /* \"SafeERC20.sol\":3612:3635  bytes memory returndata */\n      0x00\n        /* \"SafeERC20.sol\":3638:3707  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_102\n        /* \"SafeERC20.sol\":3666:3670  data */\n      dup3\n        /* \"SafeERC20.sol\":3638:3707  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"SafeERC20.sol\":3646:3651  token */\n      dup6\n        /* \"SafeERC20.sol\":3638:3665  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_103\n      swap1\n        /* \"SafeERC20.sol\":3638:3707  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"SafeERC20.sol\":3612:3707  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"SafeERC20.sol\":3741:3742  0 */\n      0x00\n        /* \"SafeERC20.sol\":3721:3731  returndata */\n      dup2\n        /* \"SafeERC20.sol\":3721:3738  returndata.length */\n      mload\n        /* \"SafeERC20.sol\":3721:3742  returndata.length > 0 */\n      gt\n        /* \"SafeERC20.sol\":3717:3893  if (returndata.length > 0) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"SafeERC20.sol\":3816:3826  returndata */\n      dup1\n        /* \"SafeERC20.sol\":3805:3835  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"SafeERC20.sol\":3797:3882  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"SafeERC20.sol\":3717:3893  if (returndata.length > 0) {... */\n    tag_104:\n        /* \"SafeERC20.sol\":3263:3899  {... */\n      pop\n        /* \"SafeERC20.sol\":3193:3899  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":3846:4069  function functionCall(... */\n    tag_103:\n        /* \"Address.sol\":3979:3991  bytes memory */\n      0x60\n        /* \"Address.sol\":4010:4062  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_111\n        /* \"Address.sol\":4032:4038  target */\n      dup5\n        /* \"Address.sol\":4040:4044  data */\n      dup5\n        /* \"Address.sol\":4046:4047  0 */\n      0x00\n        /* \"Address.sol\":4049:4061  errorMessage */\n      dup6\n        /* \"Address.sol\":4010:4031  functionCallWithValue */\n      tag_112\n        /* \"Address.sol\":4010:4062  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_111:\n        /* \"Address.sol\":4003:4062  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Address.sol\":3846:4069  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":4933:5432  function functionCallWithValue(... */\n    tag_112:\n        /* \"Address.sol\":5098:5110  bytes memory */\n      0x60\n        /* \"Address.sol\":5155:5160  value */\n      dup3\n        /* \"Address.sol\":5130:5151  address(this).balance */\n      selfbalance\n        /* \"Address.sol\":5130:5160  address(this).balance >= value */\n      lt\n      iszero\n        /* \"Address.sol\":5122:5203  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"Address.sol\":5221:5239  isContract(target) */\n      tag_117\n        /* \"Address.sol\":5232:5238  target */\n      dup6\n        /* \"Address.sol\":5221:5231  isContract */\n      tag_118\n        /* \"Address.sol\":5221:5239  isContract(target) */\n      jump\t// in\n    tag_117:\n        /* \"Address.sol\":5213:5273  require(isContract(target), \"Address: call to non-contract\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"Address.sol\":5285:5297  bool success */\n      0x00\n        /* \"Address.sol\":5299:5322  bytes memory returndata */\n      dup1\n        /* \"Address.sol\":5326:5332  target */\n      dup7\n        /* \"Address.sol\":5326:5337  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Address.sol\":5345:5350  value */\n      dup6\n        /* \"Address.sol\":5352:5356  data */\n      dup8\n        /* \"Address.sol\":5326:5357  target.call{value: value}(data) */\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_126\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_125)\n    tag_126:\n      0x60\n      swap2\n      pop\n    tag_125:\n      pop\n        /* \"Address.sol\":5284:5357  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Address.sol\":5374:5425  verifyCallResult(success, returndata, errorMessage) */\n      tag_127\n        /* \"Address.sol\":5391:5398  success */\n      dup3\n        /* \"Address.sol\":5400:5410  returndata */\n      dup3\n        /* \"Address.sol\":5412:5424  errorMessage */\n      dup7\n        /* \"Address.sol\":5374:5390  verifyCallResult */\n      tag_128\n        /* \"Address.sol\":5374:5425  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_127:\n        /* \"Address.sol\":5367:5425  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Address.sol\":4933:5432  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":1160:1480  function isContract(address account) internal view returns (bool) {... */\n    tag_118:\n        /* \"Address.sol\":1220:1224  bool */\n      0x00\n        /* \"Address.sol\":1472:1473  0 */\n      dup1\n        /* \"Address.sol\":1450:1457  account */\n      dup3\n        /* \"Address.sol\":1450:1469  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"Address.sol\":1450:1473  account.code.length > 0 */\n      gt\n        /* \"Address.sol\":1443:1473  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"Address.sol\":1160:1480  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Address.sol\":7546:8238  function verifyCallResult(... */\n    tag_128:\n        /* \"Address.sol\":7692:7704  bytes memory */\n      0x60\n        /* \"Address.sol\":7720:7727  success */\n      dup4\n        /* \"Address.sol\":7716:8232  if (success) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"Address.sol\":7750:7760  returndata */\n      dup3\n        /* \"Address.sol\":7743:7760  return returndata */\n      swap1\n      pop\n      jump(tag_130)\n        /* \"Address.sol\":7716:8232  if (success) {... */\n    tag_131:\n        /* \"Address.sol\":7881:7882  0 */\n      0x00\n        /* \"Address.sol\":7861:7871  returndata */\n      dup4\n        /* \"Address.sol\":7861:7878  returndata.length */\n      mload\n        /* \"Address.sol\":7861:7882  returndata.length > 0 */\n      gt\n        /* \"Address.sol\":7857:8222  if (returndata.length > 0) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"Address.sol\":8055:8065  returndata */\n      dup3\n        /* \"Address.sol\":8049:8066  mload(returndata) */\n      mload\n        /* \"Address.sol\":8115:8130  returndata_size */\n      dup1\n        /* \"Address.sol\":8102:8112  returndata */\n      dup5\n        /* \"Address.sol\":8098:8100  32 */\n      0x20\n        /* \"Address.sol\":8094:8113  add(32, returndata) */\n      add\n        /* \"Address.sol\":8087:8131  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Address.sol\":7857:8222  if (returndata.length > 0) {... */\n    tag_133:\n        /* \"Address.sol\":8194:8206  errorMessage */\n      dup2\n        /* \"Address.sol\":8187:8207  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Address.sol\":7546:8238  function verifyCallResult(... */\n    tag_130:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_138:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_140\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_142:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_144\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:438   */\n    tag_146:\n        /* \"#utility.yul\":352:357   */\n      0x00\n        /* \"#utility.yul\":383:389   */\n      dup2\n        /* \"#utility.yul\":377:390   */\n      mload\n        /* \"#utility.yul\":368:390   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:432   */\n      tag_148\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":399:432   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":295:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:581   */\n    tag_150:\n        /* \"#utility.yul\":489:494   */\n      0x00\n        /* \"#utility.yul\":527:533   */\n      dup2\n        /* \"#utility.yul\":514:534   */\n      calldataload\n        /* \"#utility.yul\":505:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":543:575   */\n      tag_152\n        /* \"#utility.yul\":569:574   */\n      dup2\n        /* \"#utility.yul\":543:575   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":444:581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":587:916   */\n    tag_21:\n        /* \"#utility.yul\":646:652   */\n      0x00\n        /* \"#utility.yul\":695:697   */\n      0x20\n        /* \"#utility.yul\":683:692   */\n      dup3\n        /* \"#utility.yul\":674:681   */\n      dup5\n        /* \"#utility.yul\":670:693   */\n      sub\n        /* \"#utility.yul\":666:698   */\n      slt\n        /* \"#utility.yul\":663:782   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":701:780   */\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":663:782   */\n    tag_155:\n        /* \"#utility.yul\":821:822   */\n      0x00\n        /* \"#utility.yul\":846:899   */\n      tag_158\n        /* \"#utility.yul\":891:898   */\n      dup5\n        /* \"#utility.yul\":882:888   */\n      dup3\n        /* \"#utility.yul\":871:880   */\n      dup6\n        /* \"#utility.yul\":867:889   */\n      add\n        /* \"#utility.yul\":846:899   */\n      tag_138\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":836:899   */\n      swap2\n      pop\n        /* \"#utility.yul\":792:909   */\n      pop\n        /* \"#utility.yul\":587:916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":922:1394   */\n    tag_31:\n        /* \"#utility.yul\":989:995   */\n      0x00\n        /* \"#utility.yul\":997:1003   */\n      dup1\n        /* \"#utility.yul\":1046:1048   */\n      0x40\n        /* \"#utility.yul\":1034:1043   */\n      dup4\n        /* \"#utility.yul\":1025:1032   */\n      dup6\n        /* \"#utility.yul\":1021:1044   */\n      sub\n        /* \"#utility.yul\":1017:1049   */\n      slt\n        /* \"#utility.yul\":1014:1133   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1052:1131   */\n      tag_161\n      tag_157\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1014:1133   */\n    tag_160:\n        /* \"#utility.yul\":1172:1173   */\n      0x00\n        /* \"#utility.yul\":1197:1250   */\n      tag_162\n        /* \"#utility.yul\":1242:1249   */\n      dup6\n        /* \"#utility.yul\":1233:1239   */\n      dup3\n        /* \"#utility.yul\":1222:1231   */\n      dup7\n        /* \"#utility.yul\":1218:1240   */\n      add\n        /* \"#utility.yul\":1197:1250   */\n      tag_138\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1187:1250   */\n      swap3\n      pop\n        /* \"#utility.yul\":1143:1260   */\n      pop\n        /* \"#utility.yul\":1299:1301   */\n      0x20\n        /* \"#utility.yul\":1325:1377   */\n      tag_163\n        /* \"#utility.yul\":1369:1376   */\n      dup6\n        /* \"#utility.yul\":1360:1366   */\n      dup3\n        /* \"#utility.yul\":1349:1358   */\n      dup7\n        /* \"#utility.yul\":1345:1367   */\n      add\n        /* \"#utility.yul\":1325:1377   */\n      tag_150\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1315:1377   */\n      swap2\n      pop\n        /* \"#utility.yul\":1270:1387   */\n      pop\n        /* \"#utility.yul\":922:1394   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1400:1745   */\n    tag_106:\n        /* \"#utility.yul\":1467:1473   */\n      0x00\n        /* \"#utility.yul\":1516:1518   */\n      0x20\n        /* \"#utility.yul\":1504:1513   */\n      dup3\n        /* \"#utility.yul\":1495:1502   */\n      dup5\n        /* \"#utility.yul\":1491:1514   */\n      sub\n        /* \"#utility.yul\":1487:1519   */\n      slt\n        /* \"#utility.yul\":1484:1603   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1522:1601   */\n      tag_166\n      tag_157\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1484:1603   */\n    tag_165:\n        /* \"#utility.yul\":1642:1643   */\n      0x00\n        /* \"#utility.yul\":1667:1728   */\n      tag_167\n        /* \"#utility.yul\":1720:1727   */\n      dup5\n        /* \"#utility.yul\":1711:1717   */\n      dup3\n        /* \"#utility.yul\":1700:1709   */\n      dup6\n        /* \"#utility.yul\":1696:1718   */\n      add\n        /* \"#utility.yul\":1667:1728   */\n      tag_142\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1657:1728   */\n      swap2\n      pop\n        /* \"#utility.yul\":1613:1738   */\n      pop\n        /* \"#utility.yul\":1400:1745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1751:2102   */\n    tag_69:\n        /* \"#utility.yul\":1821:1827   */\n      0x00\n        /* \"#utility.yul\":1870:1872   */\n      0x20\n        /* \"#utility.yul\":1858:1867   */\n      dup3\n        /* \"#utility.yul\":1849:1856   */\n      dup5\n        /* \"#utility.yul\":1845:1868   */\n      sub\n        /* \"#utility.yul\":1841:1873   */\n      slt\n        /* \"#utility.yul\":1838:1957   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1876:1955   */\n      tag_170\n      tag_157\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1838:1957   */\n    tag_169:\n        /* \"#utility.yul\":1996:1997   */\n      0x00\n        /* \"#utility.yul\":2021:2085   */\n      tag_171\n        /* \"#utility.yul\":2077:2084   */\n      dup5\n        /* \"#utility.yul\":2068:2074   */\n      dup3\n        /* \"#utility.yul\":2057:2066   */\n      dup6\n        /* \"#utility.yul\":2053:2075   */\n      add\n        /* \"#utility.yul\":2021:2085   */\n      tag_146\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2011:2085   */\n      swap2\n      pop\n        /* \"#utility.yul\":1967:2095   */\n      pop\n        /* \"#utility.yul\":1751:2102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2226   */\n    tag_172:\n        /* \"#utility.yul\":2195:2219   */\n      tag_174\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2195:2219   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2190:2193   */\n      dup3\n        /* \"#utility.yul\":2183:2220   */\n      mstore\n        /* \"#utility.yul\":2108:2226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2232:2605   */\n    tag_176:\n        /* \"#utility.yul\":2336:2339   */\n      0x00\n        /* \"#utility.yul\":2364:2402   */\n      tag_178\n        /* \"#utility.yul\":2396:2401   */\n      dup3\n        /* \"#utility.yul\":2364:2402   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2418:2506   */\n      tag_180\n        /* \"#utility.yul\":2499:2505   */\n      dup2\n        /* \"#utility.yul\":2494:2497   */\n      dup6\n        /* \"#utility.yul\":2418:2506   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2411:2506   */\n      swap4\n      pop\n        /* \"#utility.yul\":2515:2567   */\n      tag_182\n        /* \"#utility.yul\":2560:2566   */\n      dup2\n        /* \"#utility.yul\":2555:2558   */\n      dup6\n        /* \"#utility.yul\":2548:2552   */\n      0x20\n        /* \"#utility.yul\":2541:2546   */\n      dup7\n        /* \"#utility.yul\":2537:2553   */\n      add\n        /* \"#utility.yul\":2515:2567   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2592:2598   */\n      dup1\n        /* \"#utility.yul\":2587:2590   */\n      dup5\n        /* \"#utility.yul\":2583:2599   */\n      add\n        /* \"#utility.yul\":2576:2599   */\n      swap2\n      pop\n        /* \"#utility.yul\":2340:2605   */\n      pop\n        /* \"#utility.yul\":2232:2605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2611:2975   */\n    tag_184:\n        /* \"#utility.yul\":2699:2702   */\n      0x00\n        /* \"#utility.yul\":2727:2766   */\n      tag_186\n        /* \"#utility.yul\":2760:2765   */\n      dup3\n        /* \"#utility.yul\":2727:2766   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2782:2853   */\n      tag_188\n        /* \"#utility.yul\":2846:2852   */\n      dup2\n        /* \"#utility.yul\":2841:2844   */\n      dup6\n        /* \"#utility.yul\":2782:2853   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2775:2853   */\n      swap4\n      pop\n        /* \"#utility.yul\":2862:2914   */\n      tag_190\n        /* \"#utility.yul\":2907:2913   */\n      dup2\n        /* \"#utility.yul\":2902:2905   */\n      dup6\n        /* \"#utility.yul\":2895:2899   */\n      0x20\n        /* \"#utility.yul\":2888:2893   */\n      dup7\n        /* \"#utility.yul\":2884:2900   */\n      add\n        /* \"#utility.yul\":2862:2914   */\n      tag_183\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2939:2968   */\n      tag_191\n        /* \"#utility.yul\":2961:2967   */\n      dup2\n        /* \"#utility.yul\":2939:2968   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2934:2937   */\n      dup5\n        /* \"#utility.yul\":2930:2969   */\n      add\n        /* \"#utility.yul\":2923:2969   */\n      swap2\n      pop\n        /* \"#utility.yul\":2703:2975   */\n      pop\n        /* \"#utility.yul\":2611:2975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2981:3347   */\n    tag_193:\n        /* \"#utility.yul\":3123:3126   */\n      0x00\n        /* \"#utility.yul\":3144:3211   */\n      tag_195\n        /* \"#utility.yul\":3208:3210   */\n      0x26\n        /* \"#utility.yul\":3203:3206   */\n      dup4\n        /* \"#utility.yul\":3144:3211   */\n      tag_189\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3137:3211   */\n      swap2\n      pop\n        /* \"#utility.yul\":3220:3313   */\n      tag_196\n        /* \"#utility.yul\":3309:3312   */\n      dup3\n        /* \"#utility.yul\":3220:3313   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3338:3340   */\n      0x40\n        /* \"#utility.yul\":3333:3336   */\n      dup3\n        /* \"#utility.yul\":3329:3341   */\n      add\n        /* \"#utility.yul\":3322:3341   */\n      swap1\n      pop\n        /* \"#utility.yul\":2981:3347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3353:3719   */\n    tag_198:\n        /* \"#utility.yul\":3495:3498   */\n      0x00\n        /* \"#utility.yul\":3516:3583   */\n      tag_200\n        /* \"#utility.yul\":3580:3582   */\n      0x1d\n        /* \"#utility.yul\":3575:3578   */\n      dup4\n        /* \"#utility.yul\":3516:3583   */\n      tag_189\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3509:3583   */\n      swap2\n      pop\n        /* \"#utility.yul\":3592:3685   */\n      tag_201\n        /* \"#utility.yul\":3681:3684   */\n      dup3\n        /* \"#utility.yul\":3592:3685   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3705:3708   */\n      dup3\n        /* \"#utility.yul\":3701:3713   */\n      add\n        /* \"#utility.yul\":3694:3713   */\n      swap1\n      pop\n        /* \"#utility.yul\":3353:3719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3725:4091   */\n    tag_203:\n        /* \"#utility.yul\":3867:3870   */\n      0x00\n        /* \"#utility.yul\":3888:3955   */\n      tag_205\n        /* \"#utility.yul\":3952:3954   */\n      0x2a\n        /* \"#utility.yul\":3947:3950   */\n      dup4\n        /* \"#utility.yul\":3888:3955   */\n      tag_189\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3881:3955   */\n      swap2\n      pop\n        /* \"#utility.yul\":3964:4057   */\n      tag_206\n        /* \"#utility.yul\":4053:4056   */\n      dup3\n        /* \"#utility.yul\":3964:4057   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4082:4084   */\n      0x40\n        /* \"#utility.yul\":4077:4080   */\n      dup3\n        /* \"#utility.yul\":4073:4085   */\n      add\n        /* \"#utility.yul\":4066:4085   */\n      swap1\n      pop\n        /* \"#utility.yul\":3725:4091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4097:4215   */\n    tag_208:\n        /* \"#utility.yul\":4184:4208   */\n      tag_210\n        /* \"#utility.yul\":4202:4207   */\n      dup2\n        /* \"#utility.yul\":4184:4208   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4179:4182   */\n      dup3\n        /* \"#utility.yul\":4172:4209   */\n      mstore\n        /* \"#utility.yul\":4097:4215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4221:4492   */\n    tag_123:\n        /* \"#utility.yul\":4351:4354   */\n      0x00\n        /* \"#utility.yul\":4373:4466   */\n      tag_213\n        /* \"#utility.yul\":4462:4465   */\n      dup3\n        /* \"#utility.yul\":4453:4459   */\n      dup5\n        /* \"#utility.yul\":4373:4466   */\n      tag_176\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4366:4466   */\n      swap2\n      pop\n        /* \"#utility.yul\":4483:4486   */\n      dup2\n        /* \"#utility.yul\":4476:4486   */\n      swap1\n      pop\n        /* \"#utility.yul\":4221:4492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4498:4720   */\n    tag_27:\n        /* \"#utility.yul\":4591:4595   */\n      0x00\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4618:4627   */\n      dup3\n        /* \"#utility.yul\":4614:4632   */\n      add\n        /* \"#utility.yul\":4606:4632   */\n      swap1\n      pop\n        /* \"#utility.yul\":4642:4713   */\n      tag_215\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4699:4708   */\n      dup4\n        /* \"#utility.yul\":4695:4712   */\n      add\n        /* \"#utility.yul\":4686:4692   */\n      dup5\n        /* \"#utility.yul\":4642:4713   */\n      tag_172\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4498:4720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:5058   */\n    tag_83:\n        /* \"#utility.yul\":4847:4851   */\n      0x00\n        /* \"#utility.yul\":4885:4887   */\n      0x40\n        /* \"#utility.yul\":4874:4883   */\n      dup3\n        /* \"#utility.yul\":4870:4888   */\n      add\n        /* \"#utility.yul\":4862:4888   */\n      swap1\n      pop\n        /* \"#utility.yul\":4898:4969   */\n      tag_217\n        /* \"#utility.yul\":4966:4967   */\n      0x00\n        /* \"#utility.yul\":4955:4964   */\n      dup4\n        /* \"#utility.yul\":4951:4968   */\n      add\n        /* \"#utility.yul\":4942:4948   */\n      dup6\n        /* \"#utility.yul\":4898:4969   */\n      tag_172\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4979:5051   */\n      tag_218\n        /* \"#utility.yul\":5047:5049   */\n      0x20\n        /* \"#utility.yul\":5036:5045   */\n      dup4\n        /* \"#utility.yul\":5032:5050   */\n      add\n        /* \"#utility.yul\":5023:5029   */\n      dup5\n        /* \"#utility.yul\":4979:5051   */\n      tag_208\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4726:5058   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5064:5377   */\n    tag_136:\n        /* \"#utility.yul\":5177:5181   */\n      0x00\n        /* \"#utility.yul\":5215:5217   */\n      0x20\n        /* \"#utility.yul\":5204:5213   */\n      dup3\n        /* \"#utility.yul\":5200:5218   */\n      add\n        /* \"#utility.yul\":5192:5218   */\n      swap1\n      pop\n        /* \"#utility.yul\":5264:5273   */\n      dup2\n        /* \"#utility.yul\":5258:5262   */\n      dup2\n        /* \"#utility.yul\":5254:5274   */\n      sub\n        /* \"#utility.yul\":5250:5251   */\n      0x00\n        /* \"#utility.yul\":5239:5248   */\n      dup4\n        /* \"#utility.yul\":5235:5252   */\n      add\n        /* \"#utility.yul\":5228:5275   */\n      mstore\n        /* \"#utility.yul\":5292:5370   */\n      tag_220\n        /* \"#utility.yul\":5365:5369   */\n      dup2\n        /* \"#utility.yul\":5356:5362   */\n      dup5\n        /* \"#utility.yul\":5292:5370   */\n      tag_184\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5284:5370   */\n      swap1\n      pop\n        /* \"#utility.yul\":5064:5377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5802   */\n    tag_116:\n        /* \"#utility.yul\":5549:5553   */\n      0x00\n        /* \"#utility.yul\":5587:5589   */\n      0x20\n        /* \"#utility.yul\":5576:5585   */\n      dup3\n        /* \"#utility.yul\":5572:5590   */\n      add\n        /* \"#utility.yul\":5564:5590   */\n      swap1\n      pop\n        /* \"#utility.yul\":5636:5645   */\n      dup2\n        /* \"#utility.yul\":5630:5634   */\n      dup2\n        /* \"#utility.yul\":5626:5646   */\n      sub\n        /* \"#utility.yul\":5622:5623   */\n      0x00\n        /* \"#utility.yul\":5611:5620   */\n      dup4\n        /* \"#utility.yul\":5607:5624   */\n      add\n        /* \"#utility.yul\":5600:5647   */\n      mstore\n        /* \"#utility.yul\":5664:5795   */\n      tag_222\n        /* \"#utility.yul\":5790:5794   */\n      dup2\n        /* \"#utility.yul\":5664:5795   */\n      tag_193\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5656:5795   */\n      swap1\n      pop\n        /* \"#utility.yul\":5383:5802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5808:6227   */\n    tag_121:\n        /* \"#utility.yul\":5974:5978   */\n      0x00\n        /* \"#utility.yul\":6012:6014   */\n      0x20\n        /* \"#utility.yul\":6001:6010   */\n      dup3\n        /* \"#utility.yul\":5997:6015   */\n      add\n        /* \"#utility.yul\":5989:6015   */\n      swap1\n      pop\n        /* \"#utility.yul\":6061:6070   */\n      dup2\n        /* \"#utility.yul\":6055:6059   */\n      dup2\n        /* \"#utility.yul\":6051:6071   */\n      sub\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6036:6045   */\n      dup4\n        /* \"#utility.yul\":6032:6049   */\n      add\n        /* \"#utility.yul\":6025:6072   */\n      mstore\n        /* \"#utility.yul\":6089:6220   */\n      tag_224\n        /* \"#utility.yul\":6215:6219   */\n      dup2\n        /* \"#utility.yul\":6089:6220   */\n      tag_198\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6081:6220   */\n      swap1\n      pop\n        /* \"#utility.yul\":5808:6227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6233:6652   */\n    tag_109:\n        /* \"#utility.yul\":6399:6403   */\n      0x00\n        /* \"#utility.yul\":6437:6439   */\n      0x20\n        /* \"#utility.yul\":6426:6435   */\n      dup3\n        /* \"#utility.yul\":6422:6440   */\n      add\n        /* \"#utility.yul\":6414:6440   */\n      swap1\n      pop\n        /* \"#utility.yul\":6486:6495   */\n      dup2\n        /* \"#utility.yul\":6480:6484   */\n      dup2\n        /* \"#utility.yul\":6476:6496   */\n      sub\n        /* \"#utility.yul\":6472:6473   */\n      0x00\n        /* \"#utility.yul\":6461:6470   */\n      dup4\n        /* \"#utility.yul\":6457:6474   */\n      add\n        /* \"#utility.yul\":6450:6497   */\n      mstore\n        /* \"#utility.yul\":6514:6645   */\n      tag_226\n        /* \"#utility.yul\":6640:6644   */\n      dup2\n        /* \"#utility.yul\":6514:6645   */\n      tag_203\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6506:6645   */\n      swap1\n      pop\n        /* \"#utility.yul\":6233:6652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6658:6880   */\n    tag_17:\n        /* \"#utility.yul\":6751:6755   */\n      0x00\n        /* \"#utility.yul\":6789:6791   */\n      0x20\n        /* \"#utility.yul\":6778:6787   */\n      dup3\n        /* \"#utility.yul\":6774:6792   */\n      add\n        /* \"#utility.yul\":6766:6792   */\n      swap1\n      pop\n        /* \"#utility.yul\":6802:6873   */\n      tag_228\n        /* \"#utility.yul\":6870:6871   */\n      0x00\n        /* \"#utility.yul\":6859:6868   */\n      dup4\n        /* \"#utility.yul\":6855:6872   */\n      add\n        /* \"#utility.yul\":6846:6852   */\n      dup5\n        /* \"#utility.yul\":6802:6873   */\n      tag_208\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6658:6880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6967:7065   */\n    tag_179:\n        /* \"#utility.yul\":7018:7024   */\n      0x00\n        /* \"#utility.yul\":7052:7057   */\n      dup2\n        /* \"#utility.yul\":7046:7058   */\n      mload\n        /* \"#utility.yul\":7036:7058   */\n      swap1\n      pop\n        /* \"#utility.yul\":6967:7065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7071:7170   */\n    tag_187:\n        /* \"#utility.yul\":7123:7129   */\n      0x00\n        /* \"#utility.yul\":7157:7162   */\n      dup2\n        /* \"#utility.yul\":7151:7163   */\n      mload\n        /* \"#utility.yul\":7141:7163   */\n      swap1\n      pop\n        /* \"#utility.yul\":7071:7170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7176:7323   */\n    tag_181:\n        /* \"#utility.yul\":7277:7288   */\n      0x00\n        /* \"#utility.yul\":7314:7317   */\n      dup2\n        /* \"#utility.yul\":7299:7317   */\n      swap1\n      pop\n        /* \"#utility.yul\":7176:7323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7329:7498   */\n    tag_189:\n        /* \"#utility.yul\":7413:7424   */\n      0x00\n        /* \"#utility.yul\":7447:7453   */\n      dup3\n        /* \"#utility.yul\":7442:7445   */\n      dup3\n        /* \"#utility.yul\":7435:7454   */\n      mstore\n        /* \"#utility.yul\":7487:7491   */\n      0x20\n        /* \"#utility.yul\":7482:7485   */\n      dup3\n        /* \"#utility.yul\":7478:7492   */\n      add\n        /* \"#utility.yul\":7463:7492   */\n      swap1\n      pop\n        /* \"#utility.yul\":7329:7498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7504:7809   */\n    tag_55:\n        /* \"#utility.yul\":7544:7547   */\n      0x00\n        /* \"#utility.yul\":7563:7583   */\n      tag_236\n        /* \"#utility.yul\":7581:7582   */\n      dup3\n        /* \"#utility.yul\":7563:7583   */\n      tag_211\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7558:7583   */\n      swap2\n      pop\n        /* \"#utility.yul\":7597:7617   */\n      tag_237\n        /* \"#utility.yul\":7615:7616   */\n      dup4\n        /* \"#utility.yul\":7597:7617   */\n      tag_211\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7592:7617   */\n      swap3\n      pop\n        /* \"#utility.yul\":7751:7752   */\n      dup3\n        /* \"#utility.yul\":7683:7749   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7679:7753   */\n      sub\n        /* \"#utility.yul\":7676:7677   */\n      dup3\n        /* \"#utility.yul\":7673:7754   */\n      gt\n        /* \"#utility.yul\":7670:7777   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":7757:7775   */\n      tag_239\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7670:7777   */\n    tag_238:\n        /* \"#utility.yul\":7801:7802   */\n      dup3\n        /* \"#utility.yul\":7798:7799   */\n      dup3\n        /* \"#utility.yul\":7794:7803   */\n      add\n        /* \"#utility.yul\":7787:7803   */\n      swap1\n      pop\n        /* \"#utility.yul\":7504:7809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7815:8000   */\n    tag_100:\n        /* \"#utility.yul\":7855:7856   */\n      0x00\n        /* \"#utility.yul\":7872:7892   */\n      tag_242\n        /* \"#utility.yul\":7890:7891   */\n      dup3\n        /* \"#utility.yul\":7872:7892   */\n      tag_211\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7867:7892   */\n      swap2\n      pop\n        /* \"#utility.yul\":7906:7926   */\n      tag_243\n        /* \"#utility.yul\":7924:7925   */\n      dup4\n        /* \"#utility.yul\":7906:7926   */\n      tag_211\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7901:7926   */\n      swap3\n      pop\n        /* \"#utility.yul\":7945:7946   */\n      dup3\n        /* \"#utility.yul\":7935:7970   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":7950:7968   */\n      tag_245\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7935:7970   */\n    tag_244:\n        /* \"#utility.yul\":7992:7993   */\n      dup3\n        /* \"#utility.yul\":7989:7990   */\n      dup3\n        /* \"#utility.yul\":7985:7994   */\n      div\n        /* \"#utility.yul\":7980:7994   */\n      swap1\n      pop\n        /* \"#utility.yul\":7815:8000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8006:8354   */\n    tag_98:\n        /* \"#utility.yul\":8046:8053   */\n      0x00\n        /* \"#utility.yul\":8069:8089   */\n      tag_248\n        /* \"#utility.yul\":8087:8088   */\n      dup3\n        /* \"#utility.yul\":8069:8089   */\n      tag_211\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8064:8089   */\n      swap2\n      pop\n        /* \"#utility.yul\":8103:8123   */\n      tag_249\n        /* \"#utility.yul\":8121:8122   */\n      dup4\n        /* \"#utility.yul\":8103:8123   */\n      tag_211\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8098:8123   */\n      swap3\n      pop\n        /* \"#utility.yul\":8291:8292   */\n      dup2\n        /* \"#utility.yul\":8223:8289   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8219:8293   */\n      div\n        /* \"#utility.yul\":8216:8217   */\n      dup4\n        /* \"#utility.yul\":8213:8294   */\n      gt\n        /* \"#utility.yul\":8208:8209   */\n      dup3\n        /* \"#utility.yul\":8201:8210   */\n      iszero\n        /* \"#utility.yul\":8194:8211   */\n      iszero\n        /* \"#utility.yul\":8190:8295   */\n      and\n        /* \"#utility.yul\":8187:8318   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":8298:8316   */\n      tag_251\n      tag_240\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8187:8318   */\n    tag_250:\n        /* \"#utility.yul\":8346:8347   */\n      dup3\n        /* \"#utility.yul\":8343:8344   */\n      dup3\n        /* \"#utility.yul\":8339:8348   */\n      mul\n        /* \"#utility.yul\":8328:8348   */\n      swap1\n      pop\n        /* \"#utility.yul\":8006:8354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8360:8551   */\n    tag_53:\n        /* \"#utility.yul\":8400:8404   */\n      0x00\n        /* \"#utility.yul\":8420:8440   */\n      tag_253\n        /* \"#utility.yul\":8438:8439   */\n      dup3\n        /* \"#utility.yul\":8420:8440   */\n      tag_211\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8415:8440   */\n      swap2\n      pop\n        /* \"#utility.yul\":8454:8474   */\n      tag_254\n        /* \"#utility.yul\":8472:8473   */\n      dup4\n        /* \"#utility.yul\":8454:8474   */\n      tag_211\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8449:8474   */\n      swap3\n      pop\n        /* \"#utility.yul\":8493:8494   */\n      dup3\n        /* \"#utility.yul\":8490:8491   */\n      dup3\n        /* \"#utility.yul\":8487:8495   */\n      lt\n        /* \"#utility.yul\":8484:8518   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8498:8516   */\n      tag_256\n      tag_240\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8484:8518   */\n    tag_255:\n        /* \"#utility.yul\":8543:8544   */\n      dup3\n        /* \"#utility.yul\":8540:8541   */\n      dup3\n        /* \"#utility.yul\":8536:8545   */\n      sub\n        /* \"#utility.yul\":8528:8545   */\n      swap1\n      pop\n        /* \"#utility.yul\":8360:8551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8557:8653   */\n    tag_175:\n        /* \"#utility.yul\":8594:8601   */\n      0x00\n        /* \"#utility.yul\":8623:8647   */\n      tag_258\n        /* \"#utility.yul\":8641:8646   */\n      dup3\n        /* \"#utility.yul\":8623:8647   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8612:8647   */\n      swap1\n      pop\n        /* \"#utility.yul\":8557:8653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8659:8749   */\n    tag_260:\n        /* \"#utility.yul\":8693:8700   */\n      0x00\n        /* \"#utility.yul\":8736:8741   */\n      dup2\n        /* \"#utility.yul\":8729:8742   */\n      iszero\n        /* \"#utility.yul\":8722:8743   */\n      iszero\n        /* \"#utility.yul\":8711:8743   */\n      swap1\n      pop\n        /* \"#utility.yul\":8659:8749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8755:8881   */\n    tag_259:\n        /* \"#utility.yul\":8792:8799   */\n      0x00\n        /* \"#utility.yul\":8832:8874   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8825:8830   */\n      dup3\n        /* \"#utility.yul\":8821:8875   */\n      and\n        /* \"#utility.yul\":8810:8875   */\n      swap1\n      pop\n        /* \"#utility.yul\":8755:8881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8887:8964   */\n    tag_211:\n        /* \"#utility.yul\":8924:8931   */\n      0x00\n        /* \"#utility.yul\":8953:8958   */\n      dup2\n        /* \"#utility.yul\":8942:8958   */\n      swap1\n      pop\n        /* \"#utility.yul\":8887:8964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8970:9071   */\n    tag_264:\n        /* \"#utility.yul\":9006:9013   */\n      0x00\n        /* \"#utility.yul\":9046:9064   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9039:9044   */\n      dup3\n        /* \"#utility.yul\":9035:9065   */\n      and\n        /* \"#utility.yul\":9024:9065   */\n      swap1\n      pop\n        /* \"#utility.yul\":8970:9071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9077:9384   */\n    tag_183:\n        /* \"#utility.yul\":9145:9146   */\n      0x00\n        /* \"#utility.yul\":9155:9268   */\n    tag_267:\n        /* \"#utility.yul\":9169:9175   */\n      dup4\n        /* \"#utility.yul\":9166:9167   */\n      dup2\n        /* \"#utility.yul\":9163:9176   */\n      lt\n        /* \"#utility.yul\":9155:9268   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":9254:9255   */\n      dup1\n        /* \"#utility.yul\":9249:9252   */\n      dup3\n        /* \"#utility.yul\":9245:9256   */\n      add\n        /* \"#utility.yul\":9239:9257   */\n      mload\n        /* \"#utility.yul\":9235:9236   */\n      dup2\n        /* \"#utility.yul\":9230:9233   */\n      dup5\n        /* \"#utility.yul\":9226:9237   */\n      add\n        /* \"#utility.yul\":9219:9258   */\n      mstore\n        /* \"#utility.yul\":9191:9193   */\n      0x20\n        /* \"#utility.yul\":9188:9189   */\n      dup2\n        /* \"#utility.yul\":9184:9194   */\n      add\n        /* \"#utility.yul\":9179:9194   */\n      swap1\n      pop\n        /* \"#utility.yul\":9155:9268   */\n      jump(tag_267)\n    tag_269:\n        /* \"#utility.yul\":9286:9292   */\n      dup4\n        /* \"#utility.yul\":9283:9284   */\n      dup2\n        /* \"#utility.yul\":9280:9293   */\n      gt\n        /* \"#utility.yul\":9277:9378   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":9366:9367   */\n      0x00\n        /* \"#utility.yul\":9357:9363   */\n      dup5\n        /* \"#utility.yul\":9352:9355   */\n      dup5\n        /* \"#utility.yul\":9348:9364   */\n      add\n        /* \"#utility.yul\":9341:9368   */\n      mstore\n        /* \"#utility.yul\":9277:9378   */\n    tag_270:\n        /* \"#utility.yul\":9126:9384   */\n      pop\n        /* \"#utility.yul\":9077:9384   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9390:9570   */\n    tag_240:\n        /* \"#utility.yul\":9438:9515   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9435:9436   */\n      0x00\n        /* \"#utility.yul\":9428:9516   */\n      mstore\n        /* \"#utility.yul\":9535:9539   */\n      0x11\n        /* \"#utility.yul\":9532:9533   */\n      0x04\n        /* \"#utility.yul\":9525:9540   */\n      mstore\n        /* \"#utility.yul\":9559:9563   */\n      0x24\n        /* \"#utility.yul\":9556:9557   */\n      0x00\n        /* \"#utility.yul\":9549:9564   */\n      revert\n        /* \"#utility.yul\":9576:9756   */\n    tag_246:\n        /* \"#utility.yul\":9624:9701   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9621:9622   */\n      0x00\n        /* \"#utility.yul\":9614:9702   */\n      mstore\n        /* \"#utility.yul\":9721:9725   */\n      0x12\n        /* \"#utility.yul\":9718:9719   */\n      0x04\n        /* \"#utility.yul\":9711:9726   */\n      mstore\n        /* \"#utility.yul\":9745:9749   */\n      0x24\n        /* \"#utility.yul\":9742:9743   */\n      0x00\n        /* \"#utility.yul\":9735:9750   */\n      revert\n        /* \"#utility.yul\":9885:10002   */\n    tag_157:\n        /* \"#utility.yul\":9994:9995   */\n      0x00\n        /* \"#utility.yul\":9991:9992   */\n      dup1\n        /* \"#utility.yul\":9984:9996   */\n      revert\n        /* \"#utility.yul\":10008:10110   */\n    tag_192:\n        /* \"#utility.yul\":10049:10055   */\n      0x00\n        /* \"#utility.yul\":10100:10102   */\n      0x1f\n        /* \"#utility.yul\":10096:10103   */\n      not\n        /* \"#utility.yul\":10091:10093   */\n      0x1f\n        /* \"#utility.yul\":10084:10089   */\n      dup4\n        /* \"#utility.yul\":10080:10094   */\n      add\n        /* \"#utility.yul\":10076:10104   */\n      and\n        /* \"#utility.yul\":10066:10104   */\n      swap1\n      pop\n        /* \"#utility.yul\":10008:10110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10116:10341   */\n    tag_197:\n        /* \"#utility.yul\":10256:10290   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":10252:10253   */\n      0x00\n        /* \"#utility.yul\":10244:10250   */\n      dup3\n        /* \"#utility.yul\":10240:10254   */\n      add\n        /* \"#utility.yul\":10233:10291   */\n      mstore\n        /* \"#utility.yul\":10325:10333   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10320:10322   */\n      0x20\n        /* \"#utility.yul\":10312:10318   */\n      dup3\n        /* \"#utility.yul\":10308:10323   */\n      add\n        /* \"#utility.yul\":10301:10334   */\n      mstore\n        /* \"#utility.yul\":10116:10341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10347:10526   */\n    tag_202:\n        /* \"#utility.yul\":10487:10518   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":10483:10484   */\n      0x00\n        /* \"#utility.yul\":10475:10481   */\n      dup3\n        /* \"#utility.yul\":10471:10485   */\n      add\n        /* \"#utility.yul\":10464:10519   */\n      mstore\n        /* \"#utility.yul\":10347:10526   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10532:10761   */\n    tag_207:\n        /* \"#utility.yul\":10672:10706   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10668:10669   */\n      0x00\n        /* \"#utility.yul\":10660:10666   */\n      dup3\n        /* \"#utility.yul\":10656:10670   */\n      add\n        /* \"#utility.yul\":10649:10707   */\n      mstore\n        /* \"#utility.yul\":10741:10753   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10736:10738   */\n      0x20\n        /* \"#utility.yul\":10728:10734   */\n      dup3\n        /* \"#utility.yul\":10724:10739   */\n      add\n        /* \"#utility.yul\":10717:10754   */\n      mstore\n        /* \"#utility.yul\":10532:10761   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10767:10889   */\n    tag_141:\n        /* \"#utility.yul\":10840:10864   */\n      tag_281\n        /* \"#utility.yul\":10858:10863   */\n      dup2\n        /* \"#utility.yul\":10840:10864   */\n      tag_175\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10833:10838   */\n      dup2\n        /* \"#utility.yul\":10830:10865   */\n      eq\n        /* \"#utility.yul\":10820:10883   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":10879:10880   */\n      0x00\n        /* \"#utility.yul\":10876:10877   */\n      dup1\n        /* \"#utility.yul\":10869:10881   */\n      revert\n        /* \"#utility.yul\":10820:10883   */\n    tag_282:\n        /* \"#utility.yul\":10767:10889   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10895:11011   */\n    tag_145:\n        /* \"#utility.yul\":10965:10986   */\n      tag_284\n        /* \"#utility.yul\":10980:10985   */\n      dup2\n        /* \"#utility.yul\":10965:10986   */\n      tag_260\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":10958:10963   */\n      dup2\n        /* \"#utility.yul\":10955:10987   */\n      eq\n        /* \"#utility.yul\":10945:11005   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":11001:11002   */\n      0x00\n        /* \"#utility.yul\":10998:10999   */\n      dup1\n        /* \"#utility.yul\":10991:11003   */\n      revert\n        /* \"#utility.yul\":10945:11005   */\n    tag_285:\n        /* \"#utility.yul\":10895:11011   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11017:11139   */\n    tag_149:\n        /* \"#utility.yul\":11090:11114   */\n      tag_287\n        /* \"#utility.yul\":11108:11113   */\n      dup2\n        /* \"#utility.yul\":11090:11114   */\n      tag_211\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11083:11088   */\n      dup2\n        /* \"#utility.yul\":11080:11115   */\n      eq\n        /* \"#utility.yul\":11070:11133   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":11129:11130   */\n      0x00\n        /* \"#utility.yul\":11126:11127   */\n      dup1\n        /* \"#utility.yul\":11119:11131   */\n      revert\n        /* \"#utility.yul\":11070:11133   */\n    tag_288:\n        /* \"#utility.yul\":11017:11139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11145:11265   */\n    tag_153:\n        /* \"#utility.yul\":11217:11240   */\n      tag_290\n        /* \"#utility.yul\":11234:11239   */\n      dup2\n        /* \"#utility.yul\":11217:11240   */\n      tag_264\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11210:11215   */\n      dup2\n        /* \"#utility.yul\":11207:11241   */\n      eq\n        /* \"#utility.yul\":11197:11259   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":11255:11256   */\n      0x00\n        /* \"#utility.yul\":11252:11253   */\n      dup1\n        /* \"#utility.yul\":11245:11257   */\n      revert\n        /* \"#utility.yul\":11197:11259   */\n    tag_291:\n        /* \"#utility.yul\":11145:11265   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f880414cb2fcb0cdf9d5890e0c75ec38f11014ab6494339ff5e564e6f48dbd764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_466": {
									"entryPoint": null,
									"id": 466,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3094:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:79:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "228:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "243:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "237:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "228:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "285:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "259:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "259:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "259:32:6"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "196:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "204:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "212:5:6",
														"type": ""
													}
												],
												"src": "156:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "412:550:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "458:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "460:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "460:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "460:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "433:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "442:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "429:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "454:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "425:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:32:6"
															},
															"nodeType": "YulIf",
															"src": "422:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "551:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "566:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "570:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "595:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "641:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "652:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "661:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "605:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "595:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "689:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "704:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "708:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "734:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "779:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "790:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "775:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "775:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "799:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "744:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "744:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "734:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "827:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "842:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "856:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "846:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "872:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "917:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "928:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "937:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "882:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "872:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "366:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "377:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "389:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "397:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "405:6:6",
														"type": ""
													}
												],
												"src": "303:659:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1190:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1195:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1131:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1296:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918",
																	"nodeType": "YulIdentifier",
																	"src": "1207:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1207:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1309:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1320:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1316:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1309:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1102:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1110:3:6",
														"type": ""
													}
												],
												"src": "968:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1511:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1521:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1533:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1544:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1529:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1521:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1568:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1579:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1587:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1593:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1583:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1557:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1613:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1747:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1621:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1613:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1491:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1506:4:6",
														"type": ""
													}
												],
												"src": "1340:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1805:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1815:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1825:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1798:6:6",
														"type": ""
													}
												],
												"src": "1765:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1959:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1980:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1999:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2004:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1995:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1980:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1914:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1919:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1930:11:6",
														"type": ""
													}
												],
												"src": "1846:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2066:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2076:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2105:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2087:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2076:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2048:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2058:7:6",
														"type": ""
													}
												],
												"src": "2021:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2178:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2193:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2200:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2178:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2150:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2160:7:6",
														"type": ""
													}
												],
												"src": "2123:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2299:57:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2309:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2324:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2331:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:30:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2309:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2281:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2291:7:6",
														"type": ""
													}
												],
												"src": "2255:101:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2451:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2468:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2471:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2461:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2461:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2362:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2574:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2591:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2594:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2584:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2584:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2485:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2714:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2736:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2744:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:14:6"
																	},
																	{
																		"hexValue": "56657374696e6757616c6c65743a2062656e6566696369617279206973207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2748:34:6",
																		"type": "",
																		"value": "VestingWallet: beneficiary is ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2725:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2804:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2812:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2800:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2800:15:6"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2817:12:6",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2793:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2793:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2706:6:6",
														"type": ""
													}
												],
												"src": "2608:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2943:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2952:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2945:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2945:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2945:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2909:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2934:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2916:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2916:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2906:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2906:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:43:6"
															},
															"nodeType": "YulIf",
															"src": "2896:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2879:5:6",
														"type": ""
													}
												],
												"src": "2843:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3013:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3069:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3078:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3081:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3071:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3071:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3071:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3036:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3060:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "3043:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3043:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3033:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:42:6"
															},
															"nodeType": "YulIf",
															"src": "3023:62:6"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3006:5:6",
														"type": ""
													}
												],
												"src": "2971:120:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918(memPtr) {\n\n        mstore(add(memPtr, 0), \"VestingWallet: beneficiary is ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040523480156200001157600080fd5b506040516200122b3803806200122b833981810160405281019062000037919062000156565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620000aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a190620001d9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508167ffffffffffffffff1660a08167ffffffffffffffff1660c01b815250508067ffffffffffffffff1660c08167ffffffffffffffff1660c01b81525050505050620002dc565b6000815190506200013981620002a8565b92915050565b6000815190506200015081620002c2565b92915050565b60008060006060848603121562000172576200017162000254565b5b6000620001828682870162000128565b935050602062000195868287016200013f565b9250506040620001a8868287016200013f565b9150509250925092565b6000620001c1602a83620001fb565b9150620001ce8262000259565b604082019050919050565b60006020820190508181036000830152620001f481620001b2565b9050919050565b600082825260208201905092915050565b6000620002198262000220565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b7f56657374696e6757616c6c65743a2062656e6566696369617279206973207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b620002b3816200020c565b8114620002bf57600080fd5b50565b620002cd8162000240565b8114620002d957600080fd5b50565b60805160601c60a05160c01c60c05160c01c610f166200031560003960006101e501526000610412015260006102f20152610f166000f3fe6080604052600436106100745760003560e01c8063810ec23b1161004e578063810ec23b146100ff5780639852595c1461013c578063be9a655514610179578063f8b2cb4f146101a45761007b565b80630fb5a6b41461008057806319165587146100ab57806338af3eed146100d45761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100956101e1565b6040516100a29190610b58565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906108c3565b610213565b005b3480156100e057600080fd5b506100e96102ee565b6040516100f69190610a92565b60405180910390f35b34801561010b57600080fd5b50610126600480360381019061012191906108f0565b610316565b6040516101339190610b58565b60405180910390f35b34801561014857600080fd5b50610163600480360381019061015e91906108c3565b6103c5565b6040516101709190610b58565b60405180910390f35b34801561018557600080fd5b5061018e61040e565b60405161019b9190610b58565b60405180910390f35b3480156101b057600080fd5b506101cb60048036038101906101c691906108c3565b610440565b6040516101d89190610b58565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061021e826103c5565b6102288342610316565b6102329190610c86565b905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102839190610ba5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516102d09190610b58565b60405180910390a26102ea826102e46102ee565b836104d2565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006103bd610324846103c5565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161035d9190610a92565b60206040518083038186803b15801561037557600080fd5b505afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad919061095d565b6103b79190610ba5565b83610558565b905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161047b9190610a92565b60206040518083038186803b15801561049357600080fd5b505afa1580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cb919061095d565b9050919050565b6105538363a9059cbb60e01b84846040516024016104f1929190610aad565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105f2565b505050565b600061056261040e565b8267ffffffffffffffff16101561057c57600090506105ec565b6105846101e1565b61058c61040e565b6105969190610ba5565b8267ffffffffffffffff1611156105af578290506105ec565b6105b76101e1565b6105bf61040e565b8367ffffffffffffffff166105d49190610c86565b846105df9190610c2c565b6105e99190610bfb565b90505b92915050565b6000610654826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106b99092919063ffffffff16565b90506000815111156106b457808060200190518101906106749190610930565b6106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa90610b38565b60405180910390fd5b5b505050565b60606106c884846000856106d1565b90509392505050565b606082471015610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90610af8565b60405180910390fd5b61071f856107e5565b61075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590610b18565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516107879190610a7b565b60006040518083038185875af1925050503d80600081146107c4576040519150601f19603f3d011682016040523d82523d6000602084013e6107c9565b606091505b50915091506107d9828286610808565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561081857829050610868565b60008351111561082b5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f9190610ad6565b60405180910390fd5b9392505050565b60008135905061087e81610e84565b92915050565b60008151905061089381610e9b565b92915050565b6000815190506108a881610eb2565b92915050565b6000813590506108bd81610ec9565b92915050565b6000602082840312156108d9576108d8610da7565b5b60006108e78482850161086f565b91505092915050565b6000806040838503121561090757610906610da7565b5b60006109158582860161086f565b9250506020610926858286016108ae565b9150509250929050565b60006020828403121561094657610945610da7565b5b600061095484828501610884565b91505092915050565b60006020828403121561097357610972610da7565b5b600061098184828501610899565b91505092915050565b61099381610cba565b82525050565b60006109a482610b73565b6109ae8185610b89565b93506109be818560208601610d16565b80840191505092915050565b60006109d582610b7e565b6109df8185610b94565b93506109ef818560208601610d16565b6109f881610dac565b840191505092915050565b6000610a10602683610b94565b9150610a1b82610dbd565b604082019050919050565b6000610a33601d83610b94565b9150610a3e82610e0c565b602082019050919050565b6000610a56602a83610b94565b9150610a6182610e35565b604082019050919050565b610a7581610cf8565b82525050565b6000610a878284610999565b915081905092915050565b6000602082019050610aa7600083018461098a565b92915050565b6000604082019050610ac2600083018561098a565b610acf6020830184610a6c565b9392505050565b60006020820190508181036000830152610af081846109ca565b905092915050565b60006020820190508181036000830152610b1181610a03565b9050919050565b60006020820190508181036000830152610b3181610a26565b9050919050565b60006020820190508181036000830152610b5181610a49565b9050919050565b6000602082019050610b6d6000830184610a6c565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610bb082610cf8565b9150610bbb83610cf8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bf057610bef610d49565b5b828201905092915050565b6000610c0682610cf8565b9150610c1183610cf8565b925082610c2157610c20610d78565b5b828204905092915050565b6000610c3782610cf8565b9150610c4283610cf8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7b57610c7a610d49565b5b828202905092915050565b6000610c9182610cf8565b9150610c9c83610cf8565b925082821015610caf57610cae610d49565b5b828203905092915050565b6000610cc582610cd8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60005b83811015610d34578082015181840152602081019050610d19565b83811115610d43576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b610e8d81610cba565b8114610e9857600080fd5b50565b610ea481610ccc565b8114610eaf57600080fd5b50565b610ebb81610cf8565b8114610ec657600080fd5b50565b610ed281610d02565b8114610edd57600080fd5b5056fea26469706673582212204f880414cb2fcb0cdf9d5890e0c75ec38f11014ab6494339ff5e564e6f48dbd764736f6c63430008070033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x122B CODESIZE SUB DUP1 PUSH3 0x122B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x156 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP1 PUSH3 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP POP POP POP PUSH3 0x2DC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x139 DUP2 PUSH3 0x2A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x150 DUP2 PUSH3 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x172 JUMPI PUSH3 0x171 PUSH3 0x254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x182 DUP7 DUP3 DUP8 ADD PUSH3 0x128 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x195 DUP7 DUP3 DUP8 ADD PUSH3 0x13F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1A8 DUP7 DUP3 DUP8 ADD PUSH3 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH1 0x2A DUP4 PUSH3 0x1FB JUMP JUMPDEST SWAP2 POP PUSH3 0x1CE DUP3 PUSH3 0x259 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1F4 DUP2 PUSH3 0x1B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x219 DUP3 PUSH3 0x220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x56657374696E6757616C6C65743A2062656E6566696369617279206973207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x2B3 DUP2 PUSH3 0x20C JUMP JUMPDEST DUP2 EQ PUSH3 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2CD DUP2 PUSH3 0x240 JUMP JUMPDEST DUP2 EQ PUSH3 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 SHR PUSH1 0xC0 MLOAD PUSH1 0xC0 SHR PUSH2 0xF16 PUSH3 0x315 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1E5 ADD MSTORE PUSH1 0x0 PUSH2 0x412 ADD MSTORE PUSH1 0x0 PUSH2 0x2F2 ADD MSTORE PUSH2 0xF16 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x810EC23B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x1A4 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xD4 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E DUP3 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x228 DUP4 TIMESTAMP PUSH2 0x316 JUMP JUMPDEST PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x2EA DUP3 PUSH2 0x2E4 PUSH2 0x2EE JUMP JUMPDEST DUP4 PUSH2 0x4D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD PUSH2 0x324 DUP5 PUSH2 0x3C5 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST DUP4 PUSH2 0x558 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x553 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4F1 SWAP3 SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x5F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x562 PUSH2 0x40E JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x584 PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x58C PUSH2 0x40E JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x5AF JUMPI DUP3 SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x40E JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0xC86 JUMP JUMPDEST DUP5 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x6B4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AA SWAP1 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6C8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP1 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71F DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7D9 DUP3 DUP3 DUP7 PUSH2 0x808 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x818 JUMPI DUP3 SWAP1 POP PUSH2 0x868 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x82B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87E DUP2 PUSH2 0xE84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x893 DUP2 PUSH2 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A8 DUP2 PUSH2 0xEB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BD DUP2 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8D8 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E7 DUP5 DUP3 DUP6 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x915 DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x926 DUP6 DUP3 DUP7 ADD PUSH2 0x8AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x946 JUMPI PUSH2 0x945 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x954 DUP5 DUP3 DUP6 ADD PUSH2 0x884 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x973 JUMPI PUSH2 0x972 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x981 DUP5 DUP3 DUP6 ADD PUSH2 0x899 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x993 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A4 DUP3 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x9AE DUP2 DUP6 PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP PUSH2 0x9BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D5 DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0x9DF DUP2 DUP6 PUSH2 0xB94 JUMP JUMPDEST SWAP4 POP PUSH2 0x9EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x9F8 DUP2 PUSH2 0xDAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA10 PUSH1 0x26 DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP PUSH2 0xA1B DUP3 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH1 0x1D DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3E DUP3 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 PUSH1 0x2A DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP3 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA75 DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA87 DUP3 DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x98A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAC2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x98A JUMP JUMPDEST PUSH2 0xACF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAF0 DUP2 DUP5 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB11 DUP2 PUSH2 0xA03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB31 DUP2 PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB51 DUP2 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB0 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xBBB DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBEF PUSH2 0xD49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC11 DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC37 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0xD49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9C DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xCAF JUMPI PUSH2 0xCAE PUSH2 0xD49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC5 DUP3 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD19 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD43 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE8D DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP2 EQ PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0xCCC JUMP JUMPDEST DUP2 EQ PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xED2 DUP2 PUSH2 0xD02 JUMP JUMPDEST DUP2 EQ PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F DUP9 DIV EQ 0xCB 0x2F 0xCB 0xC 0xDF SWAP14 PC SWAP1 0xE0 0xC7 0x5E 0xC3 DUP16 GT ADD 0x4A 0xB6 0x49 NUMBER CODECOPY SELFDESTRUCT 0x5E JUMP 0x4E PUSH16 0x48DBD764736F6C634300080700330000 ",
							"sourceMap": "832:3964:3:-:0;;;1299:334;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:1;1434:32;;:18;:32;;;;1426:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1538:18;1523:33;;;;;;;;;;;;1575:14;1566:23;;;;;;;;;;;;1611:15;1599:27;;;;;;;;;;;;1299:334;;;832:3964;;7:143:6;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:141::-;212:5;243:6;237:13;228:22;;259:32;285:5;259:32;:::i;:::-;156:141;;;;:::o;303:659::-;389:6;397;405;454:2;442:9;433:7;429:23;425:32;422:119;;;460:79;;:::i;:::-;422:119;580:1;605:64;661:7;652:6;641:9;637:22;605:64;:::i;:::-;595:74;;551:128;718:2;744:63;799:7;790:6;779:9;775:22;744:63;:::i;:::-;734:73;;689:128;856:2;882:63;937:7;928:6;917:9;913:22;882:63;:::i;:::-;872:73;;827:128;303:659;;;;;:::o;968:366::-;1110:3;1131:67;1195:2;1190:3;1131:67;:::i;:::-;1124:74;;1207:93;1296:3;1207:93;:::i;:::-;1325:2;1320:3;1316:12;1309:19;;968:366;;;:::o;1340:419::-;1506:4;1544:2;1533:9;1529:18;1521:26;;1593:9;1587:4;1583:20;1579:1;1568:9;1564:17;1557:47;1621:131;1747:4;1621:131;:::i;:::-;1613:139;;1340:419;;;:::o;1846:169::-;1930:11;1964:6;1959:3;1952:19;2004:4;1999:3;1995:14;1980:29;;1846:169;;;;:::o;2021:96::-;2058:7;2087:24;2105:5;2087:24;:::i;:::-;2076:35;;2021:96;;;:::o;2123:126::-;2160:7;2200:42;2193:5;2189:54;2178:65;;2123:126;;;:::o;2255:101::-;2291:7;2331:18;2324:5;2320:30;2309:41;;2255:101;;;:::o;2485:117::-;2594:1;2591;2584:12;2608:229;2748:34;2744:1;2736:6;2732:14;2725:58;2817:12;2812:2;2804:6;2800:15;2793:37;2608:229;:::o;2843:122::-;2916:24;2934:5;2916:24;:::i;:::-;2909:5;2906:35;2896:63;;2955:1;2952;2945:12;2896:63;2843:122;:::o;2971:120::-;3043:23;3060:5;3043:23;:::i;:::-;3036:5;3033:34;3023:62;;3081:1;3078;3071:12;3023:62;2971:120;:::o;832:3964:3:-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_471": {
									"entryPoint": null,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1045": {
									"entryPoint": 1522,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_vestingSchedule_693": {
									"entryPoint": 1368,
									"id": 693,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@beneficiary_480": {
									"entryPoint": 750,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@duration_498": {
									"entryPoint": 481,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_158": {
									"entryPoint": 1745,
									"id": 158,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_88": {
									"entryPoint": 1721,
									"id": 88,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getBalance_712": {
									"entryPoint": 1088,
									"id": 712,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_17": {
									"entryPoint": 2021,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_601": {
									"entryPoint": 531,
									"id": 601,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_520": {
									"entryPoint": 965,
									"id": 520,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransfer_853": {
									"entryPoint": 1234,
									"id": 853,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@start_489": {
									"entryPoint": 1038,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResult_293": {
									"entryPoint": 2056,
									"id": 293,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vestedAmount_650": {
									"entryPoint": 790,
									"id": 650,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 2222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 3330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11268:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "358:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "368:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "383:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "377:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "368:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "399:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "336:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "344:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "352:5:6",
														"type": ""
													}
												],
												"src": "295:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:86:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "514:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "505:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "569:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "543:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "543:32:6"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "481:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "489:5:6",
														"type": ""
													}
												],
												"src": "444:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "653:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "699:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "701:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "701:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "701:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "674:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "683:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "670:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "670:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "695:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "666:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:32:6"
															},
															"nodeType": "YulIf",
															"src": "663:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "792:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "807:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "821:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "811:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "836:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "871:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "882:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "867:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "867:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "891:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "846:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "846:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "836:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "623:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "634:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "646:6:6",
														"type": ""
													}
												],
												"src": "587:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:390:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1050:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1052:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1052:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1052:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1025:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1034:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:32:6"
															},
															"nodeType": "YulIf",
															"src": "1014:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1143:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1158:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1162:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1187:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1222:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1233:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1218:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1242:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1197:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1197:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1187:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1270:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1285:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1299:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1289:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1315:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1349:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1360:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1345:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1345:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1369:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "1325:19:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1315:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "966:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "977:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "989:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "997:6:6",
														"type": ""
													}
												],
												"src": "922:472:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1520:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1522:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1522:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1522:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1495:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1491:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1491:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1516:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:32:6"
															},
															"nodeType": "YulIf",
															"src": "1484:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1613:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1628:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1632:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1657:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1700:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1711:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1696:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1696:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1720:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1667:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1667:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1657:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1444:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1455:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1467:6:6",
														"type": ""
													}
												],
												"src": "1400:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1828:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1874:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1876:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1876:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1876:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1849:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1845:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1845:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1870:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:32:6"
															},
															"nodeType": "YulIf",
															"src": "1838:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1967:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1982:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1986:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2011:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2057:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2053:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2053:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2077:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2021:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2011:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1798:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1809:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1821:6:6",
														"type": ""
													}
												],
												"src": "1751:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2173:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2213:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2195:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2161:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2168:3:6",
														"type": ""
													}
												],
												"src": "2108:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2340:265:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2350:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2364:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2364:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2354:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2411:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2499:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2418:75:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2541:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2548:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2537:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2537:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2555:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2560:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2515:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2515:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2576:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2587:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2592:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2583:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2321:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2328:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2336:3:6",
														"type": ""
													}
												],
												"src": "2232:373:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:272:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2713:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2760:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2727:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2717:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2775:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2841:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2846:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2782:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2775:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2888:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2895:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2902:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2907:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2862:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2862:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2862:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2923:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2934:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2961:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2939:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2939:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2930:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2923:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2684:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2691:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2699:3:6",
														"type": ""
													}
												],
												"src": "2611:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3137:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3203:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3208:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3144:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3137:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3309:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "3220:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3220:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3322:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3333:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3338:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3329:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3329:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3115:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3123:3:6",
														"type": ""
													}
												],
												"src": "2981:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3499:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3509:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3575:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3516:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3681:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "3592:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3592:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3694:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3705:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3701:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3487:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3495:3:6",
														"type": ""
													}
												],
												"src": "3353:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3871:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3881:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3947:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3952:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3888:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3881:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4053:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "3964:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4066:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4077:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4082:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4066:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3859:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3867:3:6",
														"type": ""
													}
												],
												"src": "3725:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4162:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4179:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4202:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4184:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4184:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4172:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4150:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4157:3:6",
														"type": ""
													}
												],
												"src": "4097:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4355:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4366:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4453:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4462:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4373:79:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4476:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4483:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4476:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4334:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4340:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:6",
														"type": ""
													}
												],
												"src": "4221:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4596:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4606:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4618:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4614:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4606:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4686:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4699:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4710:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4695:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4695:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4642:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4642:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4580:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4591:4:6",
														"type": ""
													}
												],
												"src": "4498:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4852:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4862:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4874:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4885:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4870:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4862:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4942:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4955:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4966:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4951:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4898:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4898:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5023:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5036:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5047:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5032:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5032:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4979:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4979:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4816:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4828:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4836:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4847:4:6",
														"type": ""
													}
												],
												"src": "4726:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5182:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5192:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5204:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5215:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5200:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5192:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5239:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5250:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5235:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5258:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5264:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5228:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5228:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5228:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5284:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5356:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5365:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5292:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5284:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5154:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5166:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5177:4:6",
														"type": ""
													}
												],
												"src": "5064:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5554:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5564:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5576:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5587:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5572:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5564:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5622:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5607:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5607:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5630:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5626:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5600:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5656:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5790:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5664:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5656:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5534:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5549:4:6",
														"type": ""
													}
												],
												"src": "5383:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5979:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5989:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6001:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5997:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5989:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6047:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6032:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6055:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6051:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6051:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6025:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6025:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6025:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6081:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6215:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6089:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6081:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5959:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5974:4:6",
														"type": ""
													}
												],
												"src": "5808:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6404:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6414:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6426:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6437:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6422:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6414:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6461:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6472:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6457:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6457:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6480:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6486:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6476:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6476:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6450:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6450:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6450:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6506:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6640:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6514:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6506:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6384:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6399:4:6",
														"type": ""
													}
												],
												"src": "6233:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6756:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6766:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6778:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6774:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6766:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6846:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6859:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6870:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6855:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6855:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6802:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6802:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6802:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6728:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6740:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6751:4:6",
														"type": ""
													}
												],
												"src": "6658:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6926:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6936:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6952:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6946:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6946:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6936:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6919:6:6",
														"type": ""
													}
												],
												"src": "6886:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7025:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7036:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7052:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7046:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7046:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7008:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7018:6:6",
														"type": ""
													}
												],
												"src": "6967:98:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7130:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7141:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7157:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7151:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7113:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7123:6:6",
														"type": ""
													}
												],
												"src": "7071:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7289:34:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7299:18:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7314:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7299:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7261:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7266:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7277:11:6",
														"type": ""
													}
												],
												"src": "7176:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7425:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7442:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7447:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7435:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7463:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7482:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7487:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7478:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7463:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7397:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7402:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7413:11:6",
														"type": ""
													}
												],
												"src": "7329:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7548:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7558:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7581:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7563:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7563:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7558:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7592:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7615:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7597:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7592:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7755:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7757:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7757:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7757:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7676:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7683:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7751:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7679:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7679:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7673:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7673:81:6"
															},
															"nodeType": "YulIf",
															"src": "7670:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7787:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7798:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7801:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7794:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7787:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7535:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7538:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7544:3:6",
														"type": ""
													}
												],
												"src": "7504:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7867:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7890:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7872:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7872:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7867:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7901:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7924:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7906:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7906:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7901:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7948:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7950:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7950:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7950:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7945:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:9:6"
															},
															"nodeType": "YulIf",
															"src": "7935:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7980:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7985:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7980:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7846:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7849:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7855:1:6",
														"type": ""
													}
												],
												"src": "7815:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8054:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8064:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8087:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8069:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8069:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8064:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8098:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8121:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8103:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8103:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8098:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8296:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8298:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8298:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8298:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8208:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8201:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8201:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8194:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8194:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8216:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8223:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8291:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8219:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8219:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8213:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8213:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8190:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8190:105:6"
															},
															"nodeType": "YulIf",
															"src": "8187:131:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8328:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8343:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8346:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8339:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8339:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8328:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8037:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8040:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8046:7:6",
														"type": ""
													}
												],
												"src": "8006:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8405:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8415:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8438:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8420:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8415:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8449:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8472:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8454:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8454:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8449:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8496:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8498:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8498:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8498:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8490:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8493:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8487:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8487:8:6"
															},
															"nodeType": "YulIf",
															"src": "8484:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8528:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8540:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8543:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8536:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8536:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8528:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8391:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8394:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8400:4:6",
														"type": ""
													}
												],
												"src": "8360:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8602:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8612:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8641:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8623:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8623:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8612:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8584:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8594:7:6",
														"type": ""
													}
												],
												"src": "8557:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8701:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8711:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8736:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8729:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8729:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8722:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8711:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8683:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8693:7:6",
														"type": ""
													}
												],
												"src": "8659:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8800:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8810:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8825:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8832:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8810:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8782:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8792:7:6",
														"type": ""
													}
												],
												"src": "8755:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8932:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8942:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8953:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8942:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8914:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8924:7:6",
														"type": ""
													}
												],
												"src": "8887:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9014:57:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9024:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9039:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9046:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9035:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9035:30:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9024:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8996:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9006:7:6",
														"type": ""
													}
												],
												"src": "8970:101:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9126:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9136:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9145:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9140:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9205:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9230:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9235:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9226:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9226:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9249:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9254:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9245:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9245:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9239:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9239:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9219:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9219:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9219:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9166:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9169:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9163:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9163:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9177:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9179:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9188:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9191:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9184:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9184:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9179:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9159:3:6",
																"statements": []
															},
															"src": "9155:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9302:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9352:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9357:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9348:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9348:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9366:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9341:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9341:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9341:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9283:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9286:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9280:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9280:13:6"
															},
															"nodeType": "YulIf",
															"src": "9277:101:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9108:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9113:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9118:6:6",
														"type": ""
													}
												],
												"src": "9077:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9418:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9435:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9438:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9428:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9428:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9428:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9532:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9535:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9559:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9549:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9549:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9549:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9390:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9604:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9621:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9624:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9614:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9614:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9614:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9718:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9721:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9711:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9711:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9711:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9742:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9745:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9735:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9735:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9735:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9576:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9851:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9868:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9871:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9861:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9861:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9861:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9762:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9974:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9991:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9994:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9984:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9984:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9984:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9885:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10056:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10066:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10084:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10091:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10080:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10080:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10100:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10096:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10096:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10076:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10039:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10049:6:6",
														"type": ""
													}
												],
												"src": "10008:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10222:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10244:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10252:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10240:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10240:14:6"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10256:34:6",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10233:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10233:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10312:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10320:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10308:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10308:15:6"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10325:8:6",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10301:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10301:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10301:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10214:6:6",
														"type": ""
													}
												],
												"src": "10116:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10453:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10475:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10483:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10471:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10471:14:6"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10487:31:6",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10464:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10464:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10464:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10445:6:6",
														"type": ""
													}
												],
												"src": "10347:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10638:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10660:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10668:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10656:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10656:14:6"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10672:34:6",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10728:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10736:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10724:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10724:15:6"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10741:12:6",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10717:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10717:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10717:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10630:6:6",
														"type": ""
													}
												],
												"src": "10532:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10867:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10876:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10879:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10869:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10869:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10869:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10833:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10858:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10840:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10840:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10830:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10830:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10823:43:6"
															},
															"nodeType": "YulIf",
															"src": "10820:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10803:5:6",
														"type": ""
													}
												],
												"src": "10767:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10935:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10989:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10998:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11001:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10991:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10991:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10991:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10958:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10980:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10965:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10965:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10955:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10955:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10948:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10948:40:6"
															},
															"nodeType": "YulIf",
															"src": "10945:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10928:5:6",
														"type": ""
													}
												],
												"src": "10895:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11060:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11117:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11126:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11129:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11119:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11119:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11119:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11083:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11108:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11090:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11090:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11080:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11080:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11073:43:6"
															},
															"nodeType": "YulIf",
															"src": "11070:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11053:5:6",
														"type": ""
													}
												],
												"src": "11017:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11187:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11243:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11252:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11255:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11245:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11245:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11245:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11210:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11234:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "11217:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11217:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11207:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11207:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:42:6"
															},
															"nodeType": "YulIf",
															"src": "11197:62:6"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11180:5:6",
														"type": ""
													}
												],
												"src": "11145:120:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"429": [
									{
										"length": 32,
										"start": 754
									}
								],
								"431": [
									{
										"length": 32,
										"start": 1042
									}
								],
								"433": [
									{
										"length": 32,
										"start": 485
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100745760003560e01c8063810ec23b1161004e578063810ec23b146100ff5780639852595c1461013c578063be9a655514610179578063f8b2cb4f146101a45761007b565b80630fb5a6b41461008057806319165587146100ab57806338af3eed146100d45761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100956101e1565b6040516100a29190610b58565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906108c3565b610213565b005b3480156100e057600080fd5b506100e96102ee565b6040516100f69190610a92565b60405180910390f35b34801561010b57600080fd5b50610126600480360381019061012191906108f0565b610316565b6040516101339190610b58565b60405180910390f35b34801561014857600080fd5b50610163600480360381019061015e91906108c3565b6103c5565b6040516101709190610b58565b60405180910390f35b34801561018557600080fd5b5061018e61040e565b60405161019b9190610b58565b60405180910390f35b3480156101b057600080fd5b506101cb60048036038101906101c691906108c3565b610440565b6040516101d89190610b58565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061021e826103c5565b6102288342610316565b6102329190610c86565b905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102839190610ba5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516102d09190610b58565b60405180910390a26102ea826102e46102ee565b836104d2565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006103bd610324846103c5565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161035d9190610a92565b60206040518083038186803b15801561037557600080fd5b505afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad919061095d565b6103b79190610ba5565b83610558565b905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161047b9190610a92565b60206040518083038186803b15801561049357600080fd5b505afa1580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cb919061095d565b9050919050565b6105538363a9059cbb60e01b84846040516024016104f1929190610aad565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105f2565b505050565b600061056261040e565b8267ffffffffffffffff16101561057c57600090506105ec565b6105846101e1565b61058c61040e565b6105969190610ba5565b8267ffffffffffffffff1611156105af578290506105ec565b6105b76101e1565b6105bf61040e565b8367ffffffffffffffff166105d49190610c86565b846105df9190610c2c565b6105e99190610bfb565b90505b92915050565b6000610654826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106b99092919063ffffffff16565b90506000815111156106b457808060200190518101906106749190610930565b6106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa90610b38565b60405180910390fd5b5b505050565b60606106c884846000856106d1565b90509392505050565b606082471015610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90610af8565b60405180910390fd5b61071f856107e5565b61075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590610b18565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516107879190610a7b565b60006040518083038185875af1925050503d80600081146107c4576040519150601f19603f3d011682016040523d82523d6000602084013e6107c9565b606091505b50915091506107d9828286610808565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561081857829050610868565b60008351111561082b5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f9190610ad6565b60405180910390fd5b9392505050565b60008135905061087e81610e84565b92915050565b60008151905061089381610e9b565b92915050565b6000815190506108a881610eb2565b92915050565b6000813590506108bd81610ec9565b92915050565b6000602082840312156108d9576108d8610da7565b5b60006108e78482850161086f565b91505092915050565b6000806040838503121561090757610906610da7565b5b60006109158582860161086f565b9250506020610926858286016108ae565b9150509250929050565b60006020828403121561094657610945610da7565b5b600061095484828501610884565b91505092915050565b60006020828403121561097357610972610da7565b5b600061098184828501610899565b91505092915050565b61099381610cba565b82525050565b60006109a482610b73565b6109ae8185610b89565b93506109be818560208601610d16565b80840191505092915050565b60006109d582610b7e565b6109df8185610b94565b93506109ef818560208601610d16565b6109f881610dac565b840191505092915050565b6000610a10602683610b94565b9150610a1b82610dbd565b604082019050919050565b6000610a33601d83610b94565b9150610a3e82610e0c565b602082019050919050565b6000610a56602a83610b94565b9150610a6182610e35565b604082019050919050565b610a7581610cf8565b82525050565b6000610a878284610999565b915081905092915050565b6000602082019050610aa7600083018461098a565b92915050565b6000604082019050610ac2600083018561098a565b610acf6020830184610a6c565b9392505050565b60006020820190508181036000830152610af081846109ca565b905092915050565b60006020820190508181036000830152610b1181610a03565b9050919050565b60006020820190508181036000830152610b3181610a26565b9050919050565b60006020820190508181036000830152610b5181610a49565b9050919050565b6000602082019050610b6d6000830184610a6c565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610bb082610cf8565b9150610bbb83610cf8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bf057610bef610d49565b5b828201905092915050565b6000610c0682610cf8565b9150610c1183610cf8565b925082610c2157610c20610d78565b5b828204905092915050565b6000610c3782610cf8565b9150610c4283610cf8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7b57610c7a610d49565b5b828202905092915050565b6000610c9182610cf8565b9150610c9c83610cf8565b925082821015610caf57610cae610d49565b5b828203905092915050565b6000610cc582610cd8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60005b83811015610d34578082015181840152602081019050610d19565b83811115610d43576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b610e8d81610cba565b8114610e9857600080fd5b50565b610ea481610ccc565b8114610eaf57600080fd5b50565b610ebb81610cf8565b8114610ec657600080fd5b50565b610ed281610d02565b8114610edd57600080fd5b5056fea26469706673582212204f880414cb2fcb0cdf9d5890e0c75ec38f11014ab6494339ff5e564e6f48dbd764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x810EC23B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x1A4 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xD4 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E DUP3 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x228 DUP4 TIMESTAMP PUSH2 0x316 JUMP JUMPDEST PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x2EA DUP3 PUSH2 0x2E4 PUSH2 0x2EE JUMP JUMPDEST DUP4 PUSH2 0x4D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD PUSH2 0x324 DUP5 PUSH2 0x3C5 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST DUP4 PUSH2 0x558 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x553 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4F1 SWAP3 SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x5F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x562 PUSH2 0x40E JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x584 PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x58C PUSH2 0x40E JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x5AF JUMPI DUP3 SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x40E JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0xC86 JUMP JUMPDEST DUP5 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x6B4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AA SWAP1 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6C8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP1 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71F DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7D9 DUP3 DUP3 DUP7 PUSH2 0x808 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x818 JUMPI DUP3 SWAP1 POP PUSH2 0x868 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x82B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87E DUP2 PUSH2 0xE84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x893 DUP2 PUSH2 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A8 DUP2 PUSH2 0xEB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BD DUP2 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8D8 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E7 DUP5 DUP3 DUP6 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x915 DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x926 DUP6 DUP3 DUP7 ADD PUSH2 0x8AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x946 JUMPI PUSH2 0x945 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x954 DUP5 DUP3 DUP6 ADD PUSH2 0x884 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x973 JUMPI PUSH2 0x972 PUSH2 0xDA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x981 DUP5 DUP3 DUP6 ADD PUSH2 0x899 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x993 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A4 DUP3 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x9AE DUP2 DUP6 PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP PUSH2 0x9BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D5 DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0x9DF DUP2 DUP6 PUSH2 0xB94 JUMP JUMPDEST SWAP4 POP PUSH2 0x9EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x9F8 DUP2 PUSH2 0xDAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA10 PUSH1 0x26 DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP PUSH2 0xA1B DUP3 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH1 0x1D DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3E DUP3 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 PUSH1 0x2A DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP3 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA75 DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA87 DUP3 DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x98A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAC2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x98A JUMP JUMPDEST PUSH2 0xACF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAF0 DUP2 DUP5 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB11 DUP2 PUSH2 0xA03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB31 DUP2 PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB51 DUP2 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB0 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xBBB DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBEF PUSH2 0xD49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC11 DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC37 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0xD49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP3 PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9C DUP4 PUSH2 0xCF8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xCAF JUMPI PUSH2 0xCAE PUSH2 0xD49 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC5 DUP3 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD19 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD43 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE8D DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP2 EQ PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0xCCC JUMP JUMPDEST DUP2 EQ PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xED2 DUP2 PUSH2 0xD02 JUMP JUMPDEST DUP2 EQ PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F DUP9 DIV EQ 0xCB 0x2F 0xCB 0xC 0xDF SWAP14 PC SWAP1 0xE0 0xC7 0x5E 0xC3 DUP16 GT ADD 0x4A 0xB6 0x49 NUMBER CODECOPY SELFDESTRUCT 0x5E JUMP 0x4E PUSH16 0x48DBD764736F6C634300080700330000 ",
							"sourceMap": "832:3964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3089:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1818:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3850:202;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2449:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4659:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2133:91;2182:7;2208:9;2201:16;;;;2133:91;:::o;3089:313::-;3146:18;3214:15;3223:5;3214:8;:15::i;:::-;3167:44;3180:5;3194:15;3167:12;:44::i;:::-;:62;;;;:::i;:::-;3146:83;;3264:10;3239:14;:21;3254:5;3239:21;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;3303:5;3289:32;;;3310:10;3289:32;;;;;;:::i;:::-;;;;;;;;3331:64;3361:5;3369:13;:11;:13::i;:::-;3384:10;3331:22;:64::i;:::-;3136:266;3089:313;:::o;1818:97::-;1870:7;1896:12;1889:19;;1818:97;:::o;3850:202::-;3934:7;3960:85;4018:15;4027:5;4018:8;:15::i;:::-;3984:5;3977:23;;;4009:4;3977:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;4035:9;3960:16;:85::i;:::-;3953:92;;3850:202;;;;:::o;2449:116::-;2511:7;2537:14;:21;2552:5;2537:21;;;;;;;;;;;;;;;;2530:28;;2449:116;;;:::o;1981:85::-;2027:7;2053:6;2046:13;;;;1981:85;:::o;4659:135::-;4723:7;4756:5;4749:23;;;4781:4;4749:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4742:45;;4659:135;;;:::o;687:205:5:-;799:86;819:5;849:23;;;874:2;878:5;826:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:86::i;:::-;687:205;;;:::o;4246:366:3:-;4346:7;4381;:5;:7::i;:::-;4369:9;:19;;;4365:241;;;4411:1;4404:8;;;;4365:241;4455:10;:8;:10::i;:::-;4445:7;:5;:7::i;:::-;:20;;;;:::i;:::-;4433:9;:32;;;4429:177;;;4488:15;4481:22;;;;4429:177;4585:10;:8;:10::i;:::-;4573:7;:5;:7::i;:::-;4561:9;:19;;;;;;:::i;:::-;4542:15;:39;;;;:::i;:::-;4541:54;;;;:::i;:::-;4534:61;;4246:366;;;;;:::o;3193:706:5:-;3612:23;3638:69;3666:4;3638:69;;;;;;;;;;;;;;;;;3646:5;3638:27;;;;:69;;;;;:::i;:::-;3612:95;;3741:1;3721:10;:17;:21;3717:176;;;3816:10;3805:30;;;;;;;;;;;;:::i;:::-;3797:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3717:176;3263:636;3193:706;;:::o;3846:223:0:-;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;:::-;4003:59;;3846:223;;;;;:::o;4933:499::-;5098:12;5155:5;5130:21;:30;;5122:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5221:18;5232:6;5221:10;:18::i;:::-;5213:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5285:12;5299:23;5326:6;:11;;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;;;;4933:499;;;;;;:::o;1160:320::-;1220:4;1472:1;1450:7;:19;;;:23;1443:30;;1160:320;;;:::o;7546:692::-;7692:12;7720:7;7716:516;;;7750:10;7743:17;;;;7716:516;7881:1;7861:10;:17;:21;7857:365;;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;;;;;;;;;;:::i;:::-;;;;;;;;7546:692;;;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:143::-;352:5;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;295:143;;;;:::o;444:137::-;489:5;527:6;514:20;505:29;;543:32;569:5;543:32;:::i;:::-;444:137;;;;:::o;587:329::-;646:6;695:2;683:9;674:7;670:23;666:32;663:119;;;701:79;;:::i;:::-;663:119;821:1;846:53;891:7;882:6;871:9;867:22;846:53;:::i;:::-;836:63;;792:117;587:329;;;;:::o;922:472::-;989:6;997;1046:2;1034:9;1025:7;1021:23;1017:32;1014:119;;;1052:79;;:::i;:::-;1014:119;1172:1;1197:53;1242:7;1233:6;1222:9;1218:22;1197:53;:::i;:::-;1187:63;;1143:117;1299:2;1325:52;1369:7;1360:6;1349:9;1345:22;1325:52;:::i;:::-;1315:62;;1270:117;922:472;;;;;:::o;1400:345::-;1467:6;1516:2;1504:9;1495:7;1491:23;1487:32;1484:119;;;1522:79;;:::i;:::-;1484:119;1642:1;1667:61;1720:7;1711:6;1700:9;1696:22;1667:61;:::i;:::-;1657:71;;1613:125;1400:345;;;;:::o;1751:351::-;1821:6;1870:2;1858:9;1849:7;1845:23;1841:32;1838:119;;;1876:79;;:::i;:::-;1838:119;1996:1;2021:64;2077:7;2068:6;2057:9;2053:22;2021:64;:::i;:::-;2011:74;;1967:128;1751:351;;;;:::o;2108:118::-;2195:24;2213:5;2195:24;:::i;:::-;2190:3;2183:37;2108:118;;:::o;2232:373::-;2336:3;2364:38;2396:5;2364:38;:::i;:::-;2418:88;2499:6;2494:3;2418:88;:::i;:::-;2411:95;;2515:52;2560:6;2555:3;2548:4;2541:5;2537:16;2515:52;:::i;:::-;2592:6;2587:3;2583:16;2576:23;;2340:265;2232:373;;;;:::o;2611:364::-;2699:3;2727:39;2760:5;2727:39;:::i;:::-;2782:71;2846:6;2841:3;2782:71;:::i;:::-;2775:78;;2862:52;2907:6;2902:3;2895:4;2888:5;2884:16;2862:52;:::i;:::-;2939:29;2961:6;2939:29;:::i;:::-;2934:3;2930:39;2923:46;;2703:272;2611:364;;;;:::o;2981:366::-;3123:3;3144:67;3208:2;3203:3;3144:67;:::i;:::-;3137:74;;3220:93;3309:3;3220:93;:::i;:::-;3338:2;3333:3;3329:12;3322:19;;2981:366;;;:::o;3353:::-;3495:3;3516:67;3580:2;3575:3;3516:67;:::i;:::-;3509:74;;3592:93;3681:3;3592:93;:::i;:::-;3710:2;3705:3;3701:12;3694:19;;3353:366;;;:::o;3725:::-;3867:3;3888:67;3952:2;3947:3;3888:67;:::i;:::-;3881:74;;3964:93;4053:3;3964:93;:::i;:::-;4082:2;4077:3;4073:12;4066:19;;3725:366;;;:::o;4097:118::-;4184:24;4202:5;4184:24;:::i;:::-;4179:3;4172:37;4097:118;;:::o;4221:271::-;4351:3;4373:93;4462:3;4453:6;4373:93;:::i;:::-;4366:100;;4483:3;4476:10;;4221:271;;;;:::o;4498:222::-;4591:4;4629:2;4618:9;4614:18;4606:26;;4642:71;4710:1;4699:9;4695:17;4686:6;4642:71;:::i;:::-;4498:222;;;;:::o;4726:332::-;4847:4;4885:2;4874:9;4870:18;4862:26;;4898:71;4966:1;4955:9;4951:17;4942:6;4898:71;:::i;:::-;4979:72;5047:2;5036:9;5032:18;5023:6;4979:72;:::i;:::-;4726:332;;;;;:::o;5064:313::-;5177:4;5215:2;5204:9;5200:18;5192:26;;5264:9;5258:4;5254:20;5250:1;5239:9;5235:17;5228:47;5292:78;5365:4;5356:6;5292:78;:::i;:::-;5284:86;;5064:313;;;;:::o;5383:419::-;5549:4;5587:2;5576:9;5572:18;5564:26;;5636:9;5630:4;5626:20;5622:1;5611:9;5607:17;5600:47;5664:131;5790:4;5664:131;:::i;:::-;5656:139;;5383:419;;;:::o;5808:::-;5974:4;6012:2;6001:9;5997:18;5989:26;;6061:9;6055:4;6051:20;6047:1;6036:9;6032:17;6025:47;6089:131;6215:4;6089:131;:::i;:::-;6081:139;;5808:419;;;:::o;6233:::-;6399:4;6437:2;6426:9;6422:18;6414:26;;6486:9;6480:4;6476:20;6472:1;6461:9;6457:17;6450:47;6514:131;6640:4;6514:131;:::i;:::-;6506:139;;6233:419;;;:::o;6658:222::-;6751:4;6789:2;6778:9;6774:18;6766:26;;6802:71;6870:1;6859:9;6855:17;6846:6;6802:71;:::i;:::-;6658:222;;;;:::o;6967:98::-;7018:6;7052:5;7046:12;7036:22;;6967:98;;;:::o;7071:99::-;7123:6;7157:5;7151:12;7141:22;;7071:99;;;:::o;7176:147::-;7277:11;7314:3;7299:18;;7176:147;;;;:::o;7329:169::-;7413:11;7447:6;7442:3;7435:19;7487:4;7482:3;7478:14;7463:29;;7329:169;;;;:::o;7504:305::-;7544:3;7563:20;7581:1;7563:20;:::i;:::-;7558:25;;7597:20;7615:1;7597:20;:::i;:::-;7592:25;;7751:1;7683:66;7679:74;7676:1;7673:81;7670:107;;;7757:18;;:::i;:::-;7670:107;7801:1;7798;7794:9;7787:16;;7504:305;;;;:::o;7815:185::-;7855:1;7872:20;7890:1;7872:20;:::i;:::-;7867:25;;7906:20;7924:1;7906:20;:::i;:::-;7901:25;;7945:1;7935:35;;7950:18;;:::i;:::-;7935:35;7992:1;7989;7985:9;7980:14;;7815:185;;;;:::o;8006:348::-;8046:7;8069:20;8087:1;8069:20;:::i;:::-;8064:25;;8103:20;8121:1;8103:20;:::i;:::-;8098:25;;8291:1;8223:66;8219:74;8216:1;8213:81;8208:1;8201:9;8194:17;8190:105;8187:131;;;8298:18;;:::i;:::-;8187:131;8346:1;8343;8339:9;8328:20;;8006:348;;;;:::o;8360:191::-;8400:4;8420:20;8438:1;8420:20;:::i;:::-;8415:25;;8454:20;8472:1;8454:20;:::i;:::-;8449:25;;8493:1;8490;8487:8;8484:34;;;8498:18;;:::i;:::-;8484:34;8543:1;8540;8536:9;8528:17;;8360:191;;;;:::o;8557:96::-;8594:7;8623:24;8641:5;8623:24;:::i;:::-;8612:35;;8557:96;;;:::o;8659:90::-;8693:7;8736:5;8729:13;8722:21;8711:32;;8659:90;;;:::o;8755:126::-;8792:7;8832:42;8825:5;8821:54;8810:65;;8755:126;;;:::o;8887:77::-;8924:7;8953:5;8942:16;;8887:77;;;:::o;8970:101::-;9006:7;9046:18;9039:5;9035:30;9024:41;;8970:101;;;:::o;9077:307::-;9145:1;9155:113;9169:6;9166:1;9163:13;9155:113;;;9254:1;9249:3;9245:11;9239:18;9235:1;9230:3;9226:11;9219:39;9191:2;9188:1;9184:10;9179:15;;9155:113;;;9286:6;9283:1;9280:13;9277:101;;;9366:1;9357:6;9352:3;9348:16;9341:27;9277:101;9126:258;9077:307;;;:::o;9390:180::-;9438:77;9435:1;9428:88;9535:4;9532:1;9525:15;9559:4;9556:1;9549:15;9576:180;9624:77;9621:1;9614:88;9721:4;9718:1;9711:15;9745:4;9742:1;9735:15;9885:117;9994:1;9991;9984:12;10008:102;10049:6;10100:2;10096:7;10091:2;10084:5;10080:14;10076:28;10066:38;;10008:102;;;:::o;10116:225::-;10256:34;10252:1;10244:6;10240:14;10233:58;10325:8;10320:2;10312:6;10308:15;10301:33;10116:225;:::o;10347:179::-;10487:31;10483:1;10475:6;10471:14;10464:55;10347:179;:::o;10532:229::-;10672:34;10668:1;10660:6;10656:14;10649:58;10741:12;10736:2;10728:6;10724:15;10717:37;10532:229;:::o;10767:122::-;10840:24;10858:5;10840:24;:::i;:::-;10833:5;10830:35;10820:63;;10879:1;10876;10869:12;10820:63;10767:122;:::o;10895:116::-;10965:21;10980:5;10965:21;:::i;:::-;10958:5;10955:32;10945:60;;11001:1;10998;10991:12;10945:60;10895:116;:::o;11017:122::-;11090:24;11108:5;11090:24;:::i;:::-;11083:5;11080:35;11070:63;;11129:1;11126;11119:12;11070:63;11017:122;:::o;11145:120::-;11217:23;11234:5;11217:23;:::i;:::-;11210:5;11207:34;11197:62;;11255:1;11252;11245:12;11197:62;11145:120;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "772400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "infinite",
								"duration()": "infinite",
								"getBalance(address)": "infinite",
								"release(address)": "infinite",
								"released(address)": "2863",
								"start()": "infinite",
								"vestedAmount(address,uint64)": "infinite"
							},
							"internal": {
								"_vestingSchedule(uint256,uint64)": "infinite",
								"release()": "infinite",
								"released()": "infinite",
								"vestedAmount(uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1464,
									"end": 1465,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1466,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1466,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1452,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1466,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1466,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1466,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1466,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1426,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1538,
									"end": 1556,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1575,
									"end": 1589,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1589,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1611,
									"end": 1626,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1599,
									"end": 1626,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 297,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 156,
									"end": 297,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 212,
									"end": 217,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 237,
									"end": 250,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 228,
									"end": 250,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 228,
									"end": 250,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 259,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 285,
									"end": 290,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 259,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 291,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 259,
									"end": 291,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 259,
									"end": 291,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 156,
									"end": 297,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 156,
									"end": 297,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 156,
									"end": 297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 156,
									"end": 297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 156,
									"end": 297,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 303,
									"end": 962,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 303,
									"end": 962,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 389,
									"end": 395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 403,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 405,
									"end": 411,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 456,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 442,
									"end": 451,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 433,
									"end": 440,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 429,
									"end": 452,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 425,
									"end": 457,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 422,
									"end": 541,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 422,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 422,
									"end": 541,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 460,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 460,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 460,
									"end": 539,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 460,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 422,
									"end": 541,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 422,
									"end": 541,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 580,
									"end": 581,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 605,
									"end": 669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 661,
									"end": 668,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 652,
									"end": 658,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 641,
									"end": 650,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 637,
									"end": 659,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 605,
									"end": 669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 605,
									"end": 669,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 605,
									"end": 669,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 605,
									"end": 669,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 595,
									"end": 669,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 595,
									"end": 669,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 551,
									"end": 679,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 718,
									"end": 720,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 744,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 790,
									"end": 796,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 779,
									"end": 788,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 775,
									"end": 797,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 744,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 744,
									"end": 807,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 744,
									"end": 807,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 744,
									"end": 807,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 734,
									"end": 807,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 734,
									"end": 807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 689,
									"end": 817,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 856,
									"end": 858,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 937,
									"end": 944,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 928,
									"end": 934,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 917,
									"end": 926,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 913,
									"end": 935,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 872,
									"end": 945,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 872,
									"end": 945,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 827,
									"end": 955,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 303,
									"end": 962,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 303,
									"end": 962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 303,
									"end": 962,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 303,
									"end": 962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 303,
									"end": 962,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 303,
									"end": 962,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 968,
									"end": 1334,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 968,
									"end": 1334,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1113,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1195,
									"end": 1197,
									"name": "PUSH",
									"source": 6,
									"value": "2A"
								},
								{
									"begin": 1190,
									"end": 1193,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1131,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1131,
									"end": 1198,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1131,
									"end": 1198,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1131,
									"end": 1198,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1198,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1198,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1296,
									"end": 1299,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1207,
									"end": 1300,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1207,
									"end": 1300,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1207,
									"end": 1300,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1325,
									"end": 1327,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1320,
									"end": 1323,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1328,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1328,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1328,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 968,
									"end": 1334,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 968,
									"end": 1334,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 968,
									"end": 1334,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 968,
									"end": 1334,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1340,
									"end": 1759,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1340,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1542,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1547,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1547,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1602,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1587,
									"end": 1591,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1568,
									"end": 1577,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1564,
									"end": 1581,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1557,
									"end": 1604,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1747,
									"end": 1751,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1621,
									"end": 1752,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1621,
									"end": 1752,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1621,
									"end": 1752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1613,
									"end": 1752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1613,
									"end": 1752,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1759,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1759,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1759,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1759,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1846,
									"end": 2015,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1846,
									"end": 2015,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1941,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1959,
									"end": 1962,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1952,
									"end": 1971,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2008,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1999,
									"end": 2002,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 2009,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 2009,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 2015,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 2015,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 2015,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 2015,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 2015,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2021,
									"end": 2117,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2021,
									"end": 2117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2065,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2087,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2105,
									"end": 2110,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2087,
									"end": 2111,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2087,
									"end": 2111,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2087,
									"end": 2111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2111,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2111,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2021,
									"end": 2117,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2021,
									"end": 2117,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2021,
									"end": 2117,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2021,
									"end": 2117,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2123,
									"end": 2249,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2123,
									"end": 2249,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2167,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2200,
									"end": 2242,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2193,
									"end": 2198,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2189,
									"end": 2243,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2178,
									"end": 2243,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2178,
									"end": 2243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2249,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2249,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2249,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2249,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2255,
									"end": 2356,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2255,
									"end": 2356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2291,
									"end": 2298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2324,
									"end": 2329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2320,
									"end": 2350,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2309,
									"end": 2350,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2309,
									"end": 2350,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2356,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2485,
									"end": 2602,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2485,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2594,
									"end": 2595,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2591,
									"end": 2592,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2584,
									"end": 2596,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2837,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2608,
									"end": 2837,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2782,
									"name": "PUSH",
									"source": 6,
									"value": "56657374696E6757616C6C65743A2062656E6566696369617279206973207A65"
								},
								{
									"begin": 2744,
									"end": 2745,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 2742,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2746,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 2783,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2829,
									"name": "PUSH",
									"source": 6,
									"value": "726F206164647265737300000000000000000000000000000000000000000000"
								},
								{
									"begin": 2812,
									"end": 2814,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2804,
									"end": 2810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2800,
									"end": 2815,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2793,
									"end": 2830,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2837,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2843,
									"end": 2965,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2843,
									"end": 2965,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2916,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2934,
									"end": 2939,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2916,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2916,
									"end": 2940,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2916,
									"end": 2940,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2916,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2909,
									"end": 2914,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2941,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2959,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2896,
									"end": 2959,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2955,
									"end": 2956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2952,
									"end": 2953,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2945,
									"end": 2957,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2959,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2896,
									"end": 2959,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2843,
									"end": 2965,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2843,
									"end": 2965,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2971,
									"end": 3091,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2971,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3043,
									"end": 3066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3060,
									"end": 3065,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3043,
									"end": 3066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3043,
									"end": 3066,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 3043,
									"end": 3066,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3043,
									"end": 3066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3041,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3067,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3023,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3023,
									"end": 3085,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3078,
									"end": 3079,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3083,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3023,
									"end": 3085,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3023,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3091,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3091,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "433"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "431"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "429"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 4796,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f880414cb2fcb0cdf9d5890e0c75ec38f11014ab6494339ff5e564e6f48dbd764736f6c63430008070033",
									".code": [
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "810EC23B"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "810EC23B"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "9852595C"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "BE9A6555"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "F8B2CB4F"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "FB5A6B4"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "19165587"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "38AF3EED"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 4796,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2224,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3214,
											"end": 3229,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3214,
											"end": 3229,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3214,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3180,
											"end": 3185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3209,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3167,
											"end": 3211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3167,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3167,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3167,
											"end": 3229,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3167,
											"end": 3229,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3167,
											"end": 3229,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3167,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3253,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3259,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 3310,
											"end": 3320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3361,
											"end": 3366,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3369,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3394,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3331,
											"end": 3395,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3331,
											"end": 3395,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3331,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3402,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1908,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1915,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3960,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4018,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4027,
											"end": 4032,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4018,
											"end": 4033,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4033,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4018,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3984,
											"end": 3989,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4000,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3977,
											"end": 4000,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4000,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3977,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3977,
											"end": 4033,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3977,
											"end": 4033,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 4033,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3977,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3960,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3960,
											"end": 4045,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3960,
											"end": 4045,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3960,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 4045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 4045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 4052,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2565,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2059,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 2046,
											"end": 2059,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2059,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2066,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4723,
											"end": 4730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4772,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4772,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 4781,
											"end": 4785,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4749,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4794,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 892,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 687,
											"end": 892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 687,
											"end": 892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 892,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4381,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4369,
											"end": 4378,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4369,
											"end": 4388,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4369,
											"end": 4388,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4369,
											"end": 4388,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4606,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4365,
											"end": 4606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4404,
											"end": 4412,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4606,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4365,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4455,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4445,
											"end": 4452,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4445,
											"end": 4452,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4445,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4442,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4465,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4433,
											"end": 4465,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4465,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4429,
											"end": 4606,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4429,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4429,
											"end": 4606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4481,
											"end": 4503,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4429,
											"end": 4606,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4429,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4585,
											"end": 4595,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4585,
											"end": 4595,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4585,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4542,
											"end": 4581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4542,
											"end": 4581,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4542,
											"end": 4581,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4542,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4541,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4541,
											"end": 4595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4541,
											"end": 4595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4541,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4541,
											"end": 4595,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4541,
											"end": 4595,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4541,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4534,
											"end": 4595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4534,
											"end": 4595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4612,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3193,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3193,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3651,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3638,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3742,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3893,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3717,
											"end": 3893,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3826,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3797,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3893,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3717,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3899,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3979,
											"end": 3991,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4032,
											"end": 4038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5221,
											"end": 5239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5239,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5221,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5326,
											"end": 5337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5350,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5391,
											"end": 5398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5412,
											"end": 5424,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1160,
											"end": 1480,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1160,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1473,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7704,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7720,
											"end": 7727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7881,
											"end": 7882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 7878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 7882,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 8222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7857,
											"end": 8222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8112,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8094,
											"end": 8113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 8222,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7857,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8194,
											"end": 8206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 352,
											"end": 357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 377,
											"end": 390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 368,
											"end": 390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 581,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 444,
											"end": 581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 514,
											"end": 534,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 505,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 543,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 569,
											"end": 574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 543,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 543,
											"end": 575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 543,
											"end": 575,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 543,
											"end": 575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 444,
											"end": 581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 444,
											"end": 581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 444,
											"end": 581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 444,
											"end": 581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 444,
											"end": 581,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 587,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 646,
											"end": 652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 697,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 674,
											"end": 681,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 666,
											"end": 698,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 663,
											"end": 782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 663,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 663,
											"end": 782,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 701,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 701,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 701,
											"end": 780,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 780,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 701,
											"end": 780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 663,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 663,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 821,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 871,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 867,
											"end": 889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 846,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 836,
											"end": 899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 836,
											"end": 899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 916,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 587,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 916,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1032,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1049,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1133,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1014,
											"end": 1133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1052,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1052,
											"end": 1131,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1131,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1052,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1133,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1014,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1242,
											"end": 1249,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1197,
											"end": 1250,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1197,
											"end": 1250,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1197,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1369,
											"end": 1376,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1358,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 922,
											"end": 1394,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1400,
											"end": 1745,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1400,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1502,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1514,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1519,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1484,
											"end": 1603,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1484,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1484,
											"end": 1603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1522,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1522,
											"end": 1601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1601,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1522,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1484,
											"end": 1603,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1484,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1720,
											"end": 1727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1709,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1667,
											"end": 1728,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1728,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1667,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1728,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1745,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1751,
											"end": 2102,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1751,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1872,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1873,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1876,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1838,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2021,
											"end": 2085,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2085,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2021,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 2095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2102,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2102,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2102,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2108,
											"end": 2226,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2108,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2226,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2232,
											"end": 2605,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2232,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2396,
											"end": 2401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2418,
											"end": 2506,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2506,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2418,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2506,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2558,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2552,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2546,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2515,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2590,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2605,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2611,
											"end": 2975,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2611,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2727,
											"end": 2766,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2727,
											"end": 2766,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2727,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2782,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2844,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2782,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2782,
											"end": 2853,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2782,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2782,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2853,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2893,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2939,
											"end": 2968,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 2968,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2939,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2703,
											"end": 2975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2975,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2975,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2981,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2981,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3208,
											"end": 3210,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3144,
											"end": 3211,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3144,
											"end": 3211,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3144,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3309,
											"end": 3312,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3220,
											"end": 3313,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3313,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3220,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3338,
											"end": 3340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3347,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 3575,
											"end": 3578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3681,
											"end": 3684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3725,
											"end": 4091,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3725,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3952,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3888,
											"end": 3955,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3888,
											"end": 3955,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3888,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3964,
											"end": 4057,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3964,
											"end": 4057,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3964,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 4091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 4091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 4091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 4091,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4097,
											"end": 4215,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4097,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4202,
											"end": 4207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4097,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4097,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4097,
											"end": 4215,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4221,
											"end": 4492,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4221,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4462,
											"end": 4465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4453,
											"end": 4459,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4492,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4492,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4492,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4498,
											"end": 4720,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4498,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4699,
											"end": 4708,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4695,
											"end": 4712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4692,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4642,
											"end": 4713,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4713,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4642,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4720,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4720,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4964,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4948,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4898,
											"end": 4969,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4898,
											"end": 4969,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4898,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5047,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5036,
											"end": 5045,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5029,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4979,
											"end": 5051,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5051,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4979,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 5058,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5064,
											"end": 5377,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5064,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5365,
											"end": 5369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5362,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5292,
											"end": 5370,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5292,
											"end": 5370,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5292,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5377,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5790,
											"end": 5794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5808,
											"end": 6227,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5808,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 5978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6012,
											"end": 6014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6001,
											"end": 6010,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5989,
											"end": 6015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5989,
											"end": 6015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6051,
											"end": 6071,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6215,
											"end": 6219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6089,
											"end": 6220,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6089,
											"end": 6220,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6089,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6081,
											"end": 6220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6081,
											"end": 6220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 6227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 6227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 6227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 6227,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6233,
											"end": 6652,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6233,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6399,
											"end": 6403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6457,
											"end": 6474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 6640,
											"end": 6644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6514,
											"end": 6645,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6514,
											"end": 6645,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 6514,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6652,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6658,
											"end": 6880,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 6658,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6751,
											"end": 6755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6778,
											"end": 6787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6802,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6852,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6802,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6802,
											"end": 6873,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6802,
											"end": 6873,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6802,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6880,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6880,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6967,
											"end": 7065,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6967,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7058,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7065,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7071,
											"end": 7170,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7071,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7163,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7170,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7176,
											"end": 7323,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7176,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7277,
											"end": 7288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7323,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7323,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7323,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7329,
											"end": 7498,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7329,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7413,
											"end": 7424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7491,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7498,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7498,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7504,
											"end": 7809,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7504,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7581,
											"end": 7582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7563,
											"end": 7583,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7563,
											"end": 7583,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7563,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7558,
											"end": 7583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7558,
											"end": 7583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7617,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7751,
											"end": 7752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7749,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7679,
											"end": 7753,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7676,
											"end": 7677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7673,
											"end": 7754,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7670,
											"end": 7777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7777,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7670,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7803,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7809,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7809,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7809,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7815,
											"end": 8000,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7815,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7890,
											"end": 7891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7872,
											"end": 7892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7892,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7872,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7926,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7993,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7985,
											"end": 7994,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7980,
											"end": 7994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7980,
											"end": 7994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8000,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8000,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8006,
											"end": 8354,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8006,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8121,
											"end": 8122,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8123,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8289,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8219,
											"end": 8293,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8294,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8209,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8194,
											"end": 8211,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8190,
											"end": 8295,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8318,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8187,
											"end": 8318,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8318,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8187,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8348,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8354,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8354,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8360,
											"end": 8551,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 8360,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8438,
											"end": 8439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8472,
											"end": 8473,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8454,
											"end": 8474,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8454,
											"end": 8474,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8454,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8495,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8528,
											"end": 8545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8528,
											"end": 8545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8551,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8551,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8557,
											"end": 8653,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8557,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8623,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8641,
											"end": 8646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8623,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8623,
											"end": 8647,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8623,
											"end": 8647,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8623,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8653,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8659,
											"end": 8749,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8659,
											"end": 8749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8693,
											"end": 8700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8736,
											"end": 8741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8729,
											"end": 8742,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8743,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8711,
											"end": 8743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8711,
											"end": 8743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 8749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 8749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 8749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 8749,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8755,
											"end": 8881,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8755,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8792,
											"end": 8799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8874,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8825,
											"end": 8830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8881,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8887,
											"end": 8964,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8887,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8964,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8970,
											"end": 9071,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8970,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9039,
											"end": 9044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9071,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9077,
											"end": 9384,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9077,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9145,
											"end": 9146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9169,
											"end": 9175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9166,
											"end": 9167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9176,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9252,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9245,
											"end": 9256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9233,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9226,
											"end": 9237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9191,
											"end": 9193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9189,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9179,
											"end": 9194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9179,
											"end": 9194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 9155,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9286,
											"end": 9292,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9280,
											"end": 9293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9378,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9277,
											"end": 9378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9363,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9355,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9348,
											"end": 9364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9341,
											"end": 9368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9378,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9277,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9126,
											"end": 9384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9077,
											"end": 9384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9077,
											"end": 9384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9077,
											"end": 9384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9077,
											"end": 9384,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9390,
											"end": 9570,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9390,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9438,
											"end": 9515,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9435,
											"end": 9436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9539,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9532,
											"end": 9533,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9525,
											"end": 9540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9559,
											"end": 9563,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9556,
											"end": 9557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9564,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9576,
											"end": 9756,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9576,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9624,
											"end": 9701,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9621,
											"end": 9622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9614,
											"end": 9702,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9721,
											"end": 9725,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9718,
											"end": 9719,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9711,
											"end": 9726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9745,
											"end": 9749,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9750,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 10002,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 9885,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 9995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9991,
											"end": 9992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 9996,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10110,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10008,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10100,
											"end": 10102,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10096,
											"end": 10103,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10093,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10084,
											"end": 10089,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10080,
											"end": 10094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10076,
											"end": 10104,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10066,
											"end": 10104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10066,
											"end": 10104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10110,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10116,
											"end": 10341,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10116,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10256,
											"end": 10290,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10325,
											"end": 10333,
											"name": "PUSH",
											"source": 6,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10312,
											"end": 10318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10308,
											"end": 10323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10301,
											"end": 10334,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10116,
											"end": 10341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10116,
											"end": 10341,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10347,
											"end": 10526,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10347,
											"end": 10526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10518,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 10483,
											"end": 10484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10464,
											"end": 10519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10347,
											"end": 10526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10347,
											"end": 10526,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10532,
											"end": 10761,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 10532,
											"end": 10761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10672,
											"end": 10706,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10668,
											"end": 10669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10656,
											"end": 10670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10707,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10741,
											"end": 10753,
											"name": "PUSH",
											"source": 6,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10736,
											"end": 10738,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10728,
											"end": 10734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10724,
											"end": 10739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10717,
											"end": 10754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10532,
											"end": 10761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10532,
											"end": 10761,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10767,
											"end": 10889,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 10767,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10858,
											"end": 10863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10865,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 10820,
											"end": 10883,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10877,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 10881,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10883,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 10820,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10767,
											"end": 10889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10767,
											"end": 10889,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10895,
											"end": 11011,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10895,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 10980,
											"end": 10985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 10965,
											"end": 10986,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10965,
											"end": 10986,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 10965,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10958,
											"end": 10963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10955,
											"end": 10987,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 10999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 11003,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 10945,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10895,
											"end": 11011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10895,
											"end": 11011,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11017,
											"end": 11139,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 11017,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 11108,
											"end": 11113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11083,
											"end": 11088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11115,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11070,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 11070,
											"end": 11133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11129,
											"end": 11130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11126,
											"end": 11127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11119,
											"end": 11131,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11070,
											"end": 11133,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 11070,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11139,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11145,
											"end": 11265,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 11145,
											"end": 11265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 11234,
											"end": 11239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 11217,
											"end": 11240,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11217,
											"end": 11240,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 11217,
											"end": 11240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11210,
											"end": 11215,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11241,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11197,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 11197,
											"end": 11259,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11245,
											"end": 11257,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11197,
											"end": 11259,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 11197,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11145,
											"end": 11265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11145,
											"end": 11265,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"duration()": "0fb5a6b4",
							"getBalance(address)": "f8b2cb4f",
							"release(address)": "19165587",
							"released(address)": "9852595c",
							"start()": "be9a6555",
							"vestedAmount(address,uint64)": "810ec23b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens can be given to this contract, which will release the token to the beneficiary following a given vesting schedule. The vesting schedule is customizable through the {vestedAmount} function. Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable.\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"details\":\"Getter for the beneficiary address.\"},\"constructor\":{\"details\":\"Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"getBalance(address)\":{\"details\":\"get balance.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {TokensReleased} event.\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"}},\"title\":\"VestingWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Lock-All-VIM-And-Vesting.sol\":\"VestingWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]},\"BEPContext.sol\":{\"keccak256\":\"0xdd500e39fddc002cdb153b0a608db9e093c2f60cf8f35a365fc15f61680c4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db3dc4b19c372752debddb8d44b84b0581e301da1f7ac9a0d44246a677263022\",\"dweb:/ipfs/QmZ5fvqabMXU6jbiLeN5GNJkzkhnzYuLv9gkLpHQnDcStA\"]},\"IERC20.sol\":{\"keccak256\":\"0x6ba702bf7bb3ff99b585fd812e6234a6896dc9151500eb9bb58716c14bcb69f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6b8cfe345248cdd9956c5085dfb7209387a129e6aa207a09056d9614d87ee49\",\"dweb:/ipfs/QmXPA8HVT2T449p3bmZYaPqEJgxHNNFXrz3zqFBfn9D7re\"]},\"Lock-All-VIM-And-Vesting.sol\":{\"keccak256\":\"0x734f8e3ccfb7300281150bdf36495202980bd8c08ef624218a0e0c7072f332c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1108f0acfd6c43f0cd409c6096de7af4aa70283285f928ea74bc45331be9ed\",\"dweb:/ipfs/Qmf5CTissxqGRxZoRDLLbU2za9PJEmSprUF8rNiLGDSWHv\"]},\"Math.sol\":{\"keccak256\":\"0x4bb63906281a52773fe565cb4105cce98a5667e8aa2d141705d6675a3b3af58d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eb115c19de9c07626b8179dd6dd92f4c4cd97f2d83d3ed9bcbe2a2b00ba14c5\",\"dweb:/ipfs/QmT2ipiePUu7E2g6Nn2YaJF8eA8rd2vd8GKmX1Pn49jSiv\"]},\"SafeERC20.sol\":{\"keccak256\":\"0x5c990c0247f4f1c283f6235de0b455f692b7e711ddbe50ce769220325cd73ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5df26f207e469aa16c66468a228a0eb5e3c0dc7e8a0c0998bca9d0d0a6c1b173\",\"dweb:/ipfs/QmdPJqkNFCp2P5phtuyDcLaPCj1LUbw2csGJD7N31CZ5Cp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 423,
								"contract": "Lock-All-VIM-And-Vesting.sol:VestingWallet",
								"label": "_released",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "Lock-All-VIM-And-Vesting.sol:VestingWallet",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Math.sol\":187:1513  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Math.sol\":187:1513  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e5fd706d69822f1fd2ed1207c88f0e55e00d8ff1b731546c05e1e0f9db149ad64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e5fd706d69822f1fd2ed1207c88f0e55e00d8ff1b731546c05e1e0f9db149ad64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x5F 0xD7 MOD 0xD6 SWAP9 0x22 CALL REVERT 0x2E 0xD1 KECCAK256 PUSH29 0x88F0E55E00D8FF1B731546C05E1E0F9DB149AD64736F6C634300080700 CALLER ",
							"sourceMap": "187:1326:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e5fd706d69822f1fd2ed1207c88f0e55e00d8ff1b731546c05e1e0f9db149ad64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x5F 0xD7 MOD 0xD6 SWAP9 0x22 CALL REVERT 0x2E 0xD1 KECCAK256 PUSH29 0x88F0E55E00D8FF1B731546C05E1E0F9DB149AD64736F6C634300080700 CALLER ",
							"sourceMap": "187:1326:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1513,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e5fd706d69822f1fd2ed1207c88f0e55e00d8ff1b731546c05e1e0f9db149ad64736f6c63430008070033",
									".code": [
										{
											"begin": 187,
											"end": 1513,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1513,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Math.sol\":{\"keccak256\":\"0x4bb63906281a52773fe565cb4105cce98a5667e8aa2d141705d6675a3b3af58d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eb115c19de9c07626b8179dd6dd92f4c4cd97f2d83d3ed9bcbe2a2b00ba14c5\",\"dweb:/ipfs/QmT2ipiePUu7E2g6Nn2YaJF8eA8rd2vd8GKmX1Pn49jSiv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeERC20.sol\":631:3901  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeERC20.sol\":631:3901  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a9c3243f861c565d9da32d8008e2ac5a8c83b4a59afb9ccbeb0387f028ad7f364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a9c3243f861c565d9da32d8008e2ac5a8c83b4a59afb9ccbeb0387f028ad7f364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A SWAP13 ORIGIN NUMBER 0xF8 PUSH2 0xC565 0xD9 0xDA ORIGIN 0xD8 STOP DUP15 0x2A 0xC5 0xA8 0xC8 EXTCODESIZE 0x4A MSIZE 0xAF 0xB9 0xCC 0xBE 0xB0 CODESIZE PUSH32 0x28AD7F364736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "631:3270:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a9c3243f861c565d9da32d8008e2ac5a8c83b4a59afb9ccbeb0387f028ad7f364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A SWAP13 ORIGIN NUMBER 0xF8 PUSH2 0xC565 0xD9 0xDA ORIGIN 0xD8 STOP DUP15 0x2A 0xC5 0xA8 0xC8 EXTCODESIZE 0x4A MSIZE 0xAF 0xB9 0xCC 0xBE 0xB0 CODESIZE PUSH32 0x28AD7F364736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "631:3270:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 3901,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a9c3243f861c565d9da32d8008e2ac5a8c83b4a59afb9ccbeb0387f028ad7f364736f6c63430008070033",
									".code": [
										{
											"begin": 631,
											"end": 3901,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 631,
											"end": 3901,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x87f3dea16eba5937fddc16654dbfc6855c27b8c2b62603e74566f228542ce1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7285a4af272b27ce5b5cfbb3bd3e81867300f6ce8784e7b1bed58f4c7f1a7af2\",\"dweb:/ipfs/QmY5LTxgtpVdh1YjN8FwVPpfEvrztWZ9GoQZrN3Hv3n31c\"]},\"IERC20.sol\":{\"keccak256\":\"0x6ba702bf7bb3ff99b585fd812e6234a6896dc9151500eb9bb58716c14bcb69f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6b8cfe345248cdd9956c5085dfb7209387a129e6aa207a09056d9614d87ee49\",\"dweb:/ipfs/QmXPA8HVT2T449p3bmZYaPqEJgxHNNFXrz3zqFBfn9D7re\"]},\"SafeERC20.sol\":{\"keccak256\":\"0x5c990c0247f4f1c283f6235de0b455f692b7e711ddbe50ce769220325cd73ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5df26f207e469aa16c66468a228a0eb5e3c0dc7e8a0c0998bca9d0d0a6c1b173\",\"dweb:/ipfs/QmdPJqkNFCp2P5phtuyDcLaPCj1LUbw2csGJD7N31CZ5Cp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1226:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1450:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1450:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1443:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1169:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1220:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:6:0"
									},
									"scope": 294,
									"src": "1160:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2468:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2494:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2486:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2486:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2486:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2511:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2478:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2568:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2563:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2581:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2581:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2581:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2624:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1486:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2406:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2432:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2416:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:0"
									},
									"scope": 294,
									"src": "2397:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3540:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3550:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2715:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3460:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3489:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:14:0"
									},
									"scope": 294,
									"src": "3451:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3993:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4049:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4010:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4003:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3630:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3855:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3885:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3877:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3901:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3942:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3928:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3979:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:14:0"
									},
									"scope": 294,
									"src": "3846:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4574:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4591:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4584:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4075:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4440:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4560:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:14:0"
									},
									"scope": 294,
									"src": "4431:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5112:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5138:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5130:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5130:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5130:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5155:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5130:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5122:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5232:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5221:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5213:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5290:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5285:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5312:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5299:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5326:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5326:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5345:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5326:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5400:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5412:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5374:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5367:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4691:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4981:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4997:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5047:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5098:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5097:14:0"
									},
									"scope": 294,
									"src": "4933:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5709:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5745:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5726:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5719:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5438:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5618:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5666:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5653:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5695:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:14:0"
									},
									"scope": 294,
									"src": "5609:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6148:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6186:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6158:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6242:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6237:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6264:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6251:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6251:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6278:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6236:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6318:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6318:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6311:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5812:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5999:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6027:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6064:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6051:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6051:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6092:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6078:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6017:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6134:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:14:0"
									},
									"scope": 294,
									"src": "5990:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6652:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6704:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6669:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6662:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6382:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6564:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6601:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6638:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6637:14:0"
									},
									"scope": 294,
									"src": "6555:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7094:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7112:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7132:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7104:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7190:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7185:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7212:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7199:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7226:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7268:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7261:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6759:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7002:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7002:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7029:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7080:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:14:0"
									},
									"scope": 294,
									"src": "6939:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7706:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7777:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7861:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7861:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7861:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8169:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8194:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8187:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8187:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8187:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7857:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7884:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8004:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8026:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8055:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8049:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8049:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8030:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8098:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8102:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8094:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8094:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8115:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8087:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8087:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8087:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8055:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8102:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "7995:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7716:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7729:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7750:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7743:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7332:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7555:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7616:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7603:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7650:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7636:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7691:14:0"
									},
									"scope": 294,
									"src": "7546:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "179:8061:0",
							"usedErrors": []
						}
					],
					"src": "86:8154:0"
				},
				"id": 0
			},
			"BEPContext.sol": {
				"ast": {
					"absolutePath": "BEPContext.sol",
					"exportedSymbols": {
						"BEPContext": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "BEPContext",
							"nameLocation": "575:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "754:2:1",
										"statements": []
									},
									"id": 300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:2:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 324,
									"src": "740:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "822:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "843:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 304,
												"id": 310,
												"nodeType": "Return",
												"src": "828:26:1"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "769:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:17:1"
									},
									"scope": 324,
									"src": "760:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "920:36:1",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "926:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_BEPContext_$324",
														"typeString": "contract BEPContext"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "926:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 319,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "943:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "943:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 316,
												"id": 321,
												"nodeType": "Return",
												"src": "936:15:1"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "872:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "906:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:14:1"
									},
									"scope": 324,
									"src": "863:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 325,
							"src": "557:401:1",
							"usedErrors": []
						}
					],
					"src": "32:926:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							402
						]
					},
					"id": 403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 327,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 402,
							"linearizedBaseContracts": [
								402
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:2"
									},
									"scope": 402,
									"src": "281:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:2"
									},
									"scope": 402,
									"src": "419:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "725:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "744:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 402,
									"src": "707:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:2"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:2"
									},
									"scope": 402,
									"src": "1059:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1812:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1829:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:2"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:2"
									},
									"scope": 402,
									"src": "1795:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2231:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:2"
									},
									"scope": 402,
									"src": "2176:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 392,
									"name": "Transfer",
									"nameLocation": "2478:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2487:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2509:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:2"
									},
									"src": "2472:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 401,
									"name": "Approval",
									"nameLocation": "2709:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2718:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2741:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:2"
									},
									"src": "2703:78:2"
								}
							],
							"scope": 403,
							"src": "187:2596:2",
							"usedErrors": []
						}
					],
					"src": "91:2692:2"
				},
				"id": 2
			},
			"Lock-All-VIM-And-Vesting.sol": {
				"ast": {
					"absolutePath": "Lock-All-VIM-And-Vesting.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"BEPContext": [
							324
						],
						"IERC20": [
							402
						],
						"Math": [
							822
						],
						"SafeERC20": [
							1046
						],
						"VestingWallet": [
							713
						]
					},
					"id": 714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:3"
						},
						{
							"absolutePath": "SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 1047,
							"src": "118:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 295,
							"src": "144:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEPContext.sol",
							"file": "./BEPContext.sol",
							"id": 407,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 325,
							"src": "168:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Math.sol",
							"file": "./Math.sol",
							"id": 408,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 823,
							"src": "195:20:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 410,
										"name": "BEPContext",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "858:10:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "858:10:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 409,
								"nodeType": "StructuredDocumentation",
								"src": "217:614:3",
								"text": " @title VestingWallet\n @dev This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens\n can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\n The vesting schedule is customizable through the {vestedAmount} function.\n Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable."
							},
							"fullyImplemented": true,
							"id": 713,
							"linearizedBaseContracts": [
								713,
								324
							],
							"name": "VestingWallet",
							"nameLocation": "841:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 415,
									"name": "EtherReleased",
									"nameLocation": "881:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "903:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "895:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:16:3"
									},
									"src": "875:36:3"
								},
								{
									"anonymous": false,
									"id": 421,
									"name": "ERC20Released",
									"nameLocation": "922:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "952:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "936:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "967:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "959:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:39:3"
									},
									"src": "916:59:3"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_released",
									"nameLocation": "997:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "981:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_erc20Released",
									"nameLocation": "1048:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "1012:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 426,
										"keyType": {
											"id": 424,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1012:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 425,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1031:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "immutable",
									"name": "_beneficiary",
									"nameLocation": "1094:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "1068:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 428,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1068:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"mutability": "immutable",
									"name": "_start",
									"nameLocation": "1137:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "1112:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 430,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1112:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "immutable",
									"name": "_duration",
									"nameLocation": "1174:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "1149:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 432,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1149:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "1416:217:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "beneficiaryAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "1434:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1464:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1456:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 445,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1456:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1456:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1434:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6757616c6c65743a2062656e6566696369617279206973207a65726f2061646472657373",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1468:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918",
																"typeString": "literal_string \"VestingWallet: beneficiary is zero address\""
															},
															"value": "VestingWallet: beneficiary is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918",
																"typeString": "literal_string \"VestingWallet: beneficiary is zero address\""
															}
														],
														"id": 443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1426:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1426:87:3"
											},
											{
												"expression": {
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 453,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1523:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 454,
														"name": "beneficiaryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "1538:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1523:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "1523:33:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 457,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "1566:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1575:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1566:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "1566:23:3"
											},
											{
												"expression": {
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 461,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "1599:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 462,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "1611:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1599:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "1599:27:3"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1190:104:3",
										"text": " @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
									},
									"id": 466,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "beneficiaryAddress",
												"nameLocation": "1328:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "1320:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "1363:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "1356:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 437,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1356:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "1394:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "1387:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 439,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1387:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:105:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:0:3"
									},
									"scope": 713,
									"src": "1299:334:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "1746:2:3",
										"statements": []
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "1639:67:3",
										"text": " @dev The contract should be able to receive Eth."
									},
									"id": 471,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1718:2:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:3"
									},
									"scope": 713,
									"src": "1711:37:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1879:36:3",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "1896:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "1889:19:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1754:59:3",
										"text": " @dev Getter for the beneficiary address."
									},
									"functionSelector": "38af3eed",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1827:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1838:2:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1870:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:9:3"
									},
									"scope": 713,
									"src": "1818:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "2036:30:3",
										"statements": [
											{
												"expression": {
													"id": 486,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "2053:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "2046:13:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1921:55:3",
										"text": " @dev Getter for the start timestamp."
									},
									"functionSelector": "be9a6555",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "1990:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1995:2:3"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2027:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:9:3"
									},
									"scope": 713,
									"src": "1981:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2191:33:3",
										"statements": [
											{
												"expression": {
													"id": 495,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 433,
													"src": "2208:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 494,
												"id": 496,
												"nodeType": "Return",
												"src": "2201:16:3"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "2072:56:3",
										"text": " @dev Getter for the vesting duration."
									},
									"functionSelector": "0fb5a6b4",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "2142:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2150:2:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2182:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:9:3"
									},
									"scope": 713,
									"src": "2133:91:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2349:33:3",
										"statements": [
											{
												"expression": {
													"id": 504,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "2366:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 503,
												"id": 505,
												"nodeType": "Return",
												"src": "2359:16:3"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "2230:54:3",
										"text": " @dev Amount of eth already released"
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "2298:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:3"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2340:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2339:9:3"
									},
									"scope": 713,
									"src": "2289:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2520:45:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 515,
														"name": "_erc20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2537:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"id": 516,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2552:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2537:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "2530:28:3"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2388:56:3",
										"text": " @dev Amount of token already released"
									},
									"functionSelector": "9852595c",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "2458:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2475:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2467:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:15:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2511:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:9:3"
									},
									"scope": 713,
									"src": "2449:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "2740:224:3",
										"statements": [
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "releasable",
														"nameLocation": "2758:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "2750:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2750:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 529,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2791:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2791:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2784:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 527,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "2784:6:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2784:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 526,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																622,
																650
															],
															"referencedDeclaration": 622,
															"src": "2771:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (uint64) view returns (uint256)"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2771:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 533,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																507,
																520
															],
															"referencedDeclaration": 507,
															"src": "2811:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2811:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2771:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2750:71:3"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2831:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 538,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2844:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2831:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "2831:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 542,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "2883:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "EtherReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "2869:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2869:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "EmitStatement",
												"src": "2864:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 550,
																		"name": "beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "2930:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2930:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2922:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2922:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2922:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 553,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "2946:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 545,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "2904:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$294_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "2904:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2904:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "2904:53:3"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2571:128:3",
										"text": " @dev Release the native token (ether) that have already vested.\n Emits a {TokensReleased} event."
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "2713:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2720:2:3"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2740:0:3"
									},
									"scope": 713,
									"src": "2704:260:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "3136:266:3",
										"statements": [
											{
												"assignments": [
													564
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "releasable",
														"nameLocation": "3154:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "3146:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3146:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 566,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "3180:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 569,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3194:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3194:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3187:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 567,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "3187:6:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3187:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 565,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																622,
																650
															],
															"referencedDeclaration": 650,
															"src": "3167:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (address,uint64) view returns (uint256)"
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3167:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 574,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "3223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 573,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																507,
																520
															],
															"referencedDeclaration": 520,
															"src": "3214:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3214:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3167:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3146:83:3"
											},
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 578,
															"name": "_erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3239:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 580,
														"indexExpression": {
															"id": 579,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3254:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3239:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 581,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "3264:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3239:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "3239:35:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 585,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3303:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "3310:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "ERC20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3289:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "EmitStatement",
												"src": "3284:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 593,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "3361:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "3354:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$402_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3354:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 595,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3369:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3369:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "3384:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 589,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "3331:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$1046_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "3331:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$402_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "3331:64:3"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "2970:114:3",
										"text": " @dev Release the tokens that have already vested.\n Emits a {TokensReleased} event."
									},
									"functionSelector": "19165587",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "3098:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3114:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "3106:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3105:15:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3136:0:3"
									},
									"scope": 713,
									"src": "3089:313:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "3622:87:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 612,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3664:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VestingWallet_$713",
																				"typeString": "contract VestingWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VestingWallet_$713",
																				"typeString": "contract VestingWallet"
																			}
																		],
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3656:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 610,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3656:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3656:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3656:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 615,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		507,
																		520
																	],
																	"referencedDeclaration": 507,
																	"src": "3680:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3680:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3656:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 618,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3692:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 609,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3639:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3639:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 608,
												"id": 620,
												"nodeType": "Return",
												"src": "3632:70:3"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "3408:129:3",
										"text": " @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "3551:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3571:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3564:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 603,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3564:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:18:3"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3613:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3612:9:3"
									},
									"scope": 713,
									"src": "3542:167:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "3943:109:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 639,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4009:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VestingWallet_$713",
																					"typeString": "contract VestingWallet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VestingWallet_$713",
																					"typeString": "contract VestingWallet"
																				}
																			],
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4001:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 637,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4001:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4001:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 634,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "3984:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 633,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "3977:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$402_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3977:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$402",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 341,
																	"src": "3977:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3977:38:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 643,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "4027:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 642,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		507,
																		520
																	],
																	"referencedDeclaration": 520,
																	"src": "4018:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4018:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3977:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 646,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "4035:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 632,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3960:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3960:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 631,
												"id": 648,
												"nodeType": "Return",
												"src": "3953:92:3"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "3715:130:3",
										"text": " @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "810ec23b",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "3859:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3880:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3872:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3872:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3894:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3887:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 626,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3887:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3871:33:3"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3934:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:9:3"
									},
									"scope": 713,
									"src": "3850:202:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "4355:257:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 660,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "4369:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 661,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4381:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4381:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4369:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 667,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "4433:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 668,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4445:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4445:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 670,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "4455:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4455:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4445:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4433:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 689,
														"nodeType": "Block",
														"src": "4520:86:3",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 677,
																					"name": "totalAllocation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "4542:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 681,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 678,
																								"name": "timestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 655,
																								"src": "4561:9:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 679,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 489,
																									"src": "4573:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 680,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4573:7:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4561:19:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 682,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4560:21:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4542:39:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 684,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4541:41:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 685,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "4585:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4585:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4541:54:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 659,
																"id": 688,
																"nodeType": "Return",
																"src": "4534:61:3"
															}
														]
													},
													"id": 690,
													"nodeType": "IfStatement",
													"src": "4429:177:3",
													"trueBody": {
														"id": 676,
														"nodeType": "Block",
														"src": "4467:47:3",
														"statements": [
															{
																"expression": {
																	"id": 674,
																	"name": "totalAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "4488:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 659,
																"id": 675,
																"nodeType": "Return",
																"src": "4481:22:3"
															}
														]
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "4365:241:3",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "4390:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4411:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 659,
															"id": 665,
															"nodeType": "Return",
															"src": "4404:8:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "4058:183:3",
										"text": " @dev Virtual implementation of the vesting formula. This returns the amout vested, as a function of time, for\n an asset given its total historical allocation."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestingSchedule",
									"nameLocation": "4255:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "totalAllocation",
												"nameLocation": "4280:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "4272:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4304:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "4297:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 654,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4297:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4271:43:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "4346:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4345:9:3"
									},
									"scope": 713,
									"src": "4246:366:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "4732:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 707,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4781:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VestingWallet_$713",
																		"typeString": "contract VestingWallet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_VestingWallet_$713",
																		"typeString": "contract VestingWallet"
																	}
																],
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4773:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 705,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4773:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4773:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 702,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "4756:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 701,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4749:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$402_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "4749:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4749:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 700,
												"id": 710,
												"nodeType": "Return",
												"src": "4742:45:3"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "4618:36:3",
										"text": " @dev get balance."
									},
									"functionSelector": "f8b2cb4f",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "4668:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4678:15:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4723:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4722:9:3"
									},
									"scope": 713,
									"src": "4659:135:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 714,
							"src": "832:3964:3",
							"usedErrors": []
						}
					],
					"src": "93:4703:3"
				},
				"id": 3
			},
			"Math.sol": {
				"ast": {
					"absolutePath": "Math.sol",
					"exportedSymbols": {
						"Math": [
							822
						]
					},
					"id": 823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 716,
								"nodeType": "StructuredDocumentation",
								"src": "113:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 822,
							"linearizedBaseContracts": [
								822
							],
							"name": "Math",
							"nameLocation": "195:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "337:38:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 726,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "354:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 727,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "359:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "354:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 730,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "367:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "354:14:4",
													"trueExpression": {
														"id": 729,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "363:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 732,
												"nodeType": "Return",
												"src": "347:21:4"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "206:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "279:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "291:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "283:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "302:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "294:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:22:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "328:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:9:4"
									},
									"scope": 822,
									"src": "270:105:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "513:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 744,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "530:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 745,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "534:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "530:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 748,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "542:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "530:13:4",
													"trueExpression": {
														"id": 747,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "538:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 750,
												"nodeType": "Return",
												"src": "523:20:4"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "381:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "455:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "467:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "459:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "478:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "470:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:22:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "504:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:9:4"
									},
									"scope": 822,
									"src": "446:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "734:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 762,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "789:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 763,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "793:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "789:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 765,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "788:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 766,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "799:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 767,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "803:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "799:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 769,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "798:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "808:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "798:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "788:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 761,
												"id": 773,
												"nodeType": "Return",
												"src": "781:28:4"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "556:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "672:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "688:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "680:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "699:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "691:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:22:4"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "725:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:4"
									},
									"scope": 822,
									"src": "663:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "1086:123:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 785,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "1174:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 786,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1178:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1174:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 788,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "1183:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 789,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "1187:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1183:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1192:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1183:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1200:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1183:18:4",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1196:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 796,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1182:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1174:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 784,
												"id": 798,
												"nodeType": "Return",
												"src": "1167:35:4"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "822:188:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1024:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1040:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1032:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1051:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1043:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:22:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1077:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:9:4"
									},
									"scope": 822,
									"src": "1015:194:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1353:158:4",
										"statements": [
											{
												"id": 819,
												"nodeType": "UncheckedBlock",
												"src": "1363:142:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 810,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "1478:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1483:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1478:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1491:2:4",
																		"subExpression": {
																			"id": 814,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "1492:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1478:15:4",
																	"trueExpression": {
																		"id": 813,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "1487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1470:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1470:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1470:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 807,
														"id": 818,
														"nodeType": "Return",
														"src": "1463:31:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "1215:78:4",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1307:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1318:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1311:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 802,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:10:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1344:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:9:4"
									},
									"scope": 822,
									"src": "1298:213:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 823,
							"src": "187:1326:4",
							"usedErrors": []
						}
					],
					"src": "88:1425:4"
				},
				"id": 4
			},
			"SafeERC20.sol": {
				"ast": {
					"absolutePath": "SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"IERC20": [
							402
						],
						"SafeERC20": [
							1046
						]
					},
					"id": 1047,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1047,
							"sourceUnit": 403,
							"src": "125:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1047,
							"sourceUnit": 295,
							"src": "148:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 827,
								"nodeType": "StructuredDocumentation",
								"src": "173:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1046,
							"linearizedBaseContracts": [
								1046
							],
							"name": "SafeERC20",
							"nameLocation": "639:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 830,
									"libraryName": {
										"id": 828,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 294,
										"src": "661:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "655:26:5",
									"typeName": {
										"id": 829,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "673:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "789:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 841,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 844,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "849:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$402",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "849:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "849:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 847,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "874:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "878:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 842,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "826:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "826:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 840,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "799:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "799:86:5"
											}
										]
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "696:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "725:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "718:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$402",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 831,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "718:6:5"
													},
													"referencedDeclaration": 402,
													"src": "718:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$402",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "748:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "740:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "768:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "760:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:71:5"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:5"
									},
									"scope": 1046,
									"src": "687:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1026:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 866,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1056:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 869,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1086:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$402",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 383,
																		"src": "1086:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1086:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 872,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "1115:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 873,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "1121:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "1125:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 867,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1063:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1063:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1063:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 865,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "1036:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "1036:96:5"
											}
										]
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "907:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "940:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "933:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$402",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "933:6:5"
													},
													"referencedDeclaration": 402,
													"src": "933:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$402",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "963:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "955:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "977:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1005:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "997:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:93:5"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:0:5"
									},
									"scope": 1046,
									"src": "898:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "1505:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 891,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "1754:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1763:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1754:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 894,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1753:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 899,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1794:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1046",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1046",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 898,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1786:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 897,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1786:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 900,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1786:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 901,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 885,
																					"src": "1801:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 895,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "1770:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$402",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 361,
																				"src": "1770:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1770:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1813:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1770:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 905,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1769:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1753:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1829:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 890,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1732:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "1732:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 911,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "1925:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 914,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "1955:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$402",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 371,
																		"src": "1955:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1955:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 917,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "1979:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 918,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "1988:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 912,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1932:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1932:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1932:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 910,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "1905:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1905:90:5"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "1145:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1408:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1436:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$402",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 881,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "1429:6:5"
													},
													"referencedDeclaration": 402,
													"src": "1429:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$402",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1459:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1451:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1484:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1476:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:76:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:0:5"
									},
									"scope": 1046,
									"src": "1399:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "2124:194:5",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2142:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 958,
														"src": "2134:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2134:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 939,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2181:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1046",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1046",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2173:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2173:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2173:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 941,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "2188:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 935,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2157:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$402",
																	"typeString": "contract IERC20"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "2157:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2157:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 943,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "2199:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2157:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2134:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2234:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 950,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "2264:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$402",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 371,
																		"src": "2264:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2264:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 953,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "2288:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 954,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "2297:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 948,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2241:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2241:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2241:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$402",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 946,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "2214:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2214:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "2214:97:5"
											}
										]
									},
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2017:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2055:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "2048:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$402",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "2048:6:5"
													},
													"referencedDeclaration": 402,
													"src": "2048:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$402",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "2070:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2103:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "2095:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:76:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:0:5"
									},
									"scope": 1046,
									"src": "2008:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "2440:370:5",
										"statements": [
											{
												"id": 1005,
												"nodeType": "UncheckedBlock",
												"src": "2450:354:5",
												"statements": [
													{
														"assignments": [
															970
														],
														"declarations": [
															{
																"constant": false,
																"id": 970,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2482:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 1005,
																"src": "2474:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 969,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2474:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 979,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 975,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2521:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1046",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1046",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2513:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 973,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2513:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2513:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 977,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "2528:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 971,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$402",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 361,
																"src": "2497:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2497:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2474:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 981,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "2558:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 982,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "2574:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2558:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2581:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 980,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2550:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2550:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 986,
														"nodeType": "ExpressionStatement",
														"src": "2550:75:5"
													},
													{
														"assignments": [
															988
														],
														"declarations": [
															{
																"constant": false,
																"id": 988,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2647:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 1005,
																"src": "2639:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 987,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2639:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 992,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "2662:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 990,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2677:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2662:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2639:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 994,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "2716:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$402",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 997,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 962,
																					"src": "2746:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$402",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 371,
																				"src": "2746:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2746:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1000,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "2770:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1001,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 988,
																			"src": "2779:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 995,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2723:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2723:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2723:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$402",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 993,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "2696:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$402_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2696:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1004,
														"nodeType": "ExpressionStatement",
														"src": "2696:97:5"
													}
												]
											}
										]
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2333:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2371:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2364:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$402",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 961,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 960,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "2364:6:5"
													},
													"referencedDeclaration": 402,
													"src": "2364:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$402",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2394:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2386:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2419:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2411:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:76:5"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2440:0:5"
									},
									"scope": 1046,
									"src": "2324:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "3263:636:5",
										"statements": [
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3625:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "3612:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1016,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3612:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"arguments": [
														{
															"id": 1023,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "3666:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3672:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1020,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "3646:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$402",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$402",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3638:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1018,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3638:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3638:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 88,
														"src": "3638:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3612:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1027,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "3721:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3721:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3741:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3721:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "IfStatement",
												"src": "3717:176:5",
												"trueBody": {
													"id": 1042,
													"nodeType": "Block",
													"src": "3744:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1034,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1017,
																				"src": "3816:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1036,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3829:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1035,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3829:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1037,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3828:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1032,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3805:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3805:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3805:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3837:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1031,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3797:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3797:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "3797:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2816:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3202:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$402",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1009,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "3222:6:5"
													},
													"referencedDeclaration": 402,
													"src": "3222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$402",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:33:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3263:0:5"
									},
									"scope": 1046,
									"src": "3193:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1047,
							"src": "631:3270:5",
							"usedErrors": []
						}
					],
					"src": "100:3801:5"
				},
				"id": 5
			}
		}
	}
}